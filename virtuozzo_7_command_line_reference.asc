Virtuozzo 7 Beta Command Line Reference
=======================================
:doctype: book

Introduction
------------

Virtuozzo 7 is a virtualization solution that allows you to run multiple virtual machines and containers on a single physical server.
  
This chapter provides general information about Virtuozzo and this guide.

About Virtuozzo 7 
~~~~~~~~~~~~~~~~~
  
Virtuozzo 7 is a virtualization solution that allows you to simultaneously run multiple Virtuozzo virtual machines and containers on a single physical server. With Virtuozzo, you can efficiently share your server's hardware resources among virtual machines and containers.
  
Virtuozzo is installed directly on the server hardware and does not need any operating system to function. Once it is installed, Virtuozzo allows you to create virtual machines and containers and manage them using the following tools:

[options="compact"]
* *Virtuozzo command-line interface (CLI)*. The command-line interface comprises a set of Virtuozzo command-line utilities that you can use to manage virtual machines and containers, both locally and remotely.
* *Virtual Automation*. Virtual Automation is a remote management tool that allows you to manage physical servers and their virtual machines and containers with the help of a standard Web browser on any platform.
  
Graphically, a server with the Virtuozzo software installed can be represented as follows:

image::images/psbm55_architecture.png[align="center"]

About This Guide 
~~~~~~~~~~~~~~~~
  
This guide is a reference of Virtuozzo configuration files and command-line utilities. It familiarizes you with the way to configure Virtuozzo to meet your requirements and to perform various tasks by using the corresponding command-line utilities.
  
The primary audience for this guide is anyone who is looking for an explanation of a particular configuration option, needs help for a particular command, or is seeking for a command to perform a certain task.

Managing Virtuozzo 7 
--------------------

This chapter provides instructions on configuration files, scripts, and command-line utilities that can be used to configure the settings related to the Virtuozzo software and the hardware node.

  
Virtuozzo Configuration Files 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  
The table below lists the configuration files available in Virtuozzo 7. Most files are located in the `/etc` directory on a hardware node. If a configuration file is stored in a place other than the hardware node, its exact location is specified.

[options="header",cols="2a,3a"]
|====
|Name|Description

|`/etc/vz/vz.conf`|Global configuration file. This file keeps system-wide settings, such as the default location of templates and global network settings.
|+/etc/vz/conf/_&lt;CT_name&gt;_.conf+|Private configuration file of a container with the ID +_&lt;CT_name&gt;_+. This file keeps container-specific settings: resource management parameters, the location of its private area, IP address, and so on.
|+/etc/vz/conf/ve-_&lt;name&gt;_.conf-sample+|Sample files containing a number of default container configurations. Some pre-created samples file are shipped with Virtuozzo (e.g., `basic` and `confixx`), but you can also create your own samples to meet your demands.
|+/usr/libexec/libvzctl/dists/_&lt;distribution_name&gt;_.conf+|Linux distribution configuration files. These files define what scripts should be run when you perform specific operations with containers (e.g., when you set a new IP address for a container). The scripts differ from Virtuozzo action scripts and depend on the Linux version a particular container is running.
|`/etc/vz/oom-groups.conf`|OOM killer configuration file with task badness adjustments.
|`/etc/vz/conf/networks_classes`|Configuration file defining the network classes for traffic shaping and bandwidth management.
|`/etc/sysctl.conf`|Kernel parameters. Virtuozzo adjusts a number of kernel `sysctl` parameters and modifies the default `/etc/sysctl.conf` file.
|`/etc/vzstat.conf`|Configuration file listing the warning and error levels for resource control parameters. If a parameter hits the warning or error value set for it, the `vzstat` utility will display this parameter in yellow or red.
|`/etc/vztt/vztt.conf`|Configuration file used by the `vzpkg` utility to manage OS and application EZ templates.
|====

Global Virtuozzo Configuration File 
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
Virtuozzo keeps its system wide configuration parameters in the `/etc/vz/vz.conf` configuration file. This file is in shell format. Keep in mind that Virtuozzo scripts source this file - thus, shell commands in this file will cause system to execute them under root account. Parameters in this file are presented in the form `PARAMETER="value"`. Logically all the parameters belong to the following groups: global parameters, logging, disk quotas, template, network traffic, containers, validation and overcommitment, supplementary parameters, and name-based hosting parameters. Below is the description of all the parameters defined in this version of Virtuozzo.

[options="header",cols="2a,3a,1a"]
|====
|Name|Description|Default Value

|`VIRTUOZZO`|This can be either `yes` or `no`. Virtuozzo System V startup script checks this parameter. If set to `no`, then Virtuozzo modules are not loaded. You might set it to "no" if you want to perform system maintenance and do not want to bring up all containers on the server.|`yes`
|`HTTP_PROXY`|Specifies either the hostname or the IP address of the HTTP proxy server. After setting this parameter and in case you use an HTTP proxy server for handling all HTTP requests, the Virtuozzo utilities communicating with the outer world through HTTP will use this server for managing all your HTTP messages.|n/a
|`ACTIONLOGDIR`|This is the directory where `prlctl` keeps a log of its actions in the format suitable for Virtuozzo statistics daemon `hwcoll`.|`/vz/actionlog`
|`LOCKDIR`|Actions on a container should be serialized, since two simultaneous operations on the same container may break its consistency. Virtuozzo keeps lock files in this directory in order to serialize access to one container.|`/vz/lock`
|`REMOVEMIGRATED`|Specifies whether the private area and the configuration file of the container moved to a new server with the `pmigrate` command should be destroyed on the Source Server (the value of the parameter is set to `yes`) or renamed to have the `.migrated` suffix (the value of the parameter is set to `no`). You may wish to leave the container private area and the configuration file to make migration faster. This configuration value can be overridden by the `pmigrate` command-line options.|`no`
|`VEFSTYPE`|File system to use when caching OS templates:

[options="compact"]
* *ext4*: Use to create containers with the new layout.
* *vz4*: Use to create legacy containers.|`ext4`
|`IPV6`|Defines whether the IPv6 support is enabled on the hardware node.|`yes`
|`GOLDEN_IMAGE`|Enables (`yes`) or disables (`no`) embedding application templates into OS EZ template cache prior to creating containers based on this cache.|`yes`
|`VZ_TOOLS_BCID`|Enables limits for the backup, restore, and migration operations. Make sure that the value of this parameter does not coincide with the ID assigned to some of your containers. For example, if you leave the default value 2, ensure that no container with ID 2 exists on the Node.|&nbsp;
|`VZ_TOOLS_IOLIMIT`|Sets the disk I/O limit for the backup, restore, and migration operations, in bytes per second. Not set by default.|&nbsp;
|====

.Logging parameters
[options="header",cols="1a,3a,1a"]
|====
|Name|Description|Default Value

|`LOGGING`|This parameter defines whether `prlctl` should log its actions.|`yes`
|`LOGFILE`|File where `libvzctl` logs the actions of programs linked to this library.|`/var/log/vzctl.log`
|`LOG_LEVEL`|Logging verbosity, from 0 to 10 (higher is more verbose).|`0`
|====

.Disk quota parameters
[options="header",cols="1a,3a,1a"]
|====
|Name|Description|Default Value

|`DISK_QUOTA`|Enables or disables disk quotas for containers. If set to `no` then disk space accounting will be disabled.|`yes`
|====

.Network traffic parameters
[options="header",cols="1a,3a,1a"]
|====
|Name|Description|Default Value

|`TRAFFIC_SHAPING`|Traffic shaping allows you to limit the bandwidth consumed by containers for outgoing traffic. If it is set to "yes", then limitations will be turned on. If you want to use this feature, `TRAFFIC_ACCOUNTING` should be set to `yes` as well.|`no`
|`BANDWIDTH`|This is the list of network interfaces on which we want to shape the traffic and their speed in the form of "dev:rate". The rate is measured in Kbps. If you want to shape traffic on more than one interface, set this parameter to `dev1:rate1 dev2:rate2`. For example, for two 100&nbsp;Mbps Ethernet cards, set it to `eth0:102400 eth1:102400`.|`eth0:102400`
|`TOTALRATE`|This parameter sets the size of the bandwidth pool for all containers. It is the upper limit for the bandwidth available to all your containers and is specified in the form of "dev:class:rate". The rate is measured in Kbps. Containers can consume bandwidth up to this limit in addition to the limit specified by the `RATE` parameter. Default value corresponds to 4&nbsp;Mbps limit for the Class 1 containers.|`eth0:1:4096`
|`RATE`|This parameter is the default bandwidth guaranteed to a container for outgoing traffic if the container configuration file does not explicitly specify a different value. This value is in the same format as `TOTALRATE` and its default value is "eth0:1:8". The rate is measured in Kbps. Note that 8&nbsp;Kbps, offered by the default configuration, is the guarantee and the container cannot consume less than this value and more than the sum of this value and `TOTALRATE`.|`eth0:1:8`
|`RATEMPU`|This optional parameter (where `MPU` stands for "minimum packet unit") limits the packet rate by making packets smaller than `MPU` in size consume HTB tokens. With it, small packets can be accounted as larger ones and limited by `TOTALRATE` and `RATE` parameters. Approximately, the maximum packets per second rate can be calculated as `TOTALRATE` / `RATEMPU`.|+&#042;:1:1000+
|====

.Template parameters
[options="header",cols="1a,3a,1a"]
|====
|Name|Description|Default Value

|`TEMPLATE`|This is the directory where to find templates. It is not recommended to redefine this option since all Virtuozzo templates use the default directory.|`/vz/template`
|====

.Container default parameters
[options="header",cols="2a,3a,2a"]
|====
|Name|Description|Default Value

|`VE_ROOT`|The mount point for container's `root`. Must contain the literal string +&#036;VEID+ that will be substituted with the actual container ID.|+/vz/root/&#036;VEID+
|`VE_PRIVATE`|The directory where all the files and directories specific to the container are stored. Must contain the literal string +&#036;VEID+ that will be substituted with the actual container ID.|+/vz/private/&#036;VEID+
|`CONFIGFILE`|The default configuration file sample to be used for the container creation; it may be overridden with the `--config` option of the `vzctl create` command.|`basic`
|`DEF_OSTEMPLATE`|The default OS template to be used for the container creation.|`centos-7`
|`VE_ENVIRONMENT`|Additional environment variables to be passed to the container `init` process. Should be provided as any number of +__&lt;name&gt;__=__&lt;value&gt;__+ pairs separated by spaces.|&nbsp;
|====

.Container validation and overcommitment parameters
[options="header",cols="4a,3a,1a"]
|====
|Name|Description|Default Value

|`VE_VALIDATE_ACTION`|Defines whether the container configuration should be validated when a container is started. If this parameter is set to "warning", a warning is displayed in case of misconfiguration. If set to "error", the container is not started in case of misconfiguration. If set to "fix", the configuration is automatically corrected.|`none`
|`OVERCOMMITMENT_ACTION`|Defines whether the server should be checked for the overcommitment of resources when a container is started. If this parameter is set to "warning", a warning is displayed in case of overcommitment. If set to "error", the container that would cause overcommitment is not started. When checking for overcommitment, the following five parameters are checked.|`none`
|`OVERCOMMITMENT_LEVEL_LOWMEM`|The percentage of committed memory residing at lower addresses and directly accessed by the kernel.|`120`
|`OVERCOMMITMENT_LEVEL_MEMSWAP`|The percentage of committed memory available for applications including both RAM and swap space.|`90`
|`OVERCOMMITMENT_LEVEL_ALLOCMEM`|The allocation memory commitment level is the ratio of the memory size guaranteed to be  available for allocation to the capacity of the system.|`100`
|`OVERCOMMITMENT_LEVEL_ALLOCMEM_TOT`|The number shows how much memory the applications are allowed to allocate in comparison with the capacity of the system.|`1000`
|`OVERCOMMITMENT_LEVEL_ALLOCMEM_MAX`|This allocation memory commitment level is the ratio of the maximal (among all running containers) amount of allocated memory to the capacity of the system.|`60`
|====

Container Configuration File 
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
Each container has its own configuration file, which is stored in the `/etc/vz/conf` directory and has a name like +_&lt;CT_name&gt;_.conf+. This file has the same format as the global configuration file. The settings specified in this file can be subdivided into the following categories:

[options="compact"]
* miscellaneous,
* resource management parameters,
* networking.

Miscellaneous Parameters
++++++++++++++++++++++++
  
The table below list the miscellaneous parameters you can set in the configuration file of a container:

[options="header",cols="1a,3a"]
|====
|Name|Description

|`VERSION`|Specifies the Virtuozzo version the configuration file applies to. `2` relates to Virtuozzo version 4 and later.
|`ONBOOT`|Specifies whether the container should be started automatically on system startup. Virtuozzo automatically starts all containers that have this parameter set to "yes" upon startup.
|`ALLOWREBOOT`|Specifies whether the container may be restarted with the `reboot` command run from inside. If omitted or set to `yes`, restarting is allowed.
|`OSTEMPLATE`|The name of the OS template that was used for creating the container. You do not have to change this parameter; `prlctl` will set it for you upon calling the `prlctl create` command (or using the defaults from the global configuration file). The `.` symbol before the OS template name, if specified, indicates that this is an EZ OS template.
|`TEMPLATES`|In a configuration file of an existing container, this parameter lists application templates installed with the `prlctl create` or `vzpkg install` commands. In this case you should not modify it, because it is used by template management utilities to track installation history. This parameter is omitted if no templates have been installed to the container.
|`VE_ROOT`|Overrides the `VE_ROOT` parameter from the global configuration file.
|`VE_PRIVATE`|Overrides the `VE_PRIVATE` parameter from the global configuration file.
|`VE_ENVIRONMENT`|Overrides the `VE_ENVIRONMENT` parameter from the global configuration file.
|`TECHNOLOGIES`|Determines a set of technologies which should be provided by the Virtuozzo kernel for container operation. Currently, this parameter can contain the information about the following technologies:

[options="compact"]
* The system architecture of the container (`x86`, `x86_64`, or `i64`).
* Whether the container is based on the OS template supporting the Native POSIX Thread Library (NPTL). In this case, the `nptl` entry is specified as the value of this parameter.
* Whether the OS EZ template the container is based on requires the `sysfs` filesystem support (e.g., the OS EZ template for SUSE Linux Enterprise 10).
|`DISABLED`|If set to `yes`, disables the container making it impossible to start the container once it was stopped. You can start the disabled container after setting the value of this parameter to `no`.
|`DESCRIPTION`|Sets the description for the container.

[NOTE]
[subs="quotes"]
====
*Note:* You are allowed to use only symbols in the 'A-z' and '0-9' ranges in your descriptions.
====
|`NAME`|The name assigned to the container. You can use this name, along with the container ID, to refer to the container while performing this or that container-related operation on the server. Follow the following rules while setting the container name:

[options="compact"]
* The name should contain the `A-Z`, `a-z`, `0-9`, `\`, `-`, and `_` symbols only.
* If the name consists of two or more words, it should be quoted (e.g., `My container 101`).
|`ORIGIN_SAMPLE`|The configuration sample the container was based on when created.
|`CONFIG_CUSTOMIZED`|Indicates whether any of the container configuration parameters have been modified as regards its original configuration sample. If this parameter is omitted, its value is considered as `no`.
|`UUID`|The container unique identifier. This identifier is used by certain Virtuozzo utilities during their execution.
|====

Resource Management Parameters
++++++++++++++++++++++++++++++
  
All resource management parameters can be subdivided into the CPU, disk, system, and VSwap categories for your convenience. Any parameter can be set with the `prlctl set` command and the corresponding option name (in the lower case, e.g., `--kmemsize` for `KMEMSIZE`, etc.). See <<_managing_containers>> for more details. The *Typical value* column, if present, specifies a range of reasonable parameter values for different applications, from light to huge heavy loaded containers. If the barrier and limit fields are in use, ranges for both thresholds are given.
  
.CPU Parameters
[options="header",cols="2a,3a,1a"]
|====
|Parameter|Description|Typical value
|`CPUUNITS`|CPU weight. This is a positive integer number that defines how much CPU time the container can get as compared to the other virtual machines and containers running on the server. The larger the number, the more CPU time the container can receive. Possible values range from 8 to 500000. If this parameter is not set, the default value of 1000 is used.|`250...1000`
|`CPULIMIT`, `CPULIMIT_MHZ`|CPU limit, in per cent  (`CPULIMIT`) or megahertz (`CPULIMIT_MHZ`), the container is not allowed to exceed. The parameter is not set for newly created containers; so they can consume all free CPU power of the server. When setting this parameter in per cent, keep in mind that one CPU core makes up 100%. So if the server has 4 CPU cores, the total CPU power will equal 400%.|&nbsp;
|`CPUS`|Number of CPU cores defining the CPU limit for a container. The limit is calculated by multiplying the power of one CPU core by the number of the specified CPU cores. This option also defines the number of CPUs shown to users from inside a container. This parameter is not set for newly created containers; so they can consume all free CPU power of the server.|&nbsp;
|`CPUMASK`|The CPU affinity mask defining which CPUs on the Node can be used to handle the processes running in the container. The CPU mask can be specified as both separate CPU index numbers (1,2,3) and CPU ranges (2-4,5-7).|&nbsp;
|`NODEMASK`|The NUMA node mask defining a NUMA node to bind the container to. Once you set the mask, the processes running in the container will be executed only on the CPUs that belong to the specified NUMA node.|&nbsp;
|====

.Disk Parameters
[options="header",cols="2a,3a,1a"]
|====
|Parameter|Description|Typical value
|`DISKSPACE`|Total size of disk space that can be consumed by the container, in 1 KB blocks.|`204800...10485760-
204800...11534340`
|`QUOTAUGIDLIMIT`|This parameter enables (if set to a value other than `0`) or disables (if set to `0`) per-user and per-group quotas for further management with the standard Linux `quota` utility. Enabling per-user and per-group quotas for a container requires restarting the container.|`0...N`
|`IOPRIO`|The container priority for disk I/O operations. The higher the priority, the more time the container has for writing to and reading from the disk. The default container priority is 4.|`0-7`
|`IOPSLIMIT`|The maximum number of disk input and output operations per second a container is allowed to perform. By default, any newly created container does not have the IOPS limit set and can perform so many disk I/O operations per second as necessary.|&nbsp;
|`IOLIMIT`|The bandwidth a container is allowed to use for its disk input and output (I/O) operations. By default, the limit is set in megabytes per second. However, you can use the following suffixes to use other measurement units:

[options="compact"]
* `G` - sets the limit in gigabytes per second.
* `K` - sets the limit in kilobytes per second.
* `B` - sets the limit in bytes per second.

In the current version of Virtuozzo, the maximum I/O bandwidth limit you can set for a container is 2 GB per second.

The default I/O bandwidth limit for all newly created containers is set to 0, which means that no limits are applied to any containers.|&nbsp;
|====

.System Parameters
[options="header",cols="1a,3a,2a"]
|====
|Parameter|Description|Typical value
|`NUMPROC`|Number of processes and threads allowed. Upon hitting this limit, container will not be able to start a new process or thread.|`40...400`
|`AVNUMPROC`|Number of processes expected to run in the container on average. This is informational parameter used to ensure configuration correctness.|`0...NUMPROC`
|`NUMTCPSOCK`|Number of TCP sockets (`PF_INET` family, `SOCK_STREAM` type). This parameter limits the number of TCP connections and, thus, the number of clients the server application can handle in parallel.|`40...500`
|`NUMOTHERSOCK`|Number of sockets other than TCP. Local (UNIX-domain) sockets are used for communications inside the system. UDP sockets are used for Domain Name Service (DNS) queries, as example. UDP and other sockets may also be used in some very special applications (SNMP agents and others).|`40...500`
|`VMGUARPAGES`|Memory allocation guarantee, in pages. Applications are guaranteed to be able to allocate memory while the amount of memory accounted as `privvmpages` does not exceed the configured barrier of the `vmguarpages` parameter. Above the barrier, memory allocation is not guaranteed and may fail in case of overall memory shortage.|`1725...107520`
|`KMEMSIZE`|Size of unswappable kernel memory, allocated for internal kernel structures for the processes of a particular container. Typical amounts of kernel memory is 16...50 KB per process.|`798720...13148160-
851968...14024704`
|`TCPSNDBUF`|The total size of send buffers for TCP sockets, i.e. the amount of kernel memory allocated for data sent from applications to TCP sockets, but not acknowledged by the remote side yet.|`159744...5365760-
262144...10458760`
|`TCPRCVBUF`|Total size of receive buffers for TCP sockets. Amount of kernel memory, received from remote side but not read by local application yet.|`159744...5365760-
262144...10458760`
|`OTHERSOCKBUF`|Total size of UNIX-domain socket buffers, UDP and other datagram protocols send buffers.|`61440...1503232-
163840...4063232`
|`DGRAMRCVBUF`|Total size of receive buffers of UDP and other datagram protocols.|`32768...262144`
|`OOMGUARPAGES`|Out-of-memory guarantee, in pages. Any container process will not be killed even in case of heavy memory shortage if current memory consumption (including both physical memory and swap) until the `oomguarpages` barrier is not reached.|`1725...107520`
|`LOCKEDPAGES`|Memory not allowed to be swapped out (locked with the `mlock()` system call), in pages (one page is 4 KB).|`4...4096`
|`SHMPAGES`|Total size of shared memory (including IPC, shared anonymous mappings and `tmpfs` objects), allocated by processes of a particular container, in pages.|`512...16384`
|`PRIVVMPAGES`|Size of private (or potentially private) memory, allocated by an application. Memory that is always shared among different applications is not included in this resource parameter.|`3072...151200-
3450...1612800`
|`NUMFILE`|Number of files opened by all container processes.|`512...8192`
|`NUMFLOCK`|Number of file locks created by all container processes.|`50...200-60...220`
|`NUMPTY`|Number of pseudo-terminals. For example, the `ssh` session, `screen`, the `xterm` application consumes pseudo-terminal resources.|`4...64`
|`NUMSIGINFO`|Number of `siginfo` structures (essentially this parameter limits the size of signal delivery queue).|`256...512`
|`DCACHESIZE`|Total size of `dentry` and `inode` structures locked in memory. As example, application, first opening the `/etc/passwd` file, locks entries corresponding to `etc` and `passwd` inodes. If a second application opens the `/etc/shadow` file - only entry corresponding to `shadow` is charged, because `etc` is charged already.|`184320...3932160-
196608...4194304`
|`PHYSPAGES`|Total size of RAM used by processes. This parameter is used for accounting purposes only. It shows the usage of RAM by the container. For memory pages used by several different containers (mappings of shared libraries, for example), only a fraction of a page is charged to each container. The sum of the `physpages` for all containers corresponds to the total number of pages used in the system by all accounted users.|`Not limited`
|`NUMIPTENT`|The number of IP packet filtering entries.|`12...128`
|====

.VSwap Parameters
[options="header",cols="1a,3a,1a"]
|====
|Parameter|Description|Typical value

|`PHYSPAGES`|Amount of RAM that can be used by the processes of a container, in 4KB pages.|&nbsp;
|`SWAP`|Amount of swap space that can be used by the container for swapping out memory once the RAM is exceeded, in 4KB pages.|&nbsp;
|`VM_OVERCOMMIT`|Memory overcommit factor that defines the memory allocation limit for a container. The limit is calculated as `(PHYSPAGES + SWAP) * factor`.|`Not limited`
|====

Networking Parameters
+++++++++++++++++++++
  
Network-related parameters allow you to set bandwidth management parameters, hostname and IP addresses that a container can use, and other parameters.

[options="header",cols="1a,3a"]
|====
|Name|Description

|`HOSTNAME`|If this parameter is specified, then `prlctl` will set the hostname to its value upon the next container start. This parameter can be omitted. In this case, the container administrator should configure the hostname manually.
|`IP_ADDRESS`|This is the list of IP addresses, which can be used on container network interfaces. This list is an argument of the container start call and it is impossible to assign IP address from inside the container if the address is not on the list. Any IP address assigned from within the container will be visible only within the container.
|`NAMESERVER`|The IP address of the DNS server the container is supposed to use. More than one server can be specified in the space-separated format.
|`SEARCHDOMAIN`|DNS search domains for the container. More than one domain can be specified.
|`NETDEV`|The names of physical network adapters that have been moved from the server to the given container.
|`NETFILTER`|Indicates which `iptables` modules are allowed for the container. If some of the allowed modules are not loaded on the destination Hardware Node after migration or restoration from backup, they will be automatically loaded on the migrated or restored container start. The following modes are available:

[options="compact"]
* `disabled`: none.
* `stateless`: (default) all modules except `conntrack` and NAT-related.
* `stateful`: all modules except NAT-related.
* `full`: all modules.
|`NETIF`|Specifies a number of parameters for the virtual network adapters existing inside the container. These parameters include:

[options="compact"]
* `ifname`: the name of the `veth` virtual Ethernet interface inside the container.
* `mac`: the MAC address assigned to the `veth` virtual Ethernet interface inside the container.
* `host_mac`: the MAC address assigned to the `veth` virtual Ethernet interface on the server.
* `network`: the name of the virtual network where the `veth` virtual network adapter is included.
* `ip`: the IP address(es) assigned to the `veth` virtual network adapter.
|`RATE`|If traffic shaping is turned on, then this parameter specifies bandwidth guarantee, in Kbps, for the container. The parameters should be set in the form of `eth0:1:8`.
|`RATEBOUND`|If set to `yes`, the bandwidth guarantee is also the limit for the container, and the container cannot borrow the bandwidth from the `TOTALRATE` bandwidth pool.
|====

Linux Distribution Configuration Files 
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
Some Virtuozzo tools (e.g., `prlctl`) need to run special scripts inside a container to perform certain operations on it. However, carrying out one and the same operation inside containers running different Linux versions may require execution of different actions. This may be caused by the fact that different Linux distributions store files in different locations, use different commands to complete one and the same task, and so on. To distinguish between containers running different Linux versions and to determine what scripts should be executed while performing the relevant container-related operations, Virtuozzo uses special distribution configuration files located in the `/usr/libexec/libvzctl/dists` directory on the server.
  
There are a number of distribution configuration files shipped with Virtuozzo by default (`centos.conf`, `fedora-core.conf`, `gentoo.conf`, etc.). To view all configuration files available on your Virtuozzo, you can go to the `/usr/libexec/libvzctl/dists` directory and issue the `ls` command. The distribution configuration files will be displayed in the form of +_&lt;Linux_distribution&gt;_-_&lt;version&gt;_.conf+ where +_&lt;Linux_distribution&gt;_+ and +_&lt;version&gt;_+ denote the name of the Linux distribution and its version, respectively (e.g., `centos-7.conf`).
  
Any distribution configuration file consists of a number of entries in the form of +_&lt;parameter_name&gt;_=_&lt;script_name&gt;_+ where +_&lt;parameter_name&gt;_+ denotes the name of the parameter defining the operation when the script in the right part of the entry is to be executed and +_&lt;script_name&gt;_+ is the name of the script to be run on performing the operation defined by the parameter in the left part of the entry. In the current version of Virtuozzo, the following parameters are used to define what scripts should be executed for the corresponding Linux version a container is running:

* `ADD_IP`: the script specified as the value of this parameter has the default name of +_&lt;distribution_name&gt;_-add_ip.sh+ and is used to configure the network settings during the container startup and the IP address(es) assignment. The script is launched inside the container on executing the following commands:
+
[subs="quotes"]
----
prlctl start _&lt;CT_name&gt;_
prlctl set _&lt;CT_name&gt;_ --ipadd _&lt;IP_address&gt;_
prlctl set _&lt;CT_name&gt;_ --ipadd _&lt;IP_address&gt;_ --ipdel all
----
* `DEL_IP`: the script specified as the value of this parameter has the default name of +_&lt;distribution_name&gt;_-del_ip.sh+ and is used to delete an existing IP address from the container. The script is launched inside the container on executing the following commands:
+
[subs="quotes"]
----
prlctl set _&lt;CT_name&gt;_ --ipdel _&lt;IP_address&gt;_
prlctl set _&lt;CT_name&gt;_ --ipdel all
----
* `SET_HOSTNAME`: the script specified as the value of this parameter has the default name of +_&lt;distribution_name&gt;_-set_hostname.sh+ and is used to configure the hostname of the container. The script is launched inside the container on executing the following command:
+
[subs="quotes"]
----
prlctl set _&lt;CT_name&gt;_ --hostname _&lt;name&gt;_
----
* `SET_DNS`: the script specified as the value of this parameter has the default name of +_&lt;distribution_name&gt;_-set_dns.sh+ and is used to configure DNS parameters in the `/etc/resolv.conf` file. The script is launched inside the container on executing the following command:
+
[subs="quotes"]
----
prlctl set _&lt;CT_name&gt;_ --searchdomain _&lt;domain&gt;_ --nameserver _&lt;IP_address&gt;_
----
* `SET_USERPASS`: the script specified as the value of this parameter has the default name of +_&lt;distribution_name&gt;_-set_userpass.sh+ and is used to add a new user or change the current password. The script is launched inside the container on executing the following command:
+
[subs="quotes"]
----
prlctl set _&lt;CT_name&gt;_ --userpasswd __&lt;user&gt;__:__&lt;passwd&gt;__
----
* `SET_UGID_QUOTA`: the script specified as the value of this parameter has the default name of +_&lt;distribution_name&gt;_-set_ugid_quota.sh+ and is used to set up per-user/group quota. The script is launched inside the container on executing the following command:
+
[subs="quotes"]
----
prlctl set _&lt;CT_name&gt;_ --quotaugidlimit _&lt;num&gt;_
----
* `POST_CREATE`: the script specified as the value of this parameter has the default name of +_&lt;distribution_name&gt;_-postcreate.sh+ and is used to perform certain tasks (e.g., to modify the `crontab` files) after the container creation. This script is launched on the server on executing the following command:
+
[subs="quotes"]
----
prlctl create _&lt;CT_name&gt;_
----
* `POST_MIGRATE`: the script specified as the value of this parameter has the default name of +_&lt;distribution_name&gt;_-post_migrate.sh+ and is used to perform certain operations on the container where the physical server has been successfully migrated. This script is launched inside the container on executing the following command:
+
[subs="quotes"]
----
vzp2v [+_&lt;options&gt;_+] --ctid _&lt;CT_name&gt;_
----
  
The scripts specified in distribution configuration files are located in the `/usr/libexec/libvzctl/dists/scripts` directory on the server and executed on performing the aforementioned operations on the containers. After an operation has been initiated, the `prlctl` or `vzp2v` utility turns to the corresponding container configuration file, looks for the value of the `DISTRIBUTION` variable or, if the latter is not present, of the `OSTEMPLATE` variable in this file, and defines on their basis what Linux version the given container is running. After that, `prlctl` reads the corresponding configuration file for the determined Linux version from the `/usr/libexec/libvzctl/dists/` directory and executes the scripts specified in this file.

[NOTE]
[subs="quotes"]
====
*Note:* If no distribution is specified as the value of the `DISTRIBUTION` and `OSTEMPLATE` variables in the container configuration file or no configuration file for the given Linux version was found in the `/usr/libexec/libvzctl/dists` directory, the `default` file from this directory is used.
====

Network Classes Definition File 
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
In Virtuozzo, both traffic accounting and bandwidth management are based on network classes. The network classes’ definition file (`/etc/vz/conf/networks_classes`) describes network classes that Virtuozzo recognizes. Currently, there can be up to 15 classes defined.
  
The lines in this file have the following format:
  
[subs="quotes"]
----
_&lt;class_ID&gt;_ _&lt;IP_address&gt;_/_&lt;prefix_length&gt;_
----
  
where +_&lt;class_ID&gt;_+ defines the network class identifier, +_&lt;IP_address&gt;_+ defines the starting IP address, and +_&lt;prefix_length&gt;_+ defines the subnet mask. In pair +_&lt;IP_address&gt;_+ and +_&lt;prefix_length&gt;_+ define the range of IP addresses for this class. There may be several lines for each class. Classes should be defined after Class 1 and represent exceptions from the "matching-everything" rule of Class 1. Class 0 has a special meaning and defines the IP ranges for which no accounting is done (this server container addresses).
  
The definition of class 1 is required; any class except class 1 can be omitted. However, it is recommended to define class 0 correctly as it will improve performance. For example:
  
[subs="quotes"]
----
# HW node VPS's networks
0 10.10.10.0/24
0 10.10.15.0/24
# all IP("local" traffic)
1 0.0.0.0/0
# class 2 - "foreign" traffic
#2 10.0.0.0/8
#2 11.0.0.0/8
# inside "foreign" network there
# is a hole with "local" traffic
#1 10.10.16.0/24
----
  
Kernel Parameters
^^^^^^^^^^^^^^^^^
 
There is a number of kernel limits that should be set for the Virtuozzo software to work correctly. Virtuozzo is shipped with a tuned `/etc/sysctl.conf` file. Understanding what parameters were changed is essential for running the required number of containers. Below is the contents of the `/etc/sysctl.conf` file as shipped with Virtuozzo:

[subs="quotes"]
----
# Controls IP packet forwarding
net.ipv4.ip_forward = 1
# Controls source route verification
net.ipv4.conf.default.rp_filter = 1
# Do not accept source routing
net.ipv4.conf.default.accept_source_route = 0
# Controls the System Request debugging functionality of the kernel
kernel.sysrq = 1
# Controls whether core dumps will append the PID to the core filename.
# Useful for debugging multi-threaded applications.
kernel.core_uses_pid = 1
# Controls the use of TCP syncookies
net.ipv4.tcp_syncookies = 1
# Disable netfilter on bridges.
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.bridge.bridge-nf-call-arptables = 0
# Controls the default maxmimum size of a mesage queue
kernel.msgmnb = 65536
# Controls the maximum size of a message, in bytes
kernel.msgmax = 65536
# Controls the maximum shared segment size, in bytes
kernel.shmmax = 68719476736
# Controls the maximum number of shared memory segments, in pages
kernel.shmall = 4294967296
net.ipv6.conf.all.proxy_ndp=1
net.ipv4.conf.default.proxy_arp = 0
net.ipv4.conf.all.rp_filter = 0
fs.super-max = 2560
fs.file-max = 262144
kernel.fairsched-nodes-max = 1538
net.ipv4.neigh.default.gc_thresh2 = 2048
net.ipv4.neigh.default.gc_thresh3 = 4096
net.ipv4.conf.default.send_redirects = 0
net.ipv4.conf.all.send_redirects = 0
net.ipv6.neigh.default.gc_thresh2 = 2048
net.ipv6.neigh.default.gc_thresh3 = 4096
net.nf_conntrack_max = 500000
fs.aio-max-nr = 1048576
----

Notice that some parameters of the kernel configuration depends on the maximum number of containers you plan to run. In the default configuration file, these numbers were calculated under the assumption the maximum container number is 512. If you plan to run another number of containers, it is recommended to recalculate `net.ipv4.neigh.default.gc_thresh2` and `net.ipv4.neigh.default.gc_thresh3` parameters as three per container plus 128...512. Keep the second parameter twice as great as the first one.
  
To apply the changes issue the following command:
  
[subs="quotes"]
----
*# sysctl -p*
----
  
Besides, it makes sense to set `net.ipv4.tcp_use_sg` to `0`, since the corresponding "Scatter/gather IO" feature is not supported by the `venet` device, used in Virtuozzo networking.
  
It is also worth mentioning that normally you should have forwarding turned on since the server forwards packets destined to or originated from containers.

  
Offline Management Configuration Files 
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
The offline management configuration files located in the `/etc/vzredirect.d` directory define various modes of container offline management by container administrators. One configuration file describes one offline management mode. In the current Virtuozzo version, two files are accessible: `vzpp.conf` and `vzpp-plesk.conf`. The first file defines the container offline management by means of Power Panel, and the second one by means of the same Power Panel with an integrated Plesk control panel.
  
There are two parameters in each of the files.
  
.Format
[subs="quotes"]
----
+_&lt;parameter_name&gt;_=_&lt;parameter_value&gt;_+
----
  
.Parameters
[options="header",cols="1a,3a,1a"]
|====
|Name|Description|Example

|`PORT`|This port must be entered in the address line of an Internet browser after the container IP address when managing the container by means of Power Panel or the Plesk control panel.|`PORT=8443`
|`DST_VEID`|The ID of the container where the requests coming to the specified port will be redirected.|`DST_VEID=1`
|====

vzstat Configuration File 
^^^^^^^^^^^^^^^^^^^^^^^^
 
This file `/etc/vzstat.conf` lists a number of CPU, memory, and disk-related parameters used by the `vzstat` utility. The values assigned to these parameters denote either the warning or the error level for the `vzstat` utility to start displaying these parameters either in the yellow color (the warning level has been hit) or in the red color (the error level has been hit). Moreover, if a parameter has hit the error level, the *CRIT* warning is displayed instead of *OK* after the name of the corresponding subsystem (CPU, Memory, Swap, Net, or Disks).
  
The table below provides information on the name and the description of all these parameters, on whether they denote the warning or the error level, whether the real parameter value has to be higher or lower than this level in order to invoke an alert, and on the parameters default values.
  
.Parameters
[options="header",cols="5a,4a,1a,1a,2a"]
|====
|Name|Description|Default Value|Alert When|Alert Type

|`LOAD_AVG`|Load average.|30|Higher|Warning
|`PROC_RUN`|Number of running processes.|20|Higher|Warning
|`PROC_UNINT`|Number of uninterruptable processes (in "D" state).|20|Higher|Warning
|`CPU_IDLE`|CPU idle time, in percent.|10|Lower|Warning
|`CPU_SYS`|CPU system time, in percent.|50|Higher|Warning
|`CPU_LAT_MAX_WARN`|Scheduling latency, in milliseconds (maximum over 5 sec period).|750|Higher|Warning
|`CPU_LAT_MAX_ERR`|Scheduling latency, in milliseconds (maximum over 5 sec period).|1000|Higher|Error
|`CPU_LAT_AVG_WARN`|Scheduling latency, in milliseconds (5 sec average).|500|Higher|Warning
|`CPU_LAT_AVG_ERR`|Scheduling latency, in milliseconds (5 sec average).|750|Higher|Error
|`MEM_LAT_MAX_WARN`|Memory allocation latency, in milliseconds (maximum over 5  sec period).|300|Higher|Warning
|`MEM_LAT_MAX_ERR`|Memory allocation latency, in milliseconds (maximum over 5 sec period).|500|Higher|Error
|`MEM_LAT_AVG_WARN`|Memory allocation latency, in milliseconds (5 sec average).|250|Higher|Warning
|`MEM_LAT_AVG_ERR`|Memory allocation latency, in milliseconds (5 sec average).|400|Higher|Error
|`MEM_ZONE_ACT_INACT_FREE_WARN`|Size of available memory (free + active + inactive pages), in percent.|8|Lower|Warning
|`MEM_ZONE_ACT_INACT_FREE_ERR`|Size of available memory (free + active + inactive pages), in percent.|4|Lower|Error
|`MEM_ZONE_ACT_INACT_FREE_ABS_WARN`|Size of available memory (free + active + inactive pages), in MB.|4|Lower|Warning
|`MEM_ZONE_ACT_INACT_FREE_ABS_ERR`|Size of available memory (free + active + inactive pages), in MB.|2|Lower|Error
|`MEM_ZONE_ORDER_GT_0`|Number of pages which are gathered in blocks with order &gt; 0. For example, if current memory distribution looks like:  3*1 1*2 3*4 5*8  ....   Then number of pages with order &gt; 0 is 1*2 + 3*4 + 5*8 + ...|100|Lower|Warning
|`SWAP_FREE_WARN`|Free swap space, in percent.|75|Lower|Warning
|`SWAP_FREE_ERR`|Free swap space, in percent.|50|Lower|Error
|`SWAP_IN_WARN`|Swap-in activity, in Mbps.|0.5|Higher|Warning
|`SWAP_IN_ERR`|Swap-in activity, in Mbps.|1|Higher|Error
|`SWAP_OUT_WARN`|Swap-out activity, in Mbps.|0.5|Higher|Warning
|`SWAP_OUT_ERR`|Swap-out activity, in Mbps.|1|Higher|Error
|`SWAP_LAT_MAX_WARN`|Swap-in latency, in milliseconds (maximum over 5 sec period).|750|Higher|Warning
|`SWAP_LAT_MAX_ERR`|Swap-in latency, in milliseconds (maximum over 5 sec period).|1000|Higher|Error
|`SWAP_LAT_AVG_WARN`|Swap-in latency, in milliseconds (5 sec average).|500|Higher|Warning
|`SWAP_LAT_AVG_ERR`|Swap-in latency, in milliseconds (5 sec average).|750|Higher|Error
|`DISK_FREE_INODES_WARN`|Free inodes on the disk, in percent.|20|Lower|Warning
|`DISK_FREE_INODES_ERR`|Free inodes on the disk, in percent.|5|Lower|Error
|`DISK_FREE_SPACE_WARN`|Free disk space, in percent.|20|Lower|Warning
|`DISK_FREE_SPACE_ERR`|Free disk space, in percent.|5|Lower|Error
|`CT_FAILCNT_DELTA`|Number of failed UBC resource allocations for a particular container between `vzstat` screen updates (any resource type counts).|1|Higher|Error
|====

vztt Configuration File
^^^^^^^^^^^^^^^^^^^^^^^
 
This file (`/etc/vztt/vztt.conf`) is the configuration file used by the `vzpkg` utility when managing OS and application EZ templates.

.Format
[subs="quotes"]
----
+_&lt;parameter_name&gt;_=_&lt;parameter_value&gt;_+
----

.Parameters
[options="header",cols="1a,3a"]
|====
|Name|Description

|`VZTT_PROXY`|The IP address or hostname of the caching proxy server to be used by the `vzpkg` tool for managing OS and application EZ templates.
|`HTTP_PROXY`|The IP address or hostname of the HTPP proxy server address, if you use this server.
|`HTTP_PROXY_USER`|The user name used by the HTTP proxy server for your authentication.
|`HTTP_PROXY_PASSWORD`|The password of the user specified in the `HTPP_PROXY_USER` parameter and used for your authentication by the HTTP proxy server.
|`METADATA_EXPIRE`|Defines the period of time, in seconds, in the course of which the downloaded software packages in the `vzpkg` cache are regarded as 'not obsolete'. During this time, the `vzpkg` utility searches for the EZ template packages in the local cache only (without checking the remote repositories set for EZ templates). By default, this period is set to 86400 seconds (24 hours).
|`EXCLUDE`|List of comma-separated packages that are not to be installed or updated during the `vzpkg` execution. The package names should correspond to the name of real packages in the repository and can contain file globs (e.g., `*` and `?`). 
|====

pcompact.conf
^^^^^^^^^^^^^
 
The `/etc/vz/pcompact.conf` file is used by the `pcompact` utility to compact virtual disks in containers.
  
.Format
[subs="quotes"]
----
+_&lt;parameter_name&gt;_=_&lt;parameter_value&gt;_+
----

.Parameters
[options="header",cols="1a,3a"]
|====
|Name|Description

|+THRESHOLD=_&lt;number&gt;_+|Compact the virtual disk if unused space on it exceeds *THRESHOLD* percent of the ploop size.
|+DELTA=_&lt;number&gt;_+|Reduce disk space to be compacted by *DELTA* percent of the ploop size.
|+DEFRAG=&lt;yes{brvbar}no&gt;+|Perform or skip file system defragmentation.
|====

Virtuozzo Utilities
~~~~~~~~~~~~~~~~~~~
  
This section provides information on utilities that can be used to manage Virtuozzo parameters.

prlsrvctl
^^^^^^^^^
 
The `prlsrvctl` command-line utility is used to perform management tasks on the hardware node and Virtuozzo. The tasks include getting the Virtuozzo information, modifying its preferences, installing a license, obtaining statistics and problem reports, and some others. 
  
.Syntax
[subs="quotes"]
----
prlsrvctl [_&lt;command&gt;_ [_&lt;options&gt;_]
          [-l, --login [__&lt;user&gt;__[:__&lt;passwd&gt;__]@]__&lt;server&gt;__[:__&lt;port&gt;__]]]
----
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;command&gt;_+|The command to execute.
|+_&lt;options&gt;_+|Command options. See individual commands for available options.
|`-l, --login`|Connect to the remote hardware node and execute a command there. If this parameter is omitted, the command will be executed on the local server.
|+_&lt;user&gt;_+|The name of the user used to log in to the remote server.
|+_&lt;passwd&gt;_+|The user password. If the password is omitted, you will be prompted to enter it.
|+__&lt;server&gt;__:__&lt;port&gt;__+|The remote server IP address or hostname and port number, If port number is omitted, the default port will be used.
|====

[NOTE]
[subs="quotes"]
====
*Note:* To display help, enter `prlsrvctl` on the command-line without any options.
====

prlsrvctl info
++++++++++++++
  
Displays the hardware node and Virtuozzo configuration information.
  
.Syntax
[subs="quotes"]
----
prlsrvctl info
----
  
The information returned by the `info` command includes the following:

[options="compact"]
* Server ID and hostname.
* Virtuozzo version number.
* Default directory for storing virtual machine files.
* Virtuozzo memory limits.
* Virtuozzo minimum allowable security level.
* Default directory for storing virtual machine backups. 
* Virtuozzo license information.
* Server hardware configuration information.
* Other miscellaneous info.

prlsrvctl net
+++++++++++++
  
The `prlsrvctl net` command is used to create and configure virtual networks.

.Subcommands
[options="header",cols="1a,3a"]
|====
|Name|Description

|`net add`|Creates a new virtual network
|`net set`|Configures the parameters of an existing virtual network.
|`net del`|Removes an existing virtual network.
|`net list`|List the available virtual networks.
|====

*net add*

Creates a new virtual network.
  
.Syntax
[subs="quotes"]
----
prlsrvctl net add _&lt;vnetwork_ID&gt;_ [-i, --ifname _&lt;if&gt;_] [-m, --mac _&lt;mac_address&gt;_]
                  [-t, --type &lt;bridged|host-only&gt;] [-d, --description _&lt;desc&gt;_]
                  [--ip _&lt;IP_address&gt;_[/__&lt;mask&gt;__]] [--dhcp-server &lt;on|off&gt;]
                  [--dhcp-ip _&lt;IP_address&gt;_] [--ip-scope-start _&lt;IP_address&gt;_]
                  [--ip-scope-end _&lt;IP_address&gt;_] [--ip6 _&lt;IP_address&gt;[/_&lt;mask&gt;_]]
                  [--dhcp6-server &lt;on|off&gt;] [--dhcp-ip6 _&lt;IP_address&gt;_]
                  [--ip6-scope-start _&lt;IP_address&gt;_] [--ip6-scope-end _&lt;IP_address&gt;_]
----
  
.Options
[options="header",cols="3a,4a"]
|====
|Name|Description

|+_&lt;vnetwork_ID&gt;_+|A user-defined name that will identify the new virtual network.
|+-i, --ifname _&lt;if&gt;_+|The name of a physical network adapter on the hardware node to which this virtual network should be bound.
|+-m, --mac _&lt;mac_address&gt;_+|The MAC address of a virtual network adapter on the hardware node to which this virtual network should be bound.
|+-t, --type &lt;bridged{brvbar}host-only&gt;+|The type of the virtual network to create. Possible values are:

[options="compact"]
* `bridged`. A  virtual machine and container connected to this type of virtual network appears as an independent computer on the network.
* `host_only` (default). A virtual machine and container connected to this type of virtual network can access only the hardware node and the virtual machines and containers connected to the same virtual network.
|+-d, --description _&lt;desc&gt;_+|A user-defined description of the virtual network. Descriptions with white spaces must be enclosed in quotation marks.
|+--ip _&lt;IP_address&gt;_[/_&lt;mask&gt;_]+ +
+--ip6 _&lt;IP_address&gt;_[/_&lt;mask&gt;_]+|Set an IPv4/IPv6 address and subnet mask for the Virtuozzo virtual adapter.
|+--dhcp-server &lt;on{brvbar}off&gt;+ +
+--dhcp6-server &lt;on{brvbar}off&gt;+|Enable or disable the Virtuozzo virtual DHCPv4/DHCPv6 server.
|+--dhcp-ip _&lt;IP_address&gt;_+ +
+--dhcp-ip6 _&lt;IP_address&gt;_+|Set an IPv4/IPv6 address for the Virtuozzo virtual DHCPv4/DHCPv6 server.
|+--ip-scope-start _&lt;IP_address&gt;_+ +
+--ip-scope-end _&lt;IP_address&gt;_+ +
+--ip6-scope-start _&lt;IP_address&gt;_+ +
+--ip6-scope-end _&lt;IP_address&gt;_+|Set the starting and ending IPv4/IPv6 addresses for the DHCPv4/DHCPv6 pool. The virtual machines and containers connected to the network you are creating will automatically receive their IPv4/IPv6 addresses from the respective DHCPv4/DHCPv6 pool.
|====

*net set*

Configures the settings of an existing virtual network.

.Syntax
[subs="quotes"]
----
prlsrvctl net set _&lt;vnetwork_ID&gt;_ [-i, --ifname _&lt;if&gt;_] [-m, --mac _&lt;mac_address&gt;_]
                  [-t, --type &lt;bridged|host-only&gt;] [-d, --description _&lt;desc&gt;_]
                  [-n, --name _&lt;new_name&gt;_]
----
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;vnetwork_ID&gt;_+|The name of the virtual network to modify.
|+-i, --ifname _&lt;if&gt;_+|The name of a physical network adapter on the hardware node to which this virtual network should be bound.
|+-m, --mac _&lt;mac_address&gt;_+|The MAC address of a virtual network adapter on the hardware node to which this virtual network should be bound.
|+-t, --type &lt;bridged{brvbar}host-only&gt;+|The type of the virtual network to create. Possible values are:

[options="compact"]
* `bridged`. A  virtual machine and container connected to this type of virtual network appears as an independent computer on the network.
* `host_only`. A virtual machine and container connected to this type of virtual network can access only the hardware node and the virtual machines and containers connected to the same virtual network.
|+-d, --description _&lt;desc&gt;_+|A user-defined description of the virtual network. Descriptions with white spaces must be enclosed in quotation marks.
|+-n, --name _&lt;new_name&gt;_+|A new name for the virtual network. Use this parameter if you would like to rename the virtual network.
|====

*net del*

Deletes an existing virtual network.

.Syntax
[subs="quotes"]
----
prlsrvctl net del _&lt;vnetwork_ID&gt;_
----
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;vnetwork_ID&gt;_+|The name of the virtual network to delete.
|====

*net list*

Lists the existing virtual networks.
  
.Syntax
[subs="quotes"]
----
prlsrvctl net list
----

prlsrvctl problem-report
++++++++++++++++++++++++
  
Generates and displays problem reports.
  
.Syntax
[subs="quotes"]
----
prlsrvctl problem-report
----
  
The command collects technical data about Virtuozzo and the hardware node and displays the report on screen (the output can also be piped to a file). The report can then be directed to the Virtuozzo technical support team for analysis.

prlsrvctl set
+++++++++++++
  
Configures Virtuozzo preferences.

.Syntax
[subs="quotes"]
----
prlsrvctl set [--mem-limit _&lt;auto&gt;_|_&lt;size&gt;_]
              [-s, --min-security-level &lt;low|normal|high&gt;]
              [-c, --cep &lt;on|off&gt;] [--mng-settings &lt;allow|deny&gt;]
              [--device _&lt;device&gt;_ --assignment &lt;host|vm&gt;_]
              [--backup-storage [__&lt;user&gt;__[:__&lt;passwd&gt;__]@]__&lt;server&gt;__[:__&lt;port&gt;__]]
              [--backup-tmpdir _&lt;tmp_dir&gt;_] [--backup-path _&lt;path&gt;_]
              [--idle-connection-timeout _&lt;timeout&gt;_]
              [--verbose-log &lt;on|off&gt;] [--cluster-mode &lt;on|off&gt;]
              [--vm-cpulimit-type &lt;full|guest&gt;]
----
  
.Options
[options="header",cols="1a,1a"]
|====
|Name|Description

|+--mem-limit {auto{brvbar}__&lt;size&gt;__}+|Sets the upper limit of the memory size that can be reserved for use by virtual machines. The following options are available:

[options="compact"]
* `auto` - if this option is used, the memory size will be calculated automatically.
* `size` - user-defined memory size, in megabytes.
|+-s, --min-security-level &lt;low{brvbar}normal{brvbar}high&gt;+|The lowest allowable security level that can be used to connect to the hardware node. The following options are available:

[options="compact"]
* `low` - plain TCP/IP (no encryption).
* `normal` - most important data is sent and received using SSL over TCP/IP (user credentials during login, guest OS clipboard, etc.) Other data is sent and received using plain TCP/IP with no encryption.
* `high` - all of the data is sent and received using SSL.
|+-c, --cep &lt;on{brvbar}off&gt;+|Enables/disables  the participation in the Customer Experience Program (CEP). The following options are available:

[options="compact"]
* `on` - enables CEP.
* `off` - disables CEP.
|+--mng-settings &lt;allow{brvbar}deny&gt;+|Allows to grant or deny permission to new users to modify Virtuozzo preferences. By default, only administrators of the host OS can modify Virtuozzo preferences. When a new user profile is created (this happens when a user logs in to the hardware node for the first time), he/she will be granted or denied this privilege based on the default setting. This parameter allows you to set that default setting. Please note that this parameter only affects new users (the users that will be created in the future). The profiles of the existing users will not be modified.
|+--device _&lt;device&gt;_ --assignment &lt;host{brvbar}vm&gt;+|Allows to set the assignment mode for the specified VTd device. The following options are available:

[options="compact"]
* `host` - assign the device to the hardware node.
* `vm` - assign the device to virtual machines.
|+--backup-storage [__&lt;user&gt;__[:__&lt;passwd&gt;__]@]__&lt;server&gt;__[:__&lt;port&gt;__]+|The default backup server where to store virtual machine backups. 
|+--backup-path _&lt;path&gt;_+|The name and path of the default directory on the backup server where to store virtual machine backups.
|+--verbose-log &lt;on{brvbar}off&gt;+|Turns the verbose output for the command on or off.
|+--cluster-mode &lt;on{brvbar}off&gt;+|Turns the cluster mode on or off.
|+--idle-connection-timeout _&lt;timeout&gt;_+|Sets a timeout interval in seconds after which, if no data has been received from the storage server or backup client, the process of backup/restore is terminated.
|+--backup-tmpdir _&lt;tmp_dir&gt;_+|Specifies a temporary directory where special snapshots created during virtual machine backup will be stored. This may be necessary so as not to run out of storage space on physical servers where most of the storage space is allocated to virtual machines and very little is left for the server itself.
|+--vm-cpulimit-type &lt;full{brvbar}guest&gt;+|Specifies the type of virtual machine threads to be affected by the CPU limit:

[options="compact"]
* `full` - all threads (service and activity) are limited.
* `guest` - only activity threads are limited. Service threads can use all available CPU power.

[NOTE]
[subs="quotes"]
====
*Note:* After changing this parameter, restart the virtual machine for the changes to take effect. 
====
|====

prlsrvctl shutdown
++++++++++++++++++
  
Shuts down the Virtuozzo component responsible for managing virtual machines and containers. No operations on virtual machines and containers are possible.
  
.Syntax
[subs="quotes"]
----
prlsrvctl shutdown [-f, --force]
----
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|`-f, --force`|Specifies whether the shutdown operation should be forced. If one or more virtual machines and containers are running, clients are connected, or some tasks are currently in progress, then forcing the shutdown will stop all processes automatically and will shut down the Virtuozzo component.
|====

prlsrvctl usb
+++++++++++++
  
The `prlsrvctl usb` command is used to permanently assign a USB device to a specific virtual machine. A permanently assigned USB device will be connected to the virtual machine automatically on server restart. This functionality works only with virtual machines (not containers).

.Subcommands
[options="header",cols="1a,3a"]
|====
|Name|Description

|`usb list`|Lists USB devices connected to the server together with the information about their virtual machine assignments for the current user.
|`usb set`|Permanently assigns a USB device to the specified virtual machine. 
|`usb del`|Removes a previously created USB device assignment.
|====

*usb list*

Lists the USB devices connected to the physical server. 

.Syntax
[subs="quotes"]
----
prlsrvctl usb list
----
  
Returns a list of USB devices in tabular format with the following columns:

[options="compact"]
* *Name* - the USB device name.
* *ID* - a string that uniquely identifies the USB devices on the physical server. The ID never changes even if the device is disconnected from the server and then reconnected again. Please note that if a device ID is listed in quotes, they are a part of the ID and must be included in other calls that use it as an input parameter. 
* *VM UUID* - a universally unique ID of the virtual machine to which this USB device is permanently assigned. If a USB device is not assigned to any virtual machine, this column will be empty.

*usb set*

Permanently assigns a USB device to the specified virtual machine. A permanently assigned USB device will be connected to the virtual machine automatically on server restart. The USB device assignment is performed for the current user only. Other users may create their own USB device assignments. This functionality works only with virtual machines (not containers).

.Syntax
[subs="quotes"]
----
prlsrvctl usb set _&lt;usb\_dev\_ID&gt;_ _&lt;vm_name&gt;_
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;usb_dev_ID&gt;_+|The USB device ID. To obtain the list of USB devices connected to the server use the `usb list` command.
|+_&lt;vm_name&gt;_+|The universally unique ID or name of the virtual machine to which to assign the USB device. 
|====

*usb del*

Deletes a USB device assignment previously created with the `usb set` command. The USB device assignment is performed on the user level, so if you remove an assignment, it will only be removed for the current user. Other users may have their own USB devices assignments, which will not be affected.
  
.Syntax
[subs="quotes"]
----
prlsrvctl usb del _&lt;usb_dev_ID&gt;_
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;usb_dev_ID&gt;_+|The USB device ID. To see the current USB device assignments for the current user use the `usb list` command.
|====

prlsrvctl user list
+++++++++++++++++++
  
Displays the list of Virtuozzo users. Only those users are displayed who has created at least one virtual machine and container.
  
.Syntax
[subs="quotes"]
----
prlsrvctl user list [-o, --output &lt;name|mng_settings|def_vm_home&gt;]
----
  
.Options
[options="header",cols="3a,4a"]
|====
|Name|Description

|+-o, --output &lt;name{brvbar}mng_settings{brvbar}def_vm_home&gt;+|Fields to include in the output. The following fields are available:

[options="compact"]
* `name` - User name.
* `mng_settings` - Indicates whether the user is allowed to modify Virtuozzo preferences. 
* `def_vm_home` - The user default virtual machine folder.

The fields must be specified in lowercase.
|====

prlsrvctl user set
++++++++++++++++++
  
Configures the profile of the user currently logged in to the Virtuozzo server.
  
.Syntax
[subs="quotes"]
----
prlsrvctl user set [--def-vm-home _&lt;path&gt;_]
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description
|+--def-vm-home _&lt;path&gt;_+|The default virtual machine and container directory name and path.
|====

privnet
+++++++
  
The `prlsrvctl privnet` command is used to manage private networks on physical servers.
  
.Subcommands
[options="header",cols="1a,3a"]
|====
|Name|Description

|`add`|Creates a new private network.
|`set`|Configures the parameters of an existing private network.
|`del`|Removes an existing private network.
|`list`|Lists the available private networks.
|====

*add*

Creates a new private network.
  
.Syntax
[subs="quotes"]
----
prlsrvctl privnet add _&lt;private_network_ID&gt;_ [-a, --ipadd __&lt;addr&gt;__[/__&lt;mask&gt;__]]
                      [--global &lt;yes|no&gt;]
----

.Options
[options="header",cols="2a,3a"]
|====
|Name|Description

|+_&lt;private_network_ID&gt;_+|The private network ID.
|+-a, --ipadd __&lt;addr&gt;__[/__&lt;mask&gt;__]+|Add a subnet to the private network. The network can have multiple subnets.
|+--global &lt;yes{brvbar}no&gt;+|Make the private network weak, allowing access to and from external networks.
|====

*set*

Configures an existing private network.
  
.Syntax
[subs="quotes"]
----
prlsrvctl privnet set _&lt;private_network_ID&gt;_ [-a, --ipadd __&lt;addr&gt;__[/__&lt;mask&gt;__]]
                      [-d, --ipdel __&lt;addr&gt;__[/__&lt;mask&gt;__]] [--global &lt;yes|no&gt;]
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;private_network_ID&gt;_+|The private network ID.
|+a, --ipadd __&lt;addr&gt;__[/__&lt;mask&gt;__]+|Add a subnet to the private network. The network can have multiple subnets.
|+-d, --ipdel __&lt;addr&gt;__[/__&lt;mask&gt;__]+|Delete the specified subnet from the private network.
|+--global &lt;yes{brvbar}no&gt;+|Make the specified private network weak, allowing access to and from external networks.
|====

*del*

Deletes a private network from the physical server.
  
.Syntax
[subs="quotes"]
----
prlsrvctl privnet del _&lt;private_network_ID&gt;_
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;private_network_ID&gt;_+|The ID of the private network to delete.
|====

*list*

Lists the private networks that exist on the physical server.
  
.Syntax
[subs="quotes"]
----
prlsrvctl privnet list 
----

vzstat 
^^^^^
 
Virtuozzo real-time monitoring utility. Displays the status and load of the system, including disk, network, CPU, and memory parameters (swap included). The status is updated in a preset time interval. `vzstat` also provides a sortable list of running virtual machines and containers together with their resources consumption statistics. Utility's display output can be customized.
  
.Syntax
[subs="quotes"]
----
vzstat [-l] [-d _&lt;delay&gt;_] [-p _&lt;CT_name&gt;_] [-b|-v] [-t] [-aimoOnsc]
----
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|`-l`|Print information once and exit immediately.
|+-d _&lt;delay&gt;_+|Specify the delay between screen updates. Can be changed on the fly by the *t* interactive command. Default is 1 sec.
|+-p _&lt;CT_name&gt;_+|Monitor only containers with the specified +_&lt;CT_names&gt;_+. This flag can be specified up to 20 times as follows: `-p CT_name1 -p CT_name2 [...]`. This option is not available interactively.
|`-b`|"Brief" mode. Minimal details level. Shows only one summary line about each monitoring subsystem. By default, "standard" details level is in use. Valid levels are "brief", "standard" and "verbose". Can be set on the fly by the *b* interactive command. See also the `-v` command-line option and *s* and *v* interactive commands.
|`-v`|"Verbose" mode. Provides maximum details about all monitored subsystems. Can be set on the fly by the `v` interactive command. See also the `-b` command-line option and *b* and *s* interactive commands.
|`-t`|Text mode, provides information once. It is printed in terse form, suitable for parsing by other programs. All output data are not aligned and numbers are not in a human readable format. In the text mode, there are no colors in the output and only the top 10 containers sorted by their CPU usage are shown.
|`-a`|Display the current disk input and output (I/O) statistics for virtual machines and containers.
|`-i`|Display the IO accounting information for virtual machines and containers.
|`-m`|Display disk statistics for all file system types. By default, the statistics is shown for ext2, ext3, ext4, and reiserfs.
|`-o`|Filter the output by the specified parameters. You can specify multiple parameters and separate them by commas. The list of available parameters is given below.
|`-O`|Filter the output by the specified parameters. Unlike the `-o` option, the produced output already contains some default columns (for example, container ID and IP address). The list of available parameters is given below.
|`-n`|Display network statistics. 
|`-s`|Filter the output by the specified keys. The list of available parameters is given below.
|`-c`|Display I/O statistics in the specified units of measurement: `B` (bytes), `K` (kilobytes), `M` (megabytes), or `G` (gigabytes).
|====

You can use the following parameters with the `-o`, `-O`, and `-s` options to filter the information related to virtual machines and containers:

[options="header",cols="1a,1a,3a"]
|====
|Name|Column|Description

|`id`|`CTID`|Virtual machine or container ID.
|`st`|`ST`|Virtual machine or container status.
|`vm`|`%VM`|Virtual memory usage, in per cent of the total memory on the Node. It's displayed in the form of "actual usage/barrier". This parameter corresponds to the `PHYSPAGES` VSwap parameter.
|`km`|`%KM`|Kernel memory usage, in per cent of the normal zone size. It's displayed in the form of "actual usage/barrier". This parameter corresponds to the `kmemsize` UBC parameter.
|`sw`|`%SW`|Swap space usage, in per cent of the total swap space on the Node. It's displayed in the form of "actual usage/barrier". This parameter corresponds to the `SWAPPAGES` VSwap parameter.
|`swapin`|`SWAPIN`|I/O operations with the swap space, in operations per second.
|`proc`|`PROC`|Process information. It's displayed in the form of "running processes/total processes/barrier".
|`cpu`|`CPU`|CPU usage. It's displayed in the form of "actual CPU usage/guaranteed CPU usage". If more than one processor is installed on the server, all processors are considered as 100%.
|`cpu_iowait`|`CPU IOWAIT`|Percentage of time that container processes lost waiting for I/O.
|`cpu_iowait_acc`|`ACC IOWAIT`|Percentage of time that container processes lost waiting for I/O, accumulated since utility start.
|`sock`|`SOCK`|Sockets usage calculated as the sum of UBC numtcpsock and numothersock parameters. It's displayed in the form of "open sockets/barrier".
|`fcnt`|`FCNT`|Fail counters-that is, the number of UBC fail counters for all resources.
|`mlat`|`MLAT`|Maximum process scheduling latency, in milliseconds. In this case, the latency means the maximum time a process in a virtual machine or container is waiting for the CPU.
|`io`|`IO`|I/O rate and limit, in bytes, kilobytes, megabytes, or gigabytes per second.
|`iops`|`IOPS`|I/O operations rate and limit, in operations per second.
|`iow`|`IOW`|Transfer rate at which data is written to the virtual machine or container.
|`ior`|`IOR`|Transfer rate at which data is read from the virtual machine or container.
|`iowt`|`IOWT`|Total amount of data that was written to the virtual machine or container.
|`iort`|`IORT`|Total amount of data that was read from the virtual machine or container.
|`ios`|`IOS`|Synchronization rate.
|`iod`|`IOD`|Flushing rate of dirty pages (pages that have been changed but are not yet written to the virtual machine or container disk).
|`ioused`|`IOUSED%`|Percentage of time the disks are used by the virtual machine or container.
|`iowait`|`IOWAIT%`|Percentage of time when at least one I/O transaction in the virtual machine or container is waiting for being served.
|`rx`|`RX`|Incoming traffic rate, in megabytes per second.
|`tx`|`TX`|Outgoing traffic, in megabytes per second.
|`rxt`|`RXT`|Total amount of incoming traffic, in megabytes.
|`txt`|`TXT`|Total amount of outgoing traffic, in megabytes.
|`rxp`|`RXP`|Incoming traffic, in packets per second.
|`txp`|`TXPT`|Outgoing traffic, in packets per second.
|`rxpt`|`RXPT`|Total amount of incoming packets.
|`txpt`|`TXPT`|Total amount of outgoing packets.
|====

Displayed Information
+++++++++++++++++++++
  
`vzstat` can display the following information:

[options="header",cols="1a,3a,2a,1a"]
|====
|Type|Description|Example|Toggled by

|Uptime|This line displays the time for which the system has been up, and three "load averages" for the system. The load averages are the average number of processes ready to run during the last 1, 5, and 15 minutes. This line is just like the output of uptime(1).|`1:22am, up 1:31, 2 users, load average: 0.00, 0.06, 0.33`|*l*
|Containers and processes|Total number of virtual machines and containers and processes running at the time of the last update. The output is also broken down into the number of tasks which are running, sleeping, uninterruptable, zombie, or stopped.|`CTNum 102, procs 467: running 12, sleeping 455, unint 0, zombie 0, stopped 0`|*p*
|CPU states|Shows the percentage of CPU time used by all virtual machines and containers and by the server (shown as `CT0`), the CPU time spent in the user mode, in the system mode, and being idle, and the maximal/average scheduling latency in ms. The scheduling latency is the time spent by the processes in the system awaiting for scheduling.|`CPU [ OK ]: CTs 43%, CT0 12%, user 41%, sys 13%, idle 45%, lat(ms) 3/2`|*c*
|Mem|Statistics on the memory usage, including the total available memory, free memory, and maximal/average memory allocation latency. The free memory is displayed both for the low and high memory. The low memory is the sum of the DMA and Normal zones memory and the high memory is the High zone memory. Memory allocation latency is the time required to allocate memory inside the kernel in ms. An excessive allocation latency can be a sign of server's overload.|`Mem [ OK ]: total 755MB, free 671MB/0MB (low/high), lat(ms) 10/7.`|*m*, *M*
|Memory zones information|Information on the memory zones state. This information includes: the total size of the memory zone in MB, the size of active and inactive lists, of the free memory and zone limits.|`ZONE1 (Normal): size 752MB, act 29MB, inact 31MB, free 658MB (0/1/2)`|*m*, *M*
|Memory zones fragmentation|Information on the memory zones fragmentation. This information describes how much system memory is fragmented and which is the biggest block size possible to allocate atomically. The first number before * is a number of blocks and the second is a block size in pages.|`fragm 2*1 3*2 15*4 22*8 25*16 12*32 4*64 0*128 1*256 326*512".`|*m*, *M
|Memory allocation latency|Memory allocation latency is an average time spent in the kernel memory allocator for different memory type requests. Any memory type is coded as +_&lt;XY&gt;_+, where +_&lt;X&gt;_+ can be `A` for `GFP_ATOMIC`, `K` for `GFP_KERNEL` or `U` for `GFP_USER`, and +_&lt;Y&gt;_+ denotes the allocation request order, i.e. `Y=0` for `order=0` and `1` for `order=1`.|`Mem lat (ms): A0 0, K0 0, U0 1, K1 3, U1 2`|*m*, *M*
|Slab cache information|Slab cache information includes: the total slab cache size/real cache size divided into the inode cache size, dentry cache size, buffer heads cache size and page beancounters cache size. The real cache size is the size to which the cache can be shrunk, i.e. it is always less than the total cache size.|`Slab pages: 13MB/13MB (ino 8MB, de 1MB, bh 1MB, pb 0MB)`|*m*, *M*
|Swap|Statistics on the used swap space, including the total swap space, the available swap space and the speed of swap-in/swap-out activity in MB/s.|`Swap [ OK ]: tot 1004MB, free 1004MB, in 0.000MB/s, out 0.000MB/s`|*w*, *W*
|Swap latency|Swap operations latency. This includes the swap-in count, the swap-in maximal/average latency in ms, the swap-out count, the swap-out maximal/average latency in ms, and the maximal/average CPU time spent for the swap-out.|`Swap lat: si 0, 0/0 ms, so 0, 0/0 ms, 0/0 cpu ms`|*w*, *W*
|Swap cache|Swap cache information includes the number of addition, deletion, and find operations respecting the swap cache.|`Swap cache: add 0, del 0, find 0/0`|*w*, *W*
|Network information|Network statistics summary includes the total incoming traffic speed in MB/s and incoming packets/s, and outgoing traffic speed in MB/s and outgoing packets/s.|`Net [ OK ]: tot in 1.020MB/s 267pkt/s, out 0.001MB/s 1pkt/s`|*n*, *N*
|Network interface information|Provides the network statistics summary for a particular Ethernet interface, including its total incoming traffic speed in MB/s and incoming packets/s, and outgoing traffic speed in MB/s and outgoing packets/s.|`eth0: in 0.000MB/s 3pkt/s, out 0.001MB/s 1pkt/s`|*n*, *N*
|Disks statistics|Disks statistics summary including the writing and reading activity in MB/s.|`Disks [ OK ]: in 0.000MB/s, out 0.000MB/s`|*d*, *D*
|Mounted disks statistics|Information on the mounted disks such as their mount point, free space, and free inodes left on the device.|`root(/) free: 3489MB(46%), 511077ino(52%)`|*d*, *D*
|Disk I/O statistics|Shows disk input and output statistics for virtual machines and containers. The following statistics is displayed:

[options="compact"]
* `IOUSED%`: the percentage of time the disks are used by the virtual machine or container.
* `IOWAIT%`: the percentage of time when at least one I/O transaction in the virtual machine or container is waiting for being served.
* `IO`: the current speed of disk I/O in the virtual machine or container and the I/O limit set for this virtual machine or container, if any. The value can be displayed in bytes, kilobytes, megabytes, or gigabytes per second, depending on the units you used to set the I/O limit.
* `IOPS`: the current speed of disk I/O in the virtual machine or container and the I/O limit set for this virtual machine or container, if any. The value is displayed in operations per second.
* `CPU_IOWAIT`: percentage of time that container processes lost waiting for I/O.
* `CPU_IOWAIT_ACC`: percentage of time that container processes lost waiting for I/O, accumulated since utility start.
* `SWAPIN`: I/O operations with the swap space. The value is measured in operations per second.|`IOUSED%` +
`5.00` +
`IOWAIT%` +
`0.00` +
`IO` +
`2/100MB/s` +
`IOPS` +
`315/--/s` +
`CPU IOWAIT` +
`25.0%` +
`ACC IOWAIT` +
`25.0%` +
`SWAPIN` +
`0.0/s`
|*A* +
*A* +
*A* +
*A*
|====

Interactive Controls
++++++++++++++++++++
  
Quite a number of single-key interactive commands can be used while `vzstat` is running to change the way the utility displays information. The commands are not available if `vzstat` runs with the `-t` or `-l` command-line option.

[options="header",cols="1a,5a"]
|====
|Key|Action

|*h, ?*|Print a help screen.
|*space*|Update display immediately.
|*q*|Quit.
|*t*|Change the delay between screen updates. You will be prompted to enter new delay time, in seconds. Entering 0 causes continuous updates. See also the `-d` command-line parameter.
|*b*|Set the "brief" details level. See also the `-b` command-line parameter.
|*s*|Set the "normal" details level.
|*v*|Set the "verbose" details level. See also the `-v` command-line parameter.
|*a*|"Averaged" mode. Monitoring parameters will be averaged through a minute. This includes: 1. Number of uninterruptible processes; 2. Scheduling max latency; 3. Memory allocation max latency; 4. Size of free/active/inactive memory; 5. Swap-in latency; 6. UBC fail-counters absolute values.
|*e*|Toggle display of virtual machine and container IP addresses/hostnames.
|*i*|Toggle display of idle virtual machines and containers.
|*l*|Toggle display of load average.
|*p*|Toggle display of processes statistics.
|*c*|Toggle display of CPU usage statistics.
|*w*|Toggle display of swap information.
|*m, M*|Toggle/expand display of memory information. Each subsystem, including memory, network and disk has a number of verbosity levels. In the minimal level no information is displayed. Corresponding interactive lowercase key decreases verbosity level, the same key in uppercase increases it.
|*n, N*|Toggle/expand display of network statistics.
|*A*|Toggle display of disk input and output statistics for virtual machines and containers.
|*I*|Toggle display of input and output accounting for virtual machines and containers.
|*X*|Toggle display of network statistics for virtual machines and containers.
|*d, D*|Toggle/expand display of disk usage and activity information.
|*0*|Toggle display of statistics for the server itself.
|*o*|Sort key. You can use one of the following sort option keys:
|*n*|Sort by container ID
|*c*|Sort by CPU usage
|*f*|Sort by UBC failure counters
|*r*|Sort by the number of running processes
|*p*|Sort by the total number of processes
|*t*|Sort by virtual machine or container status. virtual machines and containers which probably are unusable or unstable (increasing UBC failure counters or very high scheduling latency) will be shown first.
|*s*|Sort by the number of open sockets
|*m*|Sort by memory latency
|*v*|Sort by virtual memory usage
|*k*|Sort by kernel memory usage
|====

Virtuozzo Updates 
~~~~~~~~~~~~~~~~~
  
Virtuozzo allows quick and easy updates with the `yum` utility standard for RPM-compatible Linux operating systems. For more information on `yum`, See *Updating Virtuozzo* in the _Virtuozzo 7 User's Guide_ and the `yum` manual page.

Managing containers 
-------------------

Virtuozzo containers can be managed using the `prlctl` command-line utility. The utility is installed on the hardware node during the product installation.

Matrix of Virtuozzo Command-Line Utilities 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  
The table below contains the full list of Virtuozzo command-line utilities and command you can use for managing containers.

[NOTE]
[subs="quotes"]
====
*Note:* Starting from Virtuozzo 7, numeric container IDs and alphanumeric, case-sensitive container names are interchangeable. Any command that requires a container ID can be supplied that container's name instead.
====

.General Utilities
[options="header",cols="1a,3a"]
|====
|Name|Description

|`prlctl`|Utility to control containers.
|`prlctl list`|Utility to view a list of containers existing on the server with additional information.
|====

.Container Migration Utilities
[options="header",cols="1a,3a"]
|====
|Name|Description

|`prlctl clone`|Command for the local cloning of containers.
|`pmigrate`|Utility for migrating physical servers to containers and for moving containers between hardware nodes.
|====

.Container Backup Utilities
[options="header",cols="1a,3a"]
|====
|Name|Description

|`prlctl backup`|Command to back up individual containers.
|`prlctl restore`|Command to restore individual containers.
|====

.Template Management Utilities
[options="header",cols="1a,3a"]
|====
|Name|Description

|`vzpkg`|Utility to manage OS and application EZ templates either inside your containers or on the server itself.
|`vzmktmpl`|Utility to create OS and application EZ templates.
|`vzcreaterepo`|Utility to set up repositories for RHEL-like distributions.
|====

.Supplementary Utilities
[options="header",cols="1a,3a"]
|====
|Name|Description

|`vzps, vztop`|Utilities working as the standard `ps` and `top` utilities, with container-related functionality added.
|`pnetstat`|Utility that prints network traffic usage statistic by containers.
|`vzstat`|Utility to monitor the server and container resources consumption in real time.
|`vzpid`|Utility that prints container id the process belongs to.
|`vzsplit`|Utility to generate container configuration file sample, "splitting" the server into equal parts.
|`vzmtemplate`|Utility to migrate the installed OS and application templates from the one server to another.
|`pcompact`|Utility to compact containers by removing unused blocks from their virtual disks.
|====

prlctl 
~~~~~~
  
`prlctl` is the primary tool for container management. To use it, you have to log in to the server as the root user.
  
.Syntax
[subs="quotes"]
----
prlctl _&lt;subcommand&gt;_ _&lt;CT_name&gt;_
prlctl --version
prlctl --help
----

.Subcommands
[options="header",cols="1a,3a"]
|====
|Name|Description

|`create`|Creates a new container.
|`delete, destroy`|Deletes a container.
|`mount`|Mounts the container private area and executes the container mount script.
|`umount`|Unmounts the container private area and executes the unmount script.
|`start`|Starts a container.
|`stop`|Stops a container.
|`restart`|Restarts a container.
|`status`|Displays the container status.
|`set`|Sets container parameters: resource control settings, hostname, IP addresses, and so on.
|`enter`|Logs in to a container without knowing its root password.
|`exec`|Runs arbitrary commands in a container without logging in to it.
|`suspend`|Saves the state of a running container in a dump file.
|`resume`|Restores a container from its dump file.
|`snapshot` +
`snapshot-list` +
`snapshot-switch` +
`snapshot-delete`|Creates and manages container snapshots.
|`console`|Creates a command prompt channel to a container.
|====

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|`--version`|Displays the `prlctl` package version currently installed on the server.
|`--help`|Displays the usage information about `prlctl`.
|====

prlctl console 
^^^^^^^^^^^^^^
 
Creates a command prompt channel to a container. Allows to log in to and execute commands in running containers; provides container startup/shutdown information that may be used for troubleshooting purposes. Logging in to containers requires a virtual terminal (e.g., mingetty) to be installed in the container.

[NOTE]
[subs="quotes"]
====
*Note:* To exit the console, press *Esc* and then *.* (period).
====

.Syntax
[subs="quotes"]
----
prlctl console _&lt;CT_name&gt;_
----
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;CT_name&gt;_+|Container name.
|====

prlctl create 
^^^^^^^^^^^^^
 
This command is used to create new containers.
  
.Syntax
[subs="quotes"]
----
prlctl create _&lt;CT_name&gt;_ --vmtype ct [_&lt;options&gt;_]
----
  
With this command, you can create regular containers. A unique container ID is required for this command.

[NOTE]
[subs="quotes"]
====
*Notes:*
[options="compact"]
. Container IDs from 1 to 100 are reserved for internal Virtuozzo needs. Do not use IDs from 1 to 100 when creating containers.
. If a container is created with an alphanumeric name, the next available numeric ID will be used as its private area directory name. If a container is created with a numeric ID, the same number will be used as that container's private area directory name.
====

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;CT_name&gt;_+|ID to assign to the new container.
|`--vmtype ct`|Tells the `prlctl create` command to make a container. If the option is omitted, a virtual machine is created instead.
|+--ostemplate _&lt;name&gt;_+|OS EZ template to use for creating the container. If omitted, this value is taken from the `DEF_OSTEMPLATE` parameter in the global Virtuozzo configuration file. 
|+--config _&lt;name&gt;_+|Container sample configuration file to use for creating the container. Sample configuration files are located in `/etc/vz/conf` and have names in the format +ve-_&lt;name&gt;_.conf-sample+. The sample configuration files usually have a number of resource control limits for the container and some application templates to be added to the container immediately upon its creation. If you skip this option and the default configuration file name is not specified in the global Virtuozzo configuration file, you will have to set resource control parameters for the container using the `prlctl set` command.
|+--uuid _&lt;uuid&gt;_+|A custom UUID to assign to the container.
|+--private _&lt;path&gt;_+|Path to the container private area. This option is used to override default path to private area from the `/etc/vz/vz.conf` configuration file (`VE_PRIVATE` variable). The argument can contain `$VEID` string which will be replaced by numeric container ID value.

[NOTE]
[subs="quotes"]
====
*Note:* Currently, this option may not be supported by the `prlctl` utility. Use `vzctl` instead.
====
|+--root _&lt;path&gt;_+|Path to the mount point of the container root directory. This option is used to override default path to container root directory from the `/etc/vz/vz.conf` configuration file (`VE_ROOT` variable). The argument can contain `$VEID` string which will be replaced by numeric container ID value.

[NOTE]
[subs="quotes"]
====
*Note:* Currently, this option may not be supported by the `prlctl` utility. Use `vzctl` instead.
====
|+--ipadd __&lt;addr&gt;__[/__&lt;mask&gt;__]+|IP address and subnet mask to assign to the container. If you omit this option, you can set an IP address for the container later using the `prlctl set` command.

[NOTE]
[subs="quotes"]
====
*Note:* Currently, this option may not be supported by the `prlctl` utility. Use `vzctl` instead.
====
|+--hostname _&lt;name&gt;_+|Hostname to assign to the container. If you omit this option, you can assign a hostname to the container later using the `prlctl set` command.

[NOTE]
[subs="quotes"]
====
*Note:* Currently, this option may not be supported by the `prlctl` utility. Use `vzctl` instead.
====
|+--description _&lt;desc&gt;_+|Custom container description. Descriptions with white spaces must be enclosed in quotation marks.

[NOTE]
[subs="quotes"]
====
*Note:* Currently, this option may not be supported by the `prlctl` utility. Use `vzctl` instead.
====
|`--skip_app_templates`|Do not install the application templates specified in the container sample configuration file.

[NOTE]
[subs="quotes"]
====
*Note:* Currently, this option may not be supported by the `prlctl` utility. Use `vzctl` instead.
====
|====

prlctl delete, destroy 
^^^^^^^^^^^^^^^^^^^^^^
 
These commands are used to delete containers from the server.
  
.Syntax
[subs="quotes"]
----
prlctl delete _&lt;CT_name&gt;_
prlctl destroy _&lt;CT_name&gt;_
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;CT_name&gt;_+|Container name. 
|====

When executed, `prlctl delete` and `prlctl destroy` physically remove all the files located in the container private area (specified as the `VE_PRIVATE` variable in the container configuration file) and renames the container configuration file in `/etc/vz/conf` from +_&lt;CT_name&gt;_.conf+ to +_&lt;CT_name&gt;_.conf.destroyed+. It also renames container action scripts, if any, in a similar manner.

[NOTE]
[subs="quotes"]
====
*Note:* A container must be stopped before its private area can be unmounted.
====

prlctl exec, enter 
^^^^^^^^^^^^^^^^^^
 
These commands are used to run arbitrary commands in a container being authenticated as root on the server.
  
.Syntax
[subs="quotes"]
----
prlctl exec _&lt;CT_name&gt;_ _&lt;command&gt;_
prlctl enter _&lt;CT_name&gt;_
----
  
where `command` is a string to be executed in the container. If `command` is specified as `-` then the commands for execution will be read from the standard input until the end of file or "exit" is encountered.
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;CT_name&gt;_+|Container ID or name.
|====

When using `exec`, remember that the shell parses the command-line and, if your command has shell meta-characters in it, you should escape or quote them.
  
The `prlctl enter` command is similar to `prlctl exec /bin/bash`. The difference between the two is that `prlctl enter` makes the shell interpreter believe that it is connected to a terminal. As such, you receive a shell prompt and are able to execute multiple commands as if you were logged in to the container.

  
prlctl mount, umount 
^^^^^^^^^^^^^^^^^^^^
 
The `prlctl mount` command mounts the container private area to the container root directory (+/vz/root/_&lt;CT_name&gt;_+ on the server) without starting it. Normally, you do not have to use this command as the `prlctl start` command mounts the container private area automatically.
  
The `prlctl umount` command unmounts the container private area. Usually, there is no need in using this command either because `prlctl stop` unmounts the container private area automatically.
  
.Syntax
[subs="quotes"]
----
prlctl mount  _&lt;CT_name&gt;_
prlctl umount _&lt;CT_name&gt;_
----
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;CT_name&gt;_+|Container name. 
|====

prlctl move 
^^^^^^^^^^^
 
Moves container's private area to a new location on the same server. The container can be stopped, suspended or running.
  
.Syntax
[subs="quotes"]
----
prlctl move _&lt;CT_name&gt;_ --dst=_&lt;path&gt;_
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;CT_name&gt;_+|Container ID or name.
|+--dst=_&lt;path&gt;_+|Path to container's new private area.
|====

prlctl problem-report 
^^^^^^^^^^^^^^^^^^^^^
 
Generates a problem report for the specified container and either sends it to the Virtuozzo technical support team or displays it on the screen.
  
.Syntax
[subs="quotes"]
----
prlctl problem-report _&lt;CT_name&gt;_ &lt;-d, --dump|-s, --send  [--proxy [__&lt;user&gt;__ \
                      [:__&lt;passwd&gt;__]@__&lt;proxyhost&gt;__[:__&lt;port&gt;__]]] [--no-proxy]&gt;
----
  
.Options
[options="header",cols="3a,4a"]
|====
|Name|Description

|+_&lt;CT_name&gt;_+|ID of the container for which to generate the problem report. 
|`-d, --dump`|Collect technical data about the specified container and display it on the screen. You can also pipe the output to a file and then send it to the Virtuozzo technical support team to analyze your problem.
|`-s, --send`|Send the generated problem report to the Virtuozzo technical support team.
|+--proxy [__&lt;user&gt;__[:__&lt;passwd&gt;__]@+ \ +
+__&lt;proxyhost&gt;__[:__&lt;port&gt;__]]+|Use the specified information to send the generated report through a proxy server, if you use one to connect to the Internet.
|`--no-proxy`|Do not use a proxy server to send the generated report. This is the default behavior, so you can omit this parameter.
|====

prlctl register, unregister 
^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
The `register` command is used to register a container with Virtuozzo. 
  
The `unregister` command removes a container from the Virtuozzo registry.
  
.Syntax
[subs="quotes"]
----
prlctl register _&lt;path&gt;_ [--preserve-uuid &lt;yes|no&gt;]
prlctl unregister _&lt;CT_name&gt;_
----
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;path&gt;_+|Full path to the container directory.
|+_&lt;CT_name&gt;_+|ID of the container to remove from the Virtuozzo registry.
|+--preserve-uuid &lt;yes{brvbar}no&gt;+|Specifies what to do with the container UUID (universally unique identifier). If you specify `yes`, the UUID is preserved. If you specify `no`, the UUID is regenerated.

[NOTE]
[subs="quotes"]
====
*Note:* By default, UUIDs are regenerated.
====
|====

[options="compact"]
* Use the `register` command when you have a container on the server that does not show up in the list of the containers registered with the Virtuozzo. This can be a container that was previously removed from the registry or that was copied from another location.
* The `unregister` command removes a container from the Virtuozzo registry, but does not delete the container files from the server. You can re-register the container later using the `register` command.

  
prlctl reinstall 
^^^^^^^^^^^^^^^^
 
Recreates a container from scratch according to its configuration file. Copies old private area content to the +/vz/root/_&lt;CT_name&gt;_/old+ directory.
  
.Syntax
[subs="quotes"]
----
prlctl reinstall _&lt;CT_name&gt;_ [--skipbackup] [--resetpwdb] [--scripts _&lt;script&gt;_ [...]]
prlctl reinstall _&lt;CT_name&gt;_ [--listscripts] [--desc]
----
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;CT_name&gt;_+|Container name.
|`--resetpwdb`|Removes container's user database and creates a clean database as for any new installation.
|`--skipbackup`|Does not save the old private area contents to the `/old` directory.
|+--scripts _&lt;script&gt;_[...]+|Specifies the scripts to be executed during reinstallation. These scripts are used to customize application templates in the new container and bring them to the same state as in the old container. By default, all available scripts are executed.
|`--listscripts`|Lists the scripts to be executed during container reinstallation.
|`--desc`|Displays the description of the scripts to be executed during container reinstallation. Used together with the `--listscripts` option.
|====

[NOTE]
[subs="quotes"]
====
*Note:* Currently, the `reinstall` command may not be supported by the `prlctl` utility. Use `vzctl` instead.
====

prlctl set 
^^^^^^^^^^
 
This command is used for setting container parameters.
  
.Syntax
[subs="quotes"]
----
prlctl set _&lt;CT_name&gt;_ _&lt;option&gt;_ _&lt;value&gt;_
----
  
where _&lt;CT_name&gt;_ is container name.
  
The command options specified in this file can be subdivided into the following categories:

[options="compact"]
* miscellaneous
* networking
* resource management
* hard disk drive management

[NOTE]
[subs="quotes"]
====
*Note:* The current version of Virtuozzo does not support using some options with the `prlctl set` command (e.g., `--disabled`). If you run `prlctl set` with such an option, the command will notify you that the option is not supported. In this case, you can execute the `vzctl set` command instead.
====

General Options
+++++++++++++++
  
The table below lists the general options you can use with `prlctl set`.

[options="header",cols="1a,3a"]
|====
|Name|Description

|+--onboot &lt;yes{brvbar}no&gt;+|Set to `yes` to have Virtuozzo automatically start this container on next system startup.
|+--offline_management &lt;yes{brvbar}no&gt;+|Enabling/disabling the direct managing of the container through a common Internet browser by means of Power Panels and the Plesk control panel (as defined by the `OFFLINE_SERVICE` parameter in the global or container configuration file).
|+--offline_service _&lt;service_name&gt;_+|Defines whether the container can be managed by means of Power Panel or Plesk or both. Valid only if the `OFFLINE_MANAGEMENT` parameter is set to `yes`. The names of the available services can be taken from the file names (excluding the `.conf` extension) in the `/etc/vzredirect.d` directory on the server.
|+--userpasswd __&lt;user&gt;__:__&lt;password&gt;__+|This setting creates a new user with the specified password in the container, or changes the password of an already existing user. This command modifies not the container configuration file, but the `/etc/passwd` and `/etc/shadow` files inside the container. In case the container root is not mounted, it is automatically mounted to apply the changes and then unmounted.
|`--crypted`|Used with `--userpasswd`. Indicates that the specified password is already a hash.
|+--devnodes _&lt;device&gt;_:r{brvbar}w{brvbar}rw{brvbar}none&gt;+|Lets the container access the specified devices in the specified mode - read-only, write-only, or read-write - or denies any access. For example: `--devnodes hda1:rw`. The device must be present in the container `/dev` directory, otherwise, a new device is automatically created.

[NOTE]
[subs="quotes"]
====
*Note:* Currently, this option may not be supported by the `prlctl` utility. Use `vzctl` instead.
====
|+--netdev_add _&lt;name&gt;_+|Moves the specified network device from the server to the container. For example: `--netdev_add eth0`.

[NOTE]
[subs="quotes"]
====
*Note:* Currently, this option may not be supported by the `prlctl` utility. Use `vzctl` instead.
====
|+--netdev_del _&lt;name&gt;_+|Moves the specified network device from the given container to the server.

[NOTE]
[subs="quotes"]
====
*Note:* Currently, this option may not be supported by the `prlctl` utility. Use `vzctl` instead.
====
|+--capability {_&lt;name&gt;_:on{brvbar}off}+|Specifies capabilities inside the container. Setting the following capabilities is allowed: `AUDIT_WRITE`, `CHOWN`, `DAC_OVERRIDE`, `DAC_READ_SEARCH`, `FOWNER`, `FS_MASK`, `FSETID`, `IPC_LOCK`, `IPC_OWNER`, `KILL`, `LEASE`, `LINUX_IMMUTABLE`, `MKNOD`, `NET_ADMIN`, `NET_BIND_SERVICE`, `NET_BROADCAST`, `NET_RAW`, `SETGID`, `SETFCAP`, `SETPCAP`, `SETUID`, `SYS_ADMIN`, `SYS_BOOT`, `SYS_CHROOT`, `SYS_MODULE`, `SYS_NICE`, `SYS_PACCT`, `SYS_PTRACE`, `SYS_RAWIO`, `SYS_RESOURCE`, `SYS_TIME`, `SYS_TTY_CONFIG`, `VE_ADMIN`.

[NOTE]
[subs="quotes"]
====
*Note:* Currently, this option may not be supported by the `prlctl` utility. Use `vzctl` instead.
====
|+--features {_&lt;name&gt;_:on{brvbar}off}+|Enables/disables the support for the following functionality inside the container:

[options="compact"]
* `nfs`: mounting NFS shares
* `ipip`: creating IPIP tunnels
* `sit`: using the Simple Internet Transition (SIT) mechanisms
* `ppp`: using the PPP protocol
* `ipgre`: creating IP-GRE tunnels
* `bridge`: using bridges to connect virtual Ethernet devices
* `nfsd`: running an NFS-kernel-space server
|+--root _&lt;path&gt;_+|This setting does NOT move the root mount point of your container to a new path. It simply overrides the `VE_ROOT` parameter in the container configuration file.

[NOTE]
[subs="quotes"]
====
*Note:* Currently, this option may not be supported by the `prlctl` utility. Use `vzctl` instead.
====
|+--private _&lt;path&gt;_+|This setting does NOT move the private area of your container to a new path. It simply overrides the `VE_PRIVATE` parameter in the container configuration file. You should use this option only if you have manually moved the container private area to a new place and want to update the container configuration file.

[NOTE]
[subs="quotes"]
====
*Note:* Currently, this option may not be supported by the `prlctl` utility. Use `vzctl` instead.
====
|+--setmode &lt;restart{brvbar}ignore&gt;+|This option tells the utility either to restart or not restart the container after applying any parameters requiring that the container be rebooted for them to take effect.

[NOTE]
[subs="quotes"]
====
*Note:* Currently, this option may not be supported by the `prlctl` utility. Use `vzctl` instead.
====
|+--disabled &lt;yes{brvbar}no&gt;+|If set to `yes`, disables the container making it impossible to start the container once it was stopped. The disabled container can be started by passing the `--force` option to `prlctl set`.

[NOTE]
[subs="quotes"]
====
*Note:* Currently, this option may not be supported by the `prlctl` utility. Use `vzctl` instead.
====
|+--name _&lt;name&gt;_+|An arbitrary name assigned to the container. This name can be used, along with the container ID, to refer to the container while performing certain container-related operations on the server. Names must be alphanumeric and may contain the characters `\`, `-`, `_`. Names with white spaces must be enclosed in quotation marks.
|+--description _&lt;desc&gt;_+|Custom container description. Descriptions must be alphanumeric. Descriptions with white spaces must be enclosed in quotation marks.
|+--bindmount_add [_&lt;src&gt;_:]_&lt;dst&gt;_[,nosuid, noexec, nodev]+|Mounts a source directory (_&lt;src&gt;_) located on the server to a destination directory (_&lt;dst&gt;_) inside the container. If the source directory is not specified, mounts the directory to the +/vz/root/_&lt;CT_name&gt;_+ directory.

Additional options that can be used with `--bindmount_add` are the following:

[options="compact"]
* `noexec`. Do not allow execution of any binaries on the mounted directory.
* `nodev`. Do not interpret character or block special devices on the mounted directory. 
* `nosuid`. Do not allow set-user-identifier or set-group-identifier bits to take effect.

[NOTE]
[subs="quotes"]
====
*Note:* Currently, this option may not be supported by the `prlctl` utility. Use `vzctl` instead.
====
|+--bindmount_del {_&lt;dst&gt;_{brvbar}all}+|Removes the mount point created by using the `--bindmount_add` option from the container.

[NOTE]
[subs="quotes"]
====
*Note:* Currently, this option may not be supported by the `prlctl` utility. Use `vzctl` instead.
====
|+--vnc-mode &lt;auto{brvbar}manual{brvbar}off&gt;+|Enables or disables access to the container via the VNC protocol.
|+--vnc-port _&lt;port&gt;_+|Sets the VNC port number for the container. Used with `--vnc-mode manual`.
|+--vnc-passwd _&lt;passwd&gt;_ {brvbar} --vnc-nopasswd+|Sets the VNC password for the container or specifies that no password is needed for VNC connections. Either of these options is mandatory for any VNC setup.
|+--autocompact &lt;on{brvbar}off&gt;+|Enables or disables compaction for all disks in the container.

[NOTE]
[subs="quotes"]
====
*Note:* For details on how to enable or disable compaction for a specific disk in the container, see <<_hard_disk_drive_management_options>>.
====
|====

Resource Management Options
+++++++++++++++++++++++++++
  
Resource management options control the amount of resources a container may consume. If the setting has `bar:lim` after it than this setting requires specifying both barrier and limit values separated by colons.

[options="header",cols="1a,3a"]
|====
|Name|Description

|+--applyconfig _&lt;name&gt;_+|This option lets you set the resource parameters for the container not one by one, but by reading them from the container sample configuration file. All container sample configuration files are located in the `/etc/vz/conf` directory and are named according to the following pattern: +ve-_&lt;name&gt;_.conf-sample+, so you should specify only the +_&lt;name&gt;_+ part of the corresponding sample name after the `--applyconfig` option. Note that the names of sample configuration files cannot contain spaces. The `--applyconfig` option applies all the parameters from the specified sample file to the given container, except for the `OSTEMPLATE`, `TEMPLATES`, `VE_ROOT`, `VE_PRIVATE`, `HOSTNAME`, `IP_ADDRESS`, `TEMPLATE`, `NETIF` parameters (if they exist in the configuration sample file).
|+-p, --numproc __&lt;bar&gt;__:__&lt;lim&gt;__+|Number of processes and threads allowed. Upon hitting this limit, the container will not be able to start new process or thread. In this version of Virtuozzo, the limit shall be set to the same value as the barrier.

[NOTE]
[subs="quotes"]
====
*Note:* Currently, this option may not be supported by the `prlctl` utility. Use `vzctl` instead.
====
|+-e, --numiptent __&lt;bar&gt;__:__&lt;lim&gt;__+|Number of IP packet filtering entries.

[NOTE]
[subs="quotes"]
====
*Note:* Currently, this option may not be supported by the `prlctl` utility. Use `vzctl` instead.
====
|+--vmguarpages __&lt;bar&gt;__:__&lt;lim&gt;__+|Memory allocation guarantee, in pages (one page is 4 KB). Applications are guaranteed to be able to allocate memory while the amount of memory accounted as `privvmpages` does not exceed the configured barrier of the `vmguarpages` parameter. Above the barrier, memory allocation may fail in case of overall memory shortage. In this version of Virtuozzo, the limit shall be set to the same value as the barrier.

[NOTE]
[subs="quotes"]
====
*Note:* Currently, this option may not be supported by the `prlctl` utility. Use `vzctl` instead.
====
|+-l, --lockedpages __&lt;bar&gt;__:__&lt;lim&gt;__+|Memory not allowed to be swapped out (locked with the `mlock()` system call), in 4KB pages.

[NOTE]
[subs="quotes"]
====
*Note:* Currently, this option may not be supported by the `prlctl` utility. Use `vzctl` instead.
====
|+--shmpages __&lt;bar&gt;__:__&lt;lim&gt;__+|Total size of shared memory (including IPC, shared anonymous mappings and `tmpfs` objects), allocated by processes of a particular container, in 4KB pages.

[NOTE]
[subs="quotes"]
====
*Note:* Currently, this option may not be supported by the `prlctl` utility. Use `vzctl` instead.
====
|+--physpages __&lt;bar&gt;__:__&lt;lim&gt;__+|The total size of RAM used by processes, in 4KB pages. This is accounting-only parameter currently. It shows the usage of RAM by the container. For memory pages used by several different containers (mappings of shared libraries, for example), only a fraction of a page is charged to each container. The sum of the `physpages` usage for all containers corresponds to the total number of pages used in the system by all accounted users.

[NOTE]
[subs="quotes"]
====
*Note:* Currently, this option may not be supported by the `prlctl` utility. Use `vzctl` instead.
====
|+--privvmpages __&lt;bar&gt;__:__&lt;lim&gt;__+|Size in 4KB pages of private (or potentially private) memory, allocated by container applications. Memory that is always shared among different applications is not included in this resource parameter.

[NOTE]
[subs="quotes"]
====
*Note:* Currently, this option may not be supported by the `prlctl` utility. Use `vzctl` instead.
====
|+-n, --numfile __&lt;bar&gt;__:__&lt;lim&gt;__+|Number of files opened by all container processes. In this version of Virtuozzo, the limit shall be set to the same value as the barrier.

[NOTE]
[subs="quotes"]
====
*Note:* Currently, this option may not be supported by the `prlctl` utility. Use `vzctl` instead.
====
|+-f, --numflock __&lt;bar&gt;__:__&lt;lim&gt;__+|Number of file locks created by all container processes.

[NOTE]
[subs="quotes"]
====
*Note:* Currently, this option may not be supported by the `prlctl` utility. Use `vzctl` instead.
====
|+-t, --numpty __&lt;bar&gt;__:__&lt;lim&gt;__+|Number of pseudo-terminals. For example, `ssh` session, `screen`, `xterm` application consumes pseudo-terminal resource. In this version of Virtuozzo, the limit shall be set to the same value as the barrier.

[NOTE]
[subs="quotes"]
====
*Note:* Currently, this option may not be supported by the `prlctl` utility. Use `vzctl` instead.
====
|+-i, --numsiginfo __&lt;bar&gt;__:__&lt;lim&gt;__+|Number of `siginfo` structures (essentially, this parameter limits size of signal delivery queue). In this version of Virtuozzo, the limit shall be set to the same value as the barrier.

[NOTE]
[subs="quotes"]
====
*Note:* Currently, this option may not be supported by the `prlctl` utility. Use `vzctl` instead.
====
|+--cpuunits _&lt;units&gt;_+|CPU weight. This is a positive integer number that defines how much CPU time the container can get as compared to the other virtual machines and containers running on the server. The larger the number, the more CPU time the container can receive. Possible values range from 8 to 500000. If this parameter is not set, the default value of 1000 is used.
|+--cpulimit {__&lt;percent&gt;__{brvbar}__&lt;megahertz&gt;__}|CPU limit, in per cent or megahertz (MHz), the container is not allowed to exceed. This parameter is not set for newly created containers; so they can consume all free CPU power of the server. By default, the limit is set in percent. To set the limit in MHz, specify `m` after the value. When setting this parameter in per cent, keep in mind that one CPU core makes up 100%. So if the server has 4 CPU cores, the total CPU power will equal 400%.
|+--cpus _&lt;num&gt;_+|Number of CPU cores defining the CPU limit for a container. The limit is calculated by multiplying the power of one CPU core by the number of the specified CPU cores. This option also defines the number of CPUs shown to container users. This parameter is not set for newly created containers; so they can consume all free CPU power of the server.
|+--cpumask _&lt;num&gt;_+|CPU affinity mask. This mask defines the CPUs on the server that can be used to handle the processes running in the container. The CPU mask can be specified as both separate CPU index numbers (1,2,3) and CPU ranges (2-4,5-7).
|+--nodemask {_&lt;num&gt;_{brvbar}all}+|The NUMA node mask defining a NUMA node to bind the container to. Once you set the mask, the processes running in the container will be executed only on the CPUs that belong to the specified NUMA node.

[NOTE]
[subs="quotes"]
====
*Note:* Currently, this option may not be supported by the `prlctl` utility. Use `vzctl` instead.
====
|+--diskspace __&lt;amount&gt;__+|Total disk space consumed by the container, in megabytes. You can use the following suffixes to specify measurement units:

[options="compact"]
* `G` for gigabytes
* `M` for megabytes
* `K` for kilobytes
* `B` for bytes
|+--quotaugidlimit {&lt;0{brvbar}__&lt;N&gt;__}+|Enables (if set to a value other than `0`) or disables (if set to `0`) per-user/group quotas for further management with the standard Linux `quota` utility. Keep in mind the following:

[options="compact"]
* Enabling per-user and per-group quotas for a container requires restarting the container.
* If you delete a registered user but some files with their ID continue residing inside your container, the current number of UGIDs (user and group identities) inside the container will not decrease.
* If you copy an archive containing files with user and group IDs not registered inside your container, the number of UGIDs inside the container will increase by the number of these new IDs.
|+--ioprio _&lt;num&gt;_+|The container priority for disk I/O operations. The allowed range of values is `0-7`. The greater the priority, the more time the container has for writing to and reading from the disk. The default container priority is `4`.
|+--iolimit _&lt;num&gt;_+|The bandwidth a container is allowed to use for its disk input and output (I/O) operations. By default, the limit is set in megabytes per second. You can use the following suffixes to specify measurement units:

[options="compact"]
* `G`: sets the limit in gigabytes per second
* `M`: sets the limit in megabytes per second
* `K`: sets the limit in kilobytes per second
* `B`: sets the limit in bytes per second

In the current version of Virtuozzo, the maximum I/O bandwidth limit you can set for a container is 2 GB per second. The default I/O bandwidth limit for all newly created containers is set to 0, which means that no limits are applied to any containers.
|+--iopslimit _&lt;num&gt;_+|The maximum number of disk input and output operations per second a container is allowed to perform. By default, any newly created container does not have the IOPS limit set and can perform so many disk I/O operations per second as necessary.
|+--rate _&lt;class&gt;_:_&lt;Kbits&gt;_+|If traffic shaping is turned on, then this parameter specifies bandwidth guarantee for the container. The format is +&lt;class&gt;_:_&lt;Kbits&gt;_+ where +_&lt;class&gt;_+ is the network class (group of IP addresses) and +_&lt;Kbits&gt;_+ is the traffic bandwidth.
|+--ratebound &lt;yes{brvbar}no&gt;+|If set to "yes", the bandwidth guarantee is also the limit for the container and the container cannot borrow the bandwidth from the `TOTALRATE` bandwidth pool.
|+--memsize _&lt;size&gt;_+|The amount of RAM that can be used by the processes of a container, in megabytes. You can use the following suffixes to specify measurement units:

[options="compact"]
* `G` for gigabytes
* `M` for megabytes
* `K` for kilobytes
* `B` for bytes
|+--memguarantee _&lt;size&gt;_+|Sets a percentage of container's RAM that said container is guaranteed to have. By default, set to 0%.
|+--swappages _&lt;pages&gt;_+|The amount of swap space that can be used by the container for swapping out memory once the RAM is exceeded, in 4KB pages. You can use the following suffixes to specify measurement units:

[options="compact"]
* `G` for gigabytes
* `M` for megabytes
* `K` for kilobytes
* `B` for bytes
|+--swap _&lt;size&gt;_+|The amount of swap space that can be used by the container for swapping out memory once the RAM is exceeded, in bytes. You can use the following suffixes to specify measurement units:

[options="compact"]
* `G` for gigabytes
* `M` for megabytes
* `K` for kilobytes
* `B` for bytes
|+--vm_overcommit _&lt;factor&gt;_+|Memory overcommit factor that defines the memory allocation limit for a container. The limit is calculated as `(PHYSPAGES + SWAP) * FACTOR`

[NOTE]
[subs="quotes"]
====
*Note:* Currently, this option may not be supported by the `prlctl` utility. Use `vzctl` instead.
====
|====

Network Options
+++++++++++++++
  
Network-related options allow you to set the hostname, the domain to search when a not fully qualified domain name is used, the DNS server address and the IP addresses that container can use, and other parameters.

[options="header",cols="2a,3a"]
|====
|Name|Description

|+--hostname _&lt;name&gt;_+|Sets the hostname to the specified name. 
|+--ipadd _&lt;addr&gt;_+|Adds an IP address to a list of IP addresses the container can use and brings up the network interface with this address inside the container. If used with the `--ifname` option, adds an IP address to the specified container virtual network adapter.
|+--ipadd _&lt;addr&gt;_/_&lt;net_mask&gt;_+|Assigns the IP address and network mask to the container.

[NOTE]
[subs="quotes"]
====
*Note:* You can assign network masks to containers operating in the `venet0` networking mode only if the `USE_VENET_MASK` parameter in the Virtuozzo containers configuration file is set to `yes`.
====
|+--ipdel {_&lt;addr&gt;_{brvbar}all}+|Allows you to revoke IP address from the container. If "all" is used instead of IP address than all IP addresses will be revoked. If used with the `--ifname` option, deletes an IP address from the specified container virtual network adapter.
|+--nameserver _&lt;addr&gt;_+|The DNS server IP address for the container. If used with the `--ifname` option, sets the DNS server for the specified container virtual network adapter.
|+--searchdomain _&lt;domain&gt;_+|The DNS search domain for the container. More than one domain may be specified.
|+--netfilter &lt;disabled{brvbar}stateless{brvbar}stateful{brvbar}full&gt;+|Indicates which `iptables` modules are allowed for the container. If some of the allowed modules are not loaded on the destination Hardware Node after migration or restoration from backup, they will be automatically loaded on the migrated or restored container start. The following modes are available:

[options="compact"]
* *disabled*: none.
* *stateless*: (default) all modules except `conntrack` and NAT-related.
* *stateful*: all modules except NAT-related.
* *full*: all modules.
|+--netif_add _&lt;name&gt;_[, __&lt;MAC&gt;__, __&lt;host_MAC&gt;__]+|Creates a new `veth` virtual network adapter and assigns the name of +_&lt;name&gt;_+ to the Ethernet interface inside the container. Along with the Ethernet interface name inside the container, you can set the following parameters when creating the `veth` adapter:

[options="compact"]
* +_&lt;MAC&gt;_+: the MAC address to be assigned to the `veth` Ethernet interface inside the container.
* +_&lt;host_MAC&gt;_+: the MAC address to be assigned to the `veth` Ethernet interface on the server.

Only the Ethernet interface name (+_&lt;name&gt;_+) is mandatory; all the other parameters, if not specified, are automatically generated by Virtuozzo during the `veth` adapter creation.
|+--netif_del _&lt;name&gt;_+|Removes the `veth` virtual network adapter with the specified name from the container.
|+--ifname _&lt;name&gt;_+|Specifies the name of the `veth` virtual network adapter whose settings are to be configured. This option can be used along with one of the following options: `--ipadd`, `--ipdel`, `--nameserver`, `--gw`, `--network`, `--dhcp`, `--mac`, `--host_mac`.
|+--mac _&lt;addr&gt;_+|The MAC address to be assigned to the `veth` virtual Ethernet interface inside the container. Should be used along with the `--ifname` option.
|+--host_mac _&lt;addr&gt;_+|The MAC address to be assigned to the `veth` virtual Ethernet interface on the server. Should be used along with the `--ifname` option.
|+--host_ifname _&lt;name&gt;_+|The name to be assigned to the `veth` virtual Ethernet interface on the server. Should be used along with the `--ifname` option.
|+--network _&lt;network_ID&gt;_+|Connects the `veth` virtual network adapter to the bridge associated with the specified network ID. Should be used along with the `--ifname` option. You can also use this option to disconnect the `veth` virtual network adapter from the bridge. To this effect, you should specify `""` after the option.
|+--dhcp &lt;yes{brvbar}no&gt;+|Defines the IP assignment type for the `veth` virtual network adapter:

[options="compact"]
* `yes` enables the dynamic IP address allocation for the container.
* `no` turns off the dynamic IP address allocation for the container.

Should be used along with the `--ifname` option.
|+--gw _&lt;addr&gt;_+|Set the default gateway for the `veth` virtual network adapter. Should be used along with the `--ifname` option.
|+--apply-iponly &lt;yes{brvbar}no&gt;+|If set to `yes`, the hostname, nameserver, and search domain settings from the container configuration file are ignored.
|====

Hard Disk Drive Management Options
++++++++++++++++++++++++++++++++++
  
This group of options is used to manage virtual hard disks in a container.
  
.Syntax
[subs="quotes"]
----
prlctl set _&lt;CT_name&gt;_ --device-add hdd [--image _&lt;file&gt;_] [--size _&lt;size&gt;_]
           [--mnt _&lt;path&gt;_] [--iface &lt;sata|ide|scsi&gt;] [--position _&lt;pos&gt;_]
           [--subtype &lt;buslogic|lsi-spi|lsi-sas&gt;]
prlctl set _&lt;CT_name&gt;_ --device-set hdd__&lt;N&gt;__ [--image _&lt;file&gt;] [--size +&lt;size&gt;_]
           [--mnt _&lt;path&gt;_] [--iface &lt;sata|ide|scsi&gt;] [--position _&lt;pos&gt;_]
           [--subtype &lt;buslogic|lsi-spi|lsi-sas&gt;] [--autocompact &lt;on|off&gt;]
prlctl set _&lt;CT_name&gt;_ --backup-add _&lt;backup_ID&gt;_ [--disk _&lt;disk_name&gt;_]
prlctl set _&lt;CT_name&gt;_ --device-del hdd__&lt;N&gt;__ [--detach-only|--destroy-image]
prlctl set _&lt;CT_name&gt;_ --backup-del {_&lt;backup_ID&gt;_|all}
----

.Options
[options="header",cols="2a,3a"]
|====
|Name|Description

|+_&lt;CT_name&gt;_+|Container name.
|`--device-add hdd`|Adds a virtual hard disk to the container. If no other options are specified, the command creates a new unmounted disk with the following parameters:

[options="compact"]
* name: +hdd__&lt;N&gt;__+ where +__&lt;N&gt;__+ is the next available disk index.
* size: 65536 MB
* image location: +/vz/private/_&lt;CT_name&gt;_/disk-_&lt;ID&gt;_.hdd+.
|+--device-set hdd__&lt;N&gt;__+|Modifies the parameters of the virtual hard disk +hdd__&lt;N&gt;__+.

[NOTE]
[subs="quotes"]
====
*Note:* For the list of disks, use the `prlctl list -i` command.
====
|+--image _&lt;file&gt;_+|Specifies an image file that will be used to emulate the virtual disk.

[options="compact"]
* If the specified image does not exist, it is created and used to emulate the virtual hard disk.
* If the specified image exists, it is used to emulate the virtual hard disk.
|+--size _&lt;size&gt;_+|Specifies the size of the virtual hard disk, in megabytes.
|+--mnt _&lt;path&gt;_+|Specifies the mount point of the virtual hard disk inside the container. A corresponding entry is also added to container's `/etc/fstab` file, so the disk is mounted automatically on container start.
|+--autocompact &lt;on{brvbar}off&gt;+|Enables or disables compaction for the specified disk in the container.

[NOTE]
[subs="quotes"]
====
*Note:* For details on how to enable or disable compaction for all disks in the container, see <<_general_options>>.
====
|+--backup-add _&lt;backup_ID&gt;_+|Attach the backup with the identifier +_&lt;backup_ID&gt;_+ to the virtual machine as a virtual hard disk. To obtain the backup ID, use the `prlctl backup-list -f` command.
|+--disk _&lt;disk_name&gt;_+|Used with `--backup-add`. The name of the disk in the backup to attach. If a disk is not specified, all disks contained in the backup will be attached. To obtain the disk name, use the `prlctl backup-list -f` command.
|+--device-del hdd__&lt;N&gt;__+|Deletes a virtual hard disk from the stopped container.
|`--detach-only`|Removes the virtual disk from the container configuration but leaves its image file intact.
|`--destroy-image`|Removes the virtual disk from the container configuration and deletes its image file.
|+--backup-del {__&lt;backup_ID&gt;__{brvbar}all}+|Detach either the backup with the identifier +_&lt;backup_ID&gt;_+ or detach all backups from the virtual machine.
|====

prlctl snapshot, snapshot-list, snapshot-switch, snapshot-delete 
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
Takes, displays, reverts to, and deletes container snapshots.
  
.Syntax
[subs="quotes"]
----
prlctl snapshot _&lt;CT_name&gt;_ [-n, --name _&lt;name&gt;_] [-d, --description _&lt;desc&gt;_]
prlctl snapshot-list _&lt;CT_name&gt;_ [-t, --tree] [-i, --id _&lt;snapshot_ID&gt;_]
prlctl snapshot-switch _&lt;CT_name&gt;_ -i, --id _&lt;snapshot_ID&gt;_
prlctl snapshot-delete _&lt;CT_name&gt;_ -i, --id _&lt;snapshot_ID&gt;_
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;CT_name&gt;_+|Container name.
|+-n, --name _&lt;name&gt;_+|User-defined snapshot name. Names with white spaces must be enclosed in quotation marks.
|+-d, --description _&lt;desc&gt;_+|User-defined snapshot description. Descriptions with white spaces must be enclosed in quotation marks.
|`-t, --tree`|Displays the snapshot list as a tree. The default display format is tabular with *Parent Snapshot ID* and *Snapshot ID* as columns.
|+-i, --id _&lt;snapshot_ID&gt;_+|[options="compact"]
* Use with `prlctl snapshot-list` to specify the ID of the snapshot to use as the root. If this parameter is omitted, the entire snapshot tree will be displayed.
* Use with `prlctl snapshot-switch` to specify the ID of the snapshot to revert to.
* Use with `prlctl snapshot-delete` to specify the ID of the snapshot to delete.
|====

[NOTE]
[subs="quotes"]
====
*Note:* If the snapshot you want to delete has children snapshots derived from it, they will not be deleted.
====

prlctl start, stop, restart, status 
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
These commands start, stop, restart, and show the current state of containers, respectively.
  
.Syntax
[subs="quotes"]
----
prlctl start _&lt;CT_name&gt;_ [--wait]
prlctl stop _&lt;CT_name&gt;_ [--fast]
prlctl restart _&lt;CT_name&gt;_
prlctl status _&lt;CT_name&gt;_
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;CT_name&gt;_+|Container name.
|====

The first command is used to start a container. It will set up all network interfaces inside the container, initialize the container quota, if needed, start the `init` process inside the container, and exit. You can also make the `prlctl start` command wait for all the necessary startup processes to complete and the container to boot into the default runlevel by passing the `--wait` option to this command.
  
`prlctl stop` shuts the container down. If the container is not down after a two-minute timeout due to an error in an application, for example, `prlctl` will forcibly kill all the processes inside the container. To avoid waiting for two minutes in case of a corrupted container, you may use the `--fast` option with this command. 

When starting or stopping a container, `prlctl` executes a number of helper scripts located in the +/vz/private/_&lt;CT_name&gt;_/scripts+ and `/usr/libexec/libvzctl/scripts/` directories.
  
.Scripts:
[options="header",cols="1a,3a"]
|====
|Name|Description

|`vz-create_prvt`|This script is expected to create the container private area from a private area template.
|`vz-net_add`|This script sets up the necessary routing entries for container IP addresses and adds public ARP records on all interfaces.
|`vz-net_del`|This script deletes routing entries and ARP records for container IP addresses from all interfaces.
|`vz-pci_configure`|This configuration script is executed after a PCI device is added to or removed from a container.
|`vz-setrate`|This script configures the network traffic shaping for a container.
|`vz-start`|This script is called just before a container is started and used to perform any additional setup of the container, such as network setup.
|`vz-stop`|This script is called just after a container is shut down and can be used to perform any additional cleanup of the container, such as network cleanup.
|====
  
You should use action scripts (`vz-start`/`vz-stop`) if you would like to carry out some actions upon the container startup/shutdown. However, there might be situations when you have to modify other scripts documented above. In this case it is strongly suggested that you create a separate script containing all your modifications and add an invocation of this script to shipped scripts. This will facilitate upgrades to future Virtuozzo versions.
  
The +prlctl restart _&lt;CT_name&gt;_+ command consecutively performs the stopping and starting of the corresponding container.
  
The `prlctl status` command shows the current container state. It outputs the following information: whether the container private area exists, whether it is mounted, and whether the container is running.
 
prlctl suspend, resume 
^^^^^^^^^^^^^^^^^^^^^^
 
The `prlctl suspend` command is used to save the state of a running container.
  
.Syntax
[subs="quotes"]
----
prlctl suspend _&lt;CT_name&gt;_
----
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;CT_name&gt;_+|Container name.
|====

During the `prlctl suspend` execution, the current container state is saved to a special dump file and the container itself is stopped. The created dump file is saved to the `Dump` file in the +/vz/private/_&lt;CT_name&gt;_/dump+ directory on the server.
  
The `prlctl resume` command is used to restore the container from its dump file created with the `prlctl suspend` command.
  
.Syntax
[subs="quotes"]
----
prlctl resume _&lt;CT_name&gt;_
----
  
When executed, `prlctl resume` searches for the `Dump` file in the +/vz/private/_&lt;CT_name&gt;_/dump+ directory on the server and restores the container from this file.You can restore the container dump file on the Source Server, i.e. on the server where this container was running before its dumping, or transfer the dump file to another server and restore it there.

[NOTE]
[subs="quotes"]
====
*Note:* Before restoring a container from its dump file, make sure that the file system on the Destination Server is identical to that at the moment of the container dumping. Otherwise, the container restoration may fail.
====

prlctl list 
^^^^^^^^^^^
 
Displays a list of containers on the Hardware Node. Displays information on containers on the Hardware Node.
  
.Syntax
[subs="quotes"]
----
prlctl list --vmtype ct [-a, --all] [-o, --output _&lt;field&gt;_[,...]]
                        [-s, --sort _&lt;field&gt;_|-_&lt;field&gt;_] [-t, --template] [-j, --json]
prlctl list -i, --info --vmtype ct [_&lt;CT_name&gt;_] [-f, --full] [-t, --template]
                                   [-j, --json]
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|`-a, --all`|List all running, stopped, suspended, and paused containers. If this and the rest of the parameters are omitted, only the running containers will be displayed.
|`-t, --template`|List available container templates instead of actual containers.
|+-o, --output _&lt;field&gt;_[,...]+|Display only the specified fields. Type field names in lower case. Separate multiple fields with commas. For the list of fields, see <<_prlctl_list_output_parameters>>.
|+-s, --sort {_&lt;field&gt;_{brvbar}-_&lt;field&gt;_}+|Sort containers by the specified field in either ascending or descending order.
|`-i, --info`|Display detailed information about the specified container.
|`-f, --full`|Display detailed information about network cards in containers. Used with the `--info` option.
|+_&lt;CT_name&gt;_+|Thename of the container for which to display the detailed information. If not specified, the information will be displayed for all registered containers.
|`-j, -json`|Produce machine-readable output in the JSON format.
|====

prlctl list Output Parameters
+++++++++++++++++++++++++++++
  
Listed below are the parameters that can be specified after the `-o` switch.

[options="header",cols="1a,1a,3a"]
|====
|Name|Output Column|Description

|`uuid`|`UUID`|Container UUID.
|`hostname`|`HOSTNAME`|Container hostname.
|`name`|`NAME`|Container name.
|`description`|`DESCRIPTION`|Container description.
|`ostemplate`|`OSTEMPLATE`|Specifies the name of the OS template your container is based on (e.g., `centos-6-x86_64`).
|`ip`|`IP_ADDR`|Container IP address.
|`status`|`STATUS`|Container status (e.g., running or stopped).
|`numproc`|`NPROC`|The number of processes and threads allowed.
|`mac`|`MAC`|Network device's MAC address.
|`netif`|`NETIF`|Network devices in the container.
|`iolimit`|`IOLIMIT`|The bandwidth a container is allowed to use for its disk input and output (I/O) operation, in bytes per second.
|`ha_enable`|`HA_ENABLE`|Indicates whether the container is joined to the High Availability Cluster.
|`ha_prio`|`HA_PRIO`|Container priority in the High Availability Cluster (0 is the lowest). Higher-priority virtual environments are restarted first in case of failures.
|====

Migration Utilities 
~~~~~~~~~~~~~~~~~~~
  
This section describes the utilities you can use to migrate containers between physical servers or move/clone containers within the same server.

pmigrate 
^^^^^^^^
 
The `pmigrate` utility is used to perform different kinds of container migration.
  
.Syntax
[subs="quotes"]
----
pmigrate __&lt;source_server&gt;__{nbsp}__&lt;destination_server&gt;__ [_&lt;options&gt;_]
----
  
The +_&lt;source_server&gt;_+ can be either the physical server hosting the virtual machine or container to move or the physical computer to migrate. The +_&lt;destination_server&gt;_+ is the server where the resulting container is to be hosted. If the source and/or destination server is not specified, the operation is performed on the local server.
  
Both the +_&lt;source_server&gt;_+ and +_&lt;destination_server&gt;_+ consist of two parts:

[options="compact"]
* _&lt;type&gt;_ denotes the type of computer to migrate and can be one of the following:
+
--
[options="compact"]
* `h` must be specified when migrating a physical server.
* `c` must be specified when migrating a container.
* `v` must be specified when migrating a virtual machine.
--
* _&lt;address&gt;_ denotes the location of computer to migrate and can be one of the following:
+
--
[options="compact"]
** The computer location if you are migrating a physical server.
** The computer location and the virtual machine name or container ID if you are migrating a virtual machine or container, respectively. The location must be separated from the virtual machine name/Container ID by the slash (`/`).
--

The location format is as follows:
  
[subs="quotes"]
----
[__&lt;user&gt;__[:__&lt;password&gt;__]@]__&lt;dst&gt;__[:__&lt;port&gt;__]
----

where +_&lt;dst&gt;_+ is the destination server IP address or hostname.
  
The options you can use with `pmigrate` depend on whether you are migrating to a virtual machine or a container. This section describes the parameters for migrating containers between hardware nodes and for moving virtual machines and physical servers to containers. For information on performing these operations for virtual machines, See <<_pmigrate>>.
  
Container-related Options
+++++++++++++++++++++++++

The following options can be used with `pmigrate` when migrating containers between hardware nodes:

[options="header",cols="1a,3a"]
|====
|Name|Description

|`-s, --nostart`|Do not attempt to start the container on the destination server after its successful migration if the container was running on the source server prior to the migration. This option does not have any effect if the container was not running on the source server.
|+-r, --remove-area &lt;yes{brvbar}no&gt;+|This option takes precedence of the `REMOVEMIGRATED` setting from the global configuration file. If "yes" is specified, then the container private area and configuration file will be deleted after successful migration. If "no" is specified, the private area and configuration file will be left on the source server and have the `.migrated` suffix appended to them.
|`-f, --nodeps [=[all][,cpu_check][,disk_space][,technologies][,license][,rate]]`|During its execution, `pmigrate` performs a number of checks on the destination server (e.g., it verifies that all OS and application templates required for the container are present on the destination server) and if some checks fail, exits with an error. This option allows you to bypass all checks and migrate the container. If you specify this option for a running container, the container will not be automatically started on the destination server. You should manually start it after adding the missing templates. You can additionally use one or several of the following parameters with this option:

[options="compact"]
* `all`: do not perform any checks on the destination server.
* `cpu_check`: do not check the CPU capabilities of the Destination Server.
* `disk_space`: do not check the amount of disk space on the destination server.
* `technologies`: do not check a set of technologies provided by the Virtuozzo kernel on the destination server (for the description of the `TECHNOLOGIES` parameter, See <<_container_configuration_file>>.
* `license`: do not check the license installed on the destination server.
* `rate`: do not check the value of the `RATE` parameter in the Virtuozzo global file.
|`-b, --batch`|Normally, you do not have to specify this option. It is used by Virtuozzo scripts and changes the screen output to a computer-parsable form.
|+--ssh=_&lt;ssh_options&gt;_+|Additional options to be passed to `ssh` while connecting to the destination server.

[NOTE]
[subs="quotes"]
====
*Note:* Do not specify the destination server hostname as an option of `--ssh`.
====
|`--keep-dst`|Do not remove the 'synched' container private area on the destination server if some error occurred during the migration. This option allows you to prevent `pmigrate` from the repeated 'synching' the container private area if the first migration attempt failed for some reason or other.
|`--online`|Migrates the running container with zero downtime. By default, the "iterative online migration" is used. During migration:

[options="compact"]
. The main amount of container memory is transferred to the destination server.
. The container is dumped and saved to an image file.
. The image file is transferred to the destination server where it is undumped.

Using this type of online migration allows you to attain the smallest service delay. If you do not want to use the "iterative online migration", supply the `--noiter` option.
|`--noiter`|Can be used only together with the `--online` option. Sets the migration type to "simple". This option cannot be used together with the `--require-realtime` option.
|`--require-realtime`|Can be used only together with the `--online` option. Forces `pmigrate` to move the container by using the "iterative online migration". If this migration type cannot be carried out for some reason, the command will fail and exit. This option cannot be used together with the `--noiter` option. If the default "iterative online migration" cannot be carried out, and this option is omitted, `pmigrate` will try to move your container by using "simple online migration".
|`--readonly`|Just copy the specified container to the destination server without making any changes to the container on the source server.
|`--convert-vzfs`|Convert legacy containers to the container-in-an-image-file layout.
|`--dry-run`|Simulate the same operations as `pmigrate` completes without specifying this option (connects to the destination server, verifies that all OS and application templates required for the container are present on the server, etc.); however, the container itself is not moved to the destination server.
|`--non-sharedfs`|Use to migrate containers from a shared file system to a non-shared one.
|====

Virtual Machine-related Options
+++++++++++++++++++++++++++++++
  
The following options can be used with `pmigrate` when migrating a physical server or a virtual machine to a container:

[options="header",cols="1a,3a"]
|====
|Name|Description

|`-c`|Mandatory. The full path to the configuration file on the hardware node that was created on the physical server by means of the `vzhwcalc` utility. You can specify only the name of the configuration file if you run the `vzp2v` utility from the directory where this file is located.
|`-q, --quota`|Optional. The partition on your physical server which has any per-user/group quotas imposed on it. This partition will be migrated to the container together with all quotas imposed on it. Moreover, these quotas will be applied to the entire container after the server migration.
|`-z, --eztmpl`|Optional. The EZ OS template to be used to create the container. You may list all OS templates installed on the hardware node together with their updates by executing the `vzpkg list` command. If an OS template is not specified, the `mkvzfs` command is executed during the container creation which makes an empty private area with the name of +/vz/private/_&lt;CT_name&gt;_+ on the server. This private area is then used to copy all the physical server files to it.
|`-d, --dist`|Optional. The Linux version your physical server is running. The name of the version specified should coincide with the name of the corresponding distribution configuration file located in the `/usr/libexec/libvzctl/dists` directory on the hardware node. For example, if you specify `centos-6` as the value of this option, the `centos-6.conf` file should be present in the `/usr/libexec/libvzctl/dists` directory on the hardware node. You must obligatorily set this option, if there is no `DISTRIBUTION` variable specified in the server configuration file. In case the `DISTRIBUTION` variable is set in the configuration file and you have specified the `-d` option, the latter takes precedence.
|`--exclude`|Optional. The path to the directories and files which will be excluded from copying to the container. This option allows you to avoid migrating the data you do not need. To gain more understanding on this option, please consult the man pages for the `rsync` utility from where it was borrowed.
|`-S, --srvstop`|Optional. The services to be stopped for the time of the physical server migration. We recommend that you stop all the services on the physical server except for the critical ones (e.g., the `sshd` service that is needed to provide communication between the physical server and the hardware node) before the migration. This will prevent the running services from modifying any files being moved.
|====

prlctl clone 
^^^^^^^^^^^^
 
Creates an exact copy of the specified container.
  
.Syntax
[subs="quotes"]
----
prlctl clone _&lt;CT_name&gt;_ --name _&lt;new_name&gt;_ [--template] [--dst=_&lt;path&gt;_]
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;CT_name&gt;_+|Name of the container to clone.
|+--name _&lt;new_name&gt;_+|Name or ID to be assigned to the new container.
|`--template`|Create a container template instead of a clone. Template cannot be started.

[NOTE]
[subs="quotes"]
====
*Note:* Container templates do not have any practical use in Virtuozzo 7 and are mainly used in Odin Automation for Cloud Infrastructure. 
====
|+--dst=_&lt;path&gt;_+|Full path to the directory for storing the contents of the cloned container. If this parameter is omitted, the clone is created in the default directory.
|====

Backup and Restoration Utilities 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  
Any container is defined by its private area, configuration files, action scripts, and quota information. Backing up these components allows you to restore all the content of a container on any Virtuozzo-based system at any time if the container gets broken.

prlctl backup, backup-list, backup-delete, restore 
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
Creates, lists, deletes or restores container backups.
  
.Syntax
[subs="quotes"]
----
prlctl backup _&lt;CT_name&gt;_ [-f, --full] [-i, --incremental] [--description _&lt;desc&gt;_]
              [-s, --storage [__&lt;user&gt;__[:__&lt;passwd&gt;__]@]__&lt;server&gt;__[:__&lt;port&gt;__]]
prlctl backup-list [_&lt;CT_name&gt;_] [-f, --full] [--localvms]
                   [-s, --storage [__&lt;user&gt;__[:__&lt;passwd&gt;__]@]__&lt;server&gt;__[:__&lt;port&gt;__]]
prlctl backup-delete {_&lt;CT_name&gt;_ | -t, --tag _&lt;backup_ID&gt;_}
                     [-s, --storage [__&lt;user&gt;__[:__&lt;passwd&gt;__]@]__&lt;server&gt;__[:__&lt;port&gt;__]
prlctl restore {_&lt;CT_name&gt;_ | -t, --tag _&lt;backup_ID&gt;_} [-n, --name _&lt;new_name&gt;_]
               [--dst=_&lt;path&gt;_] [-s, --storage [__&lt;user&gt;__[:__&lt;passwd&gt;__]@]__&lt;server&gt;__[:__&lt;port&gt;__]]
----

.Options
[options="header",cols="1a,1a"]
|====
|Name|Description

|+_&lt;CT_name&gt;_+|Container name.

[options="compact"]
* Use with `prlctl backup` to create a backup of the specified container.
* Use with `prlctl backup-list` to list backups of the specified container.
* Use with `prlctl backup-delete` to delete all backups of the specified container.
* Use with `prlctl restore` to restore the most recent backup of the specified container.
|+-s, --storage [__&lt;user&gt;__[:__&lt;passwd&gt;__]@]__&lt;server&gt;__[:__&lt;port&gt;__]+|Specifies a remote backup server address, port, and credentials. If this option is omitted, the backup will be saved on the default backup server that can be configured using the *prlsrvctl set* command.
|+--description _&lt;desc&gt;_+|Backup description. Descriptions with white spaces must be enclosed in quotation marks.
|`-f, --full`|[options="compact"]
* Use with `prlctl backup` to create a full backup of the container. A full backup contains all container data.
* Use with `prlctl backup-list` to display full backup information.
|`-i, --incremental`|Create an incremental backup of the container. An incremental backup contains only the files changed since the previous full or incremental backup. This is the default backup type.
|`--localvms`|List local backups only.
|+-t, --tag _&lt;backup_ID&gt;_+|The ID of the backup to restore or delete.
|+-n, --name _&lt;new_name&gt;_+|A new name to assign to the restored container. If this option is omitted, the container will be restored with the original name.
|+--dst=_&lt;path&gt;_+|Restore the container to the specified directory on the server. If this option is omitted, the container will be restored to +/var/parallels/_&lt;CT_name&gt;_+.
|====

EZ Template Management Utilities 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  
This section described the utilities you can use to manage OS and application templates.

vzpkg 
^^^^^
 
The `vzpkg` utility is used to manage OS and application EZ templates either inside your containers or on the server itself. This tool can also be used to manage standard software packages (e.g., `mysql.rpm`) inside containers.
  
.Syntax
[subs="quotes"]
----
vzpkg _&lt;command&gt;_ [_&lt;options&gt;_] {_&lt;CT_name&gt;_|_&lt;object&gt;_}
vzpkg --help
----

.Commands
[options="header",cols="1a,3a"]
|====
|Name|Description

|`install template`|Installs OS and application EZ templates on the server.
|`update template`|Updates OS and application EZ templates installed on the server.
|`remove template`|Removes OS and application EZ templates from the server.
|`list`|Outputs a list of EZ templates, OS template caches with preinstalled application templates, or software packages either on the server or inside a particular container.
|`info`|Outputs information on any EZ templates or software packages available on the server or inside the container.
|`status`|Outputs information on updates for the packages installed inside a container.
|`install`|Adds application EZ templates to or to install software packages inside the container.
|`update`|Updates application EZ templates and software packages inside the container.
|`remove`|Removes application EZ templates or software packages from the container.
|`create cache`|Creates a tarball (cache) for the given OS EZ template.
|`update cache`|Updates the existing tarball (cache) for the given OS EZ template.
|`remove cache`|Removes a tarball (cache) for the given OS EZ template.
|`create appcache`|Creates a cache of an OS EZ template with preinstalled application templates.
|`update appcache`|Updates or recreates a cache of an OS EZ template with preinstalled application templates.
|`remove appcache`|Removes a cache of an OS EZ template with preinstalled application templates.
|`localinstall`|Installs a software package inside a container from the corresponding file on the server.
|`localupdate`|Updates the software packages installed inside your container(s) by means of the `vzpkg install` or `vzpkg localinstall` commands.
|`upgrade`|Upgrades an OS EZ template the container is based on to a newer version.
|`fetch`|Downloads packages included in EZ templates to the server and to store them in the `vzpkg` local cache.
|`clean`|Removes all locally cached data from the template directories on the server.
|`update metadata`|Updates the local metadata on the server.
|====

vzpkg install template 
^^^^^^^^^^^^^^^^^^^^^^
 
This command is used to install an OS or application EZ template on the server from an RPM package or Virtuozzo repositories.
  
.Syntax
[subs="quotes"]
----
vzpkg install template [_&lt;options&gt;_] _&lt;object&gt;_ [...]
----
  
where +_&lt;object&gt;_+ is a path to an RPM package or an EZ template name.
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|`-q, --quiet`|Disables logging to the screen and to the log file.
|`-f, --force`|Forces installation of the EZ template on the server.
|====

[NOTE]
[subs="quotes"]
====
*Note:* To install multiple EZ templates, specify multiple RPM package or EZ template names separated by white spaces.
====

vzpkg update template 
^^^^^^^^^^^^^^^^^^^^^
 
This command is used to update an OS or application EZ template on the server from an RPM package or Virtuozzo repositories.
  
.Syntax
[subs="quotes"]
----
vzpkg update template [_&lt;options&gt;_] _&lt;object&gt;_ [...]
----

where +_&lt;object&gt;_+ is a path to an RPM package or an EZ template name.
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|`-q, --quiet`|Disables logging to the screen and to the log file.
|`-f, --force`|Forces update of the EZ template.
|====

[NOTE]
[subs="quotes"]
====
*Note:* To update multiple EZ templates, specify multiple RPM package or EZ template names separated by white spaces.
====

vzpkg remove template 
^^^^^^^^^^^^^^^^^^^^^
 
This command removes an OS or application EZ template from the server.
  
.Syntax
[subs="quotes"]
----
vzpkg remove template [_&lt;options&gt;_] _&lt;template_name&gt;_ [...]
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+-F, --for-os _&lt;OS_template&gt;_+|Specifies the OS EZ template to delete the application EZ template from.
|`-q, --quiet`|Disables logging to screen and file.
|`-f, --force`|Forces deletion of the EZ template.
|====

When executed, the `vzpkg remove template` command removes the specified OS EZ template from the server. To delete an application EZ template, additionally specify the name of the OS EZ template (+_&lt;OS_template&gt;_+) under which this application template is to be run.

  
vzpkg list 
^^^^^^^^^^
 
The `vzpkg list` command is used to list

[options="compact"]
* EZ templates installed on the server, in a container, or available in remote EZ template repositories
* YUM software groups or individual packages installed in a container
  
.Syntax
[subs="quotes"]
----
vzpkg list [_&lt;options&gt;_] [_&lt;OS_template&gt;_|_&lt;CT_name&gt;_ [...]]
----

If you indicate a container name, the command will list all EZ templates applied to the specified container. If you indicate an OS EZ template, `vzpkg list` will display a list of application EZ templates available for this OS EZ template. Without any options, the utility lists all EZ templates installed on the server.
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|`-p, --package`|Lists the software packages installed in the container or included in the OS EZ template.
|`-g, --groups`|Lists the YUM software groups installed in the container or available for the OS EZ template. The `-g` option works only for containers running RPM-based Linux distributions.
|`-O, --os`|Displays the OS EZ template the container is based on.
|`-A, --app`|Displays the application EZ templates installed in the container or included in the OS EZ template.
|`-C, --cache`|Lists the packages included in the specified EZ template or applied to the specified container from the local `vzpkg` cache. You can omit this parameter if the elapsed time from the last `vzpkg` cache update does not exceed the value of the `METADATA_EXPIRE` parameter specified in the `/etc/vztt/vztt.conf` file. Should be used along with the `-p` option.
|`-r, --remote`|If the elapsed time from the last `vzpkg` cache update does not exceed the value of the `METADATA_EXPIRE` parameter specified in the `/etc/vztt/vztt.conf` file, you should use this option to make `vzpkg list` list the packages included in the specified EZ template or applied to the specified container in the remote repositories. Should be used along with the `-p` option.
|`-u, --custom-pkg`|Displays a list of packages that are applied to the specified container but absent from the repository set to handle the EZ template(s) where these packages are included.
|`-i, --pkgid`|Displays the ID assigned to the EZ template instead of its name; these IDs are unique within the given system. If the +_&lt;CT_name&gt;_+ argument is given, the command shows the IDs of the EZ templates available inside the container. If the +_&lt;OS_template&gt;_+ argument is given, the command displays the IDs of the OS EZ template specified and all its EZ application templates.
|`-S, --with-summary`|In addition to listing the EZ templates available either in the container (if the +_&lt;CT_name&gt;_+ argument is given) or installed on the server (if the +_&lt;CT_name&gt;_+ argument is omitted), this option makes `vzpkg list` display the summary information on the corresponding EZ templates/packages.
|`-c, --cached`|This option has no effect if the +_&lt;CT_name&gt;_+ argument is given. If used for listing the EZ templates available on the server, it makes `vzpkg list` omit all application and OS EZ templates for which the cache has not been created (by running the `vzpkg create cache` command). In other words, with this option on, `vzpkg list` will list only the OS EZ templates ready to be used for the container creation.
|`appcache`|Outputs a list of OS EZ template caches with preinstalled applications.
|+-d, --debug _&lt;num&gt;_+|Sets the debugging level to one of the specified values (from 0 to 10). 10 is the highest debug level and 0 sets the debug level to its minimal value.
|`-q, --quiet`|Disables logging to the screen and to the log file.
|====

vzpkg info 
^^^^^^^^^^
 
This command displays information about EZ templates, YUM software packages, and individual software packages.
  
.Syntax
[subs="quotes"]
----
vzpkg info [-F {_&lt;OS_template&gt;_|_&lt;CT_name&gt;_} -q|-d _&lt;app_template&gt;_ [_&lt;parameters&gt;_ ...]
vzpkg info -p|-g [-C|-r] [-F {_&lt;OS_template&gt;_|_&lt;CT_name&gt;_} -q|-d {_&lt;package_name&gt;_|_&lt;yum_package_group&gt;_} [_&lt;parameters&gt;_ [...]]
----

.Options
[options="header",cols="2a,3a"]
|====
|Name|Description

|+_&lt;CT_name&gt;_+|Container name.
|+_&lt;OS_template&gt;_+|OS EZ template.
|+_&lt;app_template&gt;_+|Application EZ template.
|+_&lt;package_name&gt;_+|Software package name.
|+_&lt;yum_package_group&gt;_+|YUM software group name.
|+-F, --for-os {_&lt;OS_template&gt;{brvbar}_&lt;CT_name&gt;_}+|Displays information on the application EZ template or the software package (if the `-p` option is specified) included in the specified OS EZ template or applied to the indicated container.
|`-p, --package`|Displays information about the specified software package. Must be used with the `-F` option.
|`-g, --groups`|Displays information about the packages included in the specified YUM software group. 
|`-C, --cache`|Displays the information on the specified package from the local `vzpkg` cache. You can omit this parameter if the elapsed time from the last `vzpkg` cache update does not exceed the value of the `METADATA_EXPIRE` parameter specified in the `/etc/vztt/vztt.conf` file.
|`-r, --remote`|If the elapsed time from the last `vzpkg` cache update does not exceed the value of the `METADATA_EXPIRE` parameter specified in the `/etc/vztt/vztt.conf` file, you should use this option to make `vzpkg info` get the information on the specified package from the remote repositories set for handling the EZ template where this package is included.
|+-d, --debug _&lt;num&gt;_+|Sets the debugging level to one of the specified values (from 0 to 10). 10 is the highest debug level and 0 sets the debug level to its minimal value.
|`-q, --quiet`|Disables logging to the screen and to the log file.
|====

While executed, `vzpkg info` parses the subdirectories and files located in the +/vz/template/_&lt;os_name&gt;_/_&lt;os_version&gt;_/_&lt;arch&gt;_/config+ directory and containing the EZ template meta data. To run the command, you should specify either the OS EZ template name or the container ID. In either case, detailed information on the corresponding OS EZ template is displayed. You can also use the `-F` option to get the necessary information on any application EZ template included into the OS EZ template or applied to the container.
  
By default, `vzpkg info` displays all meta data on the EZ template/package specified. However, you can reduce the amount of the output information by using special parameters (+_&lt;parameters&gt;_+) listed in the table below.
  
.Output Parameters
[options="header",cols="1a,3a"]
|====
|Name|Description

|`name`|The name of the EZ template/package.
|`packages`|The packages included in the EZ template. For EZ templates only.
|`repositories`|The repository where the packages comprising the EZ template are stored. For EZ templates only.
|`mirrorlist`|The URL to the file containing a list of repositories from where the packages comprising the EZ template are to be downloaded. For EZ templates only.
|`distribution`|The Linux distribution on the basis the OS EZ template has been created or under which the application EZ template is to be run. For EZ templates only.
|`summary`|Brief information on the EZ template/package.
|`description`|Detailed information on the EZ template/package. As distinct from `summary`, it can contain additional data on the EZ template/package.
|`technologies`|For EZ templates only. Displays the following information:

[options="compact"]
* The microprocessor architecture where the EZ template is to be used (`x86`, `x86_64`);
* Specifies whether the EZ template can be used only on the servers with the Native POSIX Thread Library (NPTL) support. In this case the `nptl` entry is displayed after the `vzpkg info` execution.
|`version`|The version of the software package.
|`release`|The release of the software package.
|`arch`|The system architecture where the EZ template/package is to be used. It can be one of the following:

[options="compact"]
* `x86` if the EZ template/package is to be used on 32-bit platforms.
* `x86_64` if the EZ template is to be used on 64-bit platforms (e.g., on servers with the AMD Opteron and Intel Pentium D processors installed).
|`config_path`|Displays the path to the EZ template configuration directory containing the template meta data where the meta data for the base OS EZ template are stored (the default directory path is  +/vz/template/_&lt;OS_name&gt;_/_&lt;OS_version&gt;_/_&lt;arch&gt;_/config/os/default+).
|`package_manager_type`|For EZ templates only. The packaging system used to handle the packages included in the specified EZ template. It can be one of the following:

[options="compact"]
* `rpm` for RPM-based Linux distributions (Fedora Core, Red Hat Enterprise Linux, etc.);
* `dpkg` for Debian-based Linux distributions (e.g., Debian and Ubuntu).
|`package_manager`|The package manager type for managing the packages included in the specified EZ template. It can be one of the following:

.x86 Linux distributions
[options="compact"]
* `rpm49db5x86`: Fedora 17
* `rpm49x86`: Fedora 15 and 16
* `rpm47x86`: Red Hat Enterprise Linux 6 and CentOS 6
* `rpm44x86`: Red Hat Enterprise Linux 5 and CentOS 5
* `rpm43x86`: Red Hat Enterprise Linux 3 and 4, CentOS 3 and 4
* `rpmzypp44x86`: SUSE Linux Enterprise Server 11 with Service Pack 2
* `rpm41x86`: SUSE Linux Enterprise Server 10 and SUSE Linux 10.x
* `rpm41s9x86`: SUSE Linux Enterprise Server 9
* `rpmzypp49x86`: openSUSE 12.1
* `dpkg`: Debian and Ubuntu

.x86-64 Linux distributions
[options="compact"]
* `rpm49db5x64`: Fedora 17
* `rpm49x64`: Fedora 15 and 16
* `rpm47x64`: Red Hat Enterprise Linux 6 and CentOS 6
* `rpm44x64`: Red Hat Enterprise Linux 5 and CentOS 5
* `rpm43x64`: Red Hat Enterprise Linux 3 and 4, CentOS 3 and 4
* `rpmzypp44x64`: SUSE Linux Enterprise Server 11 with Service Pack 2
* `rpm41x64`: SUSE Linux Enterprise Server 10 and SUSE Linux 10.x
* `rpm41s9x64`: SUSE Linux Enterprise Server 9
* `rpmzypp49x64`: openSUSE 12.1
* `dpkgx64`: Debian and Ubuntu
|====

vzpkg status 
^^^^^^^^^^^^
 
This command is used to check the status of the packages either installed inside a container or included in an OS EZ template.
  
.Syntax
[subs="quotes"]
----
vzpkg status [_&lt;options&gt;_] {_&lt;CT_name&gt;_|_&lt;OS_template&gt;_}
----
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|`-C, --cache`|Makes the `vzpkg status` command look for available updates in the local `vzpkg` cache only. You can omit this parameter if the elapsed time from the last `vzpkg` cache update does not exceed the value of the `METADATA_EXPIRE` parameter specified in the `/etc/vztt/vztt.conf` file.
|`-r, --remote`|If the elapsed time from the last `vzpkg` cache update does not exceed the value of the `METADATA_EXPIRE` parameter specified in the `/etc/vztt/vztt.conf` file, you should use this option to make `vzpkg status` look for the package updates in the remote repositories set for handling the corresponding EZ template.
|+-d, --debug _&lt;num&gt;_+|Sets the debugging level to one of the specified values (from 0 to 10). 10 is the highest debug level and 0 sets the debug level to its minimal value.
|`-q, --quiet`|Disables logging to the screen and to the log file.
|====

When executed, the command performs the following operations:

[options="compact"]
* Checks all the packages installed inside the specified container or included in the specified OS EZ template.
* Checks the repository used to install/update packages inside the container/OS EZ template.
* Compares the packages in the repository with those inside the container/OS EZ template.
* Lists the found packages updates for the container/OS EZ template, if any, or informs you that the container/OS EZ template is up-to-date.

[NOTE]
[subs="quotes"]
====
*Note:* The `vzpkg status` command can be executed for running containers only.
====

vzpkg install 
^^^^^^^^^^^^^
 
This command is used to install application EZ templates, YUM software groups, or individual software packages into containers.
  
.Syntax
[subs="quotes"]
----
vzpkg install [_&lt;options&gt;_] _&lt;CT_name&gt;_ _&lt;object&gt;_ [...]
----

The `vzpkg install` command will add an +_&lt;object&gt;_+ to the specified container. An object can be an application EZ template, a YUM software group, or a standard software package. You can specify several objects to install into the container by separating them by spaces.
  
When executed, `vzpkg install` automatically handles the interdependencies among the packages to be installed into a container and ensures that all dependencies are satisfied. If the package dependencies cannot be resolved, the installation process fails and the corresponding message is displayed.
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|`-p, --package`|Installs a software package instead of an EZ template.
|`-g, --groups`|Installs a YUM software group instead of an EZ template. The `-g` option works only for containers running RPM-based Linux distributions.
|`-f, --force`|Forces the EZ template/package installation.
|`-C, --cache`|Makes the `vzpkg install` command look for the packages included in the EZ template in the local `vzpkg` cache only. If there is a package not available locally, the command will fail. You can omit this parameter if the elapsed time from the last `vzpkg` cache update does not exceed the value of the `METADATA_EXPIRE` parameter specified in the `/etc/vztt/vztt.conf` file.
|`-r, --remote`|If the elapsed time from the last `vzpkg` cache update does not exceed the value of the `METADATA_EXPIRE` parameter specified in the `/etc/vztt/vztt.conf` file, you should use this option to make `vzpkg install` look for the packages in the remote repositories set for handling the corresponding EZ template.
|`-n, --check-only`|Simulates the same operations as `vzpkg install` completes without specifying this option (downloads the software packages to the server, handles the package interdependencies, etc.); however, the packages themselves are not installed in the specified the container.
|+-d, --debug _&lt;num&gt;_+|Sets the debugging level to one of the specified values (from 0 to 10). 10 is the highest debug level and 0 sets the debug level to its minimal value.
|`-q, --quiet`|Disables logging to the screen and to the log file.
|====

By default, the specified object is treated by `vzpkg install` as an application EZ template. However, you can use the `-p` or `-g` option to explicitly specify the type of the object.

[NOTE]
[subs="quotes"]
====
*Note:* A container has to be running in order to apply an application EZ template to or install a package inside this container.
====

vzpkg update 
^^^^^^^^^^^^
 
The `vzpkg update` command is used to update the following components of a container:

[options="compact"]
* OS EZ template
* application EZ templates
* YUM software groups
* individual software packages
  
.Syntax
[subs="quotes"]
----
vzpkg update [_&lt;options&gt;_] _&lt;CT_name&gt;_ [_&lt;object&gt;_ [...]]
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|`-C, --cache`|Makes the `vzpkg update` command look for the package updates in the local `vzpkg` cache only. You can omit this parameter if the elapsed time from the last `vzpkg` cache update does not exceed the value of the `METADATA_EXPIRE` parameter specified in the `/etc/vztt/vztt.conf` file.
|`-r, --remote`|If the elapsed time from the last `vzpkg` cache update does not exceed the value of the `METADATA_EXPIRE` parameter specified in the `/etc/vztt/vztt.conf` file, you should use this option to make `vzpkg update` look for the package updates in the remote repositories set for handling the corresponding EZ templates.
|`-p, --package`|Updates the packages installed in the container by using the `vzpkg install` command.
|`-g, --groups`|Updates the YUM software group in the container. The `-g` option works only for containers running RPM-based Linux distributions.
|`-f, --force`|Forces the EZ template/package update procedure.
|`-n, --check-only`|Simulates the same operations as `vzpkg update` completes without specifying this option (downloads the updated packages to the server, handles their interdependencies, etc.); however, the packages themselves are not updated.
|+-d, --debug _&lt;num&gt;_+|Sets the debugging level to one of the specified values (from 0 to 10). 10 is the highest debug level and 0 sets the debug level to its minimal value.
|`-q, --quiet`|Disables logging to the screen and to the log file.
|====

Without any options specified, `vzpkg update` updates all EZ templates (including the OS EZ template) in the specified container. However, you can make the command update a particular EZ template by specifying its name as +_&lt;object&gt;_+. You can also use the `-p` or `-g` option to update YUM software groups or individual software packages in the container.
  
vzpkg remove 
^^^^^^^^^^^^
 
This command is used to remove an application EZ template, YUM software group, or a software package from a container.
  
.Syntax
[subs="quotes"]
----
vzpkg remove [_&lt;options&gt;_] _&lt;CT_name&gt;_ _&lt;object&gt;_ [...]
----

This command will remove +_&lt;object&gt;_+ from the container with the ID of +_&lt;CT_name&gt;_+ or with the name of +_&lt;CT_name&gt;_+. The +_&lt;object&gt;_+ can be an application EZ template, a YUM software group, or a software package installed with the `vzpkg install` command. You may specify a number of objects for removing.
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|`-p, --package`|Removes the specified package(s) from the container.
|`-g, --groups`|Removes the specified YUM software group from the container. The `-g` option works only for containers running RPM-based Linux distributions.
|`-w, --with-depends`|Removes also the packages having dependencies with the object specified.
|`-f, --force`|Forces the EZ template/package deletion.
|`-n, --check-only`|Simulates the same operations as `vzpkg remove` completes without specifying this option (handles interdependencies of the packages to be removed from the server, etc.); however, the packages themselves are not deleted from the specified container(s).
|+-d, --debug _&lt;num&gt;_+|Sets the debugging level to one of the specified values (from 0 to 10). 10 is the highest debug level and 0 sets the debug level to its minimal value.
|`-q, --quiet`|Disables logging to the screen and to the log file.
|====

By default, the specified object is treated by `vzpkg remove` as an application EZ template. However, you can use the `-p` or `-g` option to explicitly specify the type of the object.

[NOTE]
[subs="quotes"]
====
*Note:* A container has to be running in order to remove an application EZ template/package from it.
====

vzpkg create cache 
^^^^^^^^^^^^^^^^^^
 
This command is used to create tarballs (caches) for OS EZ templates. You should execute this command before you start using a newly installed OS EZ template for creating containers.
  
.Syntax
[subs="quotes"]
----
vzpkg create cache [_&lt;options&gt;_] [_&lt;OS_template&gt;_ [...]]
----
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|`-C, --cache`|Makes the `vzpkg create cache` command check for the packages included in the EZ OS template in the local `vzpkg` cache only and use them for the cache creation. You can omit this parameter if the elapsed time from the last `vzpkg` cache update does not exceed the value of the `METADATA_EXPIRE` parameter specified in the `/etc/vztt/vztt.conf` file. In this case `vzpkg create cache` will also check the local `vzpkg` cache only.
|`-r, --remote`|If the elapsed time from the last `vzpkg` cache update does not exceed the value of the `METADATA_EXPIRE` parameter specified in the `/etc/vztt/vztt.conf` file, you should use this option to make `vzpkg create cache` check for the packages included in the EZ OS template in the remote repositories set for its handling.
|+-d, --debug _&lt;num&gt;_+|Sets the debugging level to one of the specified values (from 0 to 10). 10 is the highest debug level and 0 sets the debug level to its minimal value.
|`-q, --quiet`|Disables logging to the screen and to the log file.
|`-f, --force`|Forces the process of the cache creation.
|====

`vzpkg create cache` checks the template area on the server (by default, the `/vz/template` directory is used) and if it finds an OS EZ template for which no tar archive exists, it creates a gzipped tarball for the corresponding OS EZ template and places it to the `/vz/template/cache` directory. When a container is being created, `prlctl` just unpacks the tar archive.
  
By default, `vzpkg create cache` checks the tar archive existence for all OS EZ templates installed on the server and creates some, if necessary. However, you can explicitly indicate what OS EZ template should be cached by specifying its name as +_&lt;OS_template&gt;_+. If the cache of the OS template specified already exists on the server, the command will fail and you will be presented with the corresponding error message.

vzpkg update cache
^^^^^^^^^^^^^^^^^^
 
This command is used to update tarballs (caches) of the OS EZ templates installed on the server.
  
.Syntax
[subs="quotes"]
----
vzpkg update cache [_&lt;options&gt;_] [_&lt;OS_template&gt;_ [...]]
----
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|`-C, --cache`|Makes the `vzpkg update cache` command check for the packages updates in the local `vzpkg` cache only and use them for the cache creation. You can omit this parameter if the elapsed time from the last `vzpkg` cache update does not exceed the value of the `METADATA_EXPIRE` parameter specified in the `/etc/vztt/vztt.conf` file. In this case `vzpkg update cache` will also check the local `vzpkg` cache only.
|`-r, --remote`|If the elapsed time from the last `vzpkg` cache update does not exceed the value of the `METADATA_EXPIRE` parameter specified in the `/etc/vztt/vztt.conf` file, you should use this option to make `vzpkg update cache` check for the packages updates in the remote repositories set for handling the given EZ OS template.
|====

The `vzpkg update cache` command checks the cache directory in the template area (by default, the template area is located in the `/vz/template` directory on the server) and updates all existing tarballs in this directory. However, you can explicitly indicate what OS EZ template tarball is to be updated by specifying its name as +_&lt;OS_template&gt;_+. Upon the `vzpkg update cache` execution, the old tarball is renamed by receiving the `-old` suffix (e.g., `centos-6-x86_64.tar.gz-old`). 
  
If the `vzpkg update cache` command does not find a tarball for one or more OS EZ templates installed on the server, it creates the corresponding tar archive(s) and puts them to the `/vz/template/cache` directory.

vzpkg remove cache
^^^^^^^^^^^^^^^^^^
 
This command removes the cache for the OS EZ templates specified.
  
.Syntax
[subs="quotes"]
----
vzpkg remove cache [_&lt;options&gt;_] [_&lt;OS_template&gt;_ [...]]
----
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+-d, --debug _&lt;num&gt;_+|Sets the debugging level to one of the specified values (from 0 to 10). 10 is the highest debug level and 0 sets the debug level to its minimal value.
|`-q, --quiet`|Disables logging to the screen and to the log file.
|====

By default, `vzpkg remove cache` deletes all caches located in the `/vz/template/cache` directory on the server. However, you can explicitly indicate what OS EZ template tar archive is to be removed by specifying its name as +_&lt;OS_template&gt;_+.

[NOTE]
[subs="quotes"]
====
*Note:* The OS EZ template caches having the `-old` suffix are not removed from the `/vz/template/cache` directory. You should use the `-rm` command to delete these caches from the server.
====

vzpkg create appcache 
^^^^^^^^^^^^^^^^^^^^^
 
This command combines an OS EZ template cache and one or more application EZ templates into a new OS and applications cache. If the OS EZ template cache has not been created yet, this will be done before application templates are added.
  
.Syntax
[subs="quotes"]
----
vzpkg create appcache --config _&lt;config&gt;_ [_&lt;options&gt;_]
----
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+--config _&lt;config&gt;_+|Specifies the path to the configuration file with the information on what OS and application templates to use. 
|+--ostemplate _&lt;OS_template&gt;_+|Specifies the OS EZ template to use in cache creation. This option redefines the OS EZ template specified in the configuration file.
|+--apptemplate _&lt;app_template&gt;_+|Specifies one or more application EZ templates (comma-separated) to be added to the resulting cache.This option redefines the application EZ templates specified in the configuration file.
|+-d, --debug _&lt;num&gt;_+|Sets the debugging level (0 to 10), 10 being the highest.
|`-q, --quiet`|Disables logging to screen and log file.
|`-f, --force`|Forces cache creation.
|====

vzpkg update appcache 
^^^^^^^^^^^^^^^^^^^^^
 
This command updates an existing OS EZ template cache with preinstalled application templates if the `--update-cache` option is provided. Otherwise, the cache is created anew.
  
.Syntax
[subs="quotes"]
----
vzpkg update appcache --config _&lt;config&gt;_ [_&lt;options&gt;_]
----
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+--config _&lt;config&gt;_+|Specifies the configuration file with the information on what OS and application templates to use. 
|+--ostemplate _&lt;OS_template&gt;_+|Specifies the OS EZ template, cache of which needs to be recreated or updated. This option redefines the OS EZ template specified in the configuration file.
|+--apptemplate _&lt;app_template&gt;_+|Specifies all application EZ templates (comma-separated) preinstalled in the cache which needs to be updated. This option redefines the application EZ templates specified in the configuration file.
|`--update-cache`|Instructs the command to check for updates for the existing OS and application cache. Otherwise, the cache is created anew.
|+-d, --debug _&lt;num&gt;_+|Sets the debugging level (0 to 10), 10 being the highest.
|`-q, --quiet`|Disables logging to screen and log file.
|`-f, --force`|Forces cache creation.
|====

vzpkg remove appcache 
^^^^^^^^^^^^^^^^^^^^^
 
This command removes an existing OS EZ template cache with preinstalled application templates.
  
.Syntax
[subs="quotes"]
----
vzpkg remove appcache --config _&lt;config&gt;_ [_&lt;options&gt;_]
----
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+--config _&lt;config&gt;_+|Specifies the configuration file with the information on what OS and application templates to use. 
|+--ostemplate _&lt;OS_template&gt;_+|Specifies the OS EZ template, cache of which needs to be removed. This option redefines the OS EZ template specified in the configuration file.
|+--apptemplate _&lt;app_template&gt;_+|Specifies all application EZ templates (comma-separated) preinstalled in the cache which needs to be removed. This option redefines the application EZ templates specified in the configuration file.
|+-d, --debug _&lt;num&gt;_+|Sets the debugging level (0 to 10), 10 being the highest.
|`-q, --quiet`|Disables logging to screen and log file.
|`-f, --force`|Forces cache creation.
|====

vzpkg localinstall 
^^^^^^^^^^^^^^^^^^
 
The `vzpkg localinstall` command is used to install a software package inside a container from the corresponding file on the server.
  
.Syntax
[subs="quotes"]
----
vzpkg localinstall [_&lt;options&gt;_] _&lt;CT_name&gt;_ _&lt;rpm_file_path&gt;_ [...]
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|`-C, --cache`|When handling the package interdependencies, makes the `vzpkg localinstall` command look for the needed packages in the local `vzpkg` cache only. If there is a package not available locally, the command will fail. You can omit this parameter if the elapsed time from the last `vzpkg` cache update does not exceed the value of the `METADATA_EXPIRE` parameter specified in the `/etc/vztt/vztt.conf` file.
|`-r, --remote`|If the elapsed time from the last `vzpkg` local cache update does not exceed the value of the `METADATA_EXPIRE` parameter specified in the `/etc/vztt/vztt.conf` file, you should use this option to make `vzpkg localinstall` look for the packages in the remote repository.
|`-n, --check-only`|Simulates the same operations as `vzpkg localinstall` completes without specifying this option (e.g., handles the package interdependencies); however, the package itself is not installed in the specified container.
|+-d, --debug _&lt;num&gt;_+|Sets the debugging level to one of the specified values (from 0 to 10). 10 is the highest debug level and 0 sets the debug level to its minimal value.
|`-q, --quiet`|Disables logging to the screen and to the log file.
|====

When executed, the command installs the package, the full path to which is specified as _&lt;rpm_file_path&gt;_, inside the container with the ID of +_&lt;CT_name&gt;_+ or with the name of +_&lt;CT_name&gt;_+. You may specify multiple packages to be installed inside the container.
  
During its execution, `vzpkg localinstall` automatically handles the interdependencies among the packages to be installed inside a container and ensures that all dependencies are satisfied. If the package dependencies cannot be resolved, the installation process will fail and the corresponding message will be displayed.

vzpkg localupdate 
^^^^^^^^^^^^^^^^^
 
The `vzpkg localupdate` command is used to update the software packages installed inside your container(s) by means of the `vzpkg install` or `vzpkg localinstall` commands.
  
.Syntax
[subs="quotes"]
----
vzpkg localupdate [_&lt;options&gt;_] _&lt;CT_name&gt;_ _&lt;rpm_file_path&gt;_ [...]
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|`-C, --cache`|When handling the package interdependencies, makes the `vzpkg localupdate` command look for the needed packages in the local `vzpkg` cache only. If there is a package not available locally, the command will fail. You can omit this parameter if the elapsed time from the last `vzpkg` cache update does not exceed the value of the `METADATA_EXPIRE` parameter specified in the `/etc/vztt/vztt.conf` file.
|`-r, --remote`|If the elapsed time from the last `vzpkg` local cache update does not exceed the value of the `METADATA_EXPIRE` parameter specified in the `/etc/vztt/vztt.conf` file, you should use this option to make `vzpkg localupdate` look for the packages in the remote repository.
|`-n, --check-only`|Simulates the same operations as `vzpkg localupdate` completes without specifying this option (e.g., handles the package interdependencies); however, the package itself is not installed in the specified container.
|+-d, --debug _&lt;num&gt;_+|Sets the debugging level to one of the specified values (from 0 to 10). 10 is the highest debug level and 0 sets the debug level to its minimal value.
|`-q, --quiet`|Disables logging to the screen and to the log file.
|====

When executed, `vzpkg localupdate` compares the file on the server the full path to which is specified as +_&lt;rpm_file_path&gt;_+ with the corresponding package inside the container with the ID of +_&lt;CT_ID&gt;_+ or the name of +_&lt;CT_name&gt;_+ and updates it, if necessary. You may specify a number of packages at once to be updated inside your container.

vzpkg upgrade 
^^^^^^^^^^^^^
 
The `vzpkg upgrade` command is used to upgrade an OS EZ template the container is based on to a newer version.
  
.Syntax
[subs="quotes"]
----
vzpkg upgrade [_&lt;options&gt;_] _&lt;CT_name&gt;_
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|`-C, --cache`|Makes the `vzpkg upgrade` command check for the packages included in the OS EZ template in the local `vzpkg` cache only. If any package is not available locally, the command will fail. You can omit this parameter if the elapsed time from the last `vzpkg` cache update does not exceed the value of the `METADATA_EXPIRE` parameter specified in the `/etc/vztt/vztt.conf` file; in this case `vzpkg upgrade` will also check the local `vzpkg` cache only.
|`-r, --remote`|If the elapsed time from the last local `vzpkg` cache update does not exceed the value of the `METADATA_EXPIRE` parameter specified in the `/etc/vztt/vztt.conf` file, you should use this option to make `vzpkg upgrade` check for the packages in the remote repositories set for handling the given EZ OS template.
|`-n, --check-only`|Simulates the same operations as `vzpkg upgrade` completes without specifying this option (downloads the packages to the server, handles their interdependencies, etc.); however, the packages themselves inside the container are not upgraded.
|`-f, --force`|Forces the upgrade of the OS EZ template.
|+-d, --debug _&lt;num&gt;_+|Sets the debugging level to one of the specified values (from 0 to 10). 10 is the highest debug level and 0 sets the debug level to its minimal value.
|`-q, --quiet`|Disables logging to the screen and to the log file.
|====

vzpkg fetch 
^^^^^^^^^^^
 
This command is used to download packages included in the corresponding OS EZ template or their updates from the remote repository to the `vzpkg` local cache on the server and to prepare them for installation.
  
.Syntax
[subs="quotes"]
----
vzpkg fetch [_&lt;options&gt;_] _&lt;OS_template&gt;_
----
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|`-O, --os`|Download packages/updates for the specified EZ OS template.
|`-A, --app`|Download packages/updates for EZ application templates used with the EZ specified OS template.
|`-C, --cache`|Makes the `vzpkg fetch` command look for the metadata in the `vzpkg` local cache only. You can omit this parameter if the elapsed time from the last `vzpkg` cache update does not exceed the value of the `METADATA_EXPIRE` parameter specified in the `/etc/vztt/vztt.conf` file.
|`-r, --remote`|If the elapsed time from the last `vzpkg` cache update does not exceed the value of the `METADATA_EXPIRE` parameter specified in the `/etc/vztt/vztt.conf` file, you should use this option to make `vzpkg fetch` look for the OS EZ template metadata in the remote repositories set for handling the corresponding EZ template.
|`-f, --force`|Forces the process of downloading packages and/or their updates to the server.
|+-d, --debug _&lt;num&gt;_+|Sets the debugging level to one of the specified values (from 0 to 10). 10 is the highest debug level and 0 sets the debug level to its minimal value.
|`-q, --quiet`|Disables logging to the screen and to the log file.
|====

You can make `vzpkg fetch` run as a `cron` job (e.g., nightly) checking for available packages or packages updates for your EZ templates and keeping them in the local cache. Having all the necessary packages in the `vzpkg` local cache can greatly speed up the execution of the `vzpkg install`, `vzpkg update`, or `vzpkg create cache` commands since the packages are available locally and there is no need to check for them in the corresponding remote repositories.

vzpkg clean 
^^^^^^^^^^^
 
This command is used to remove the software packages, their headers, and metadata downloaded to the server from the repository during the `vzpkg` execution (e.g., while caching an OS EZ template or adding an application EZ template to a container for the first time).
  
.Syntax
[subs="quotes"]
----
vzpkg clean [_&lt;options&gt;_] [_&lt;OS_template&gt;_ [...]]
----
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|`-k, --clean-packages`|Removes the packages, headers, and metadata of the specified EZ OS template from the local `vzpkg` cache. This is also the default behavior of `vzpkg clean`.
|`-t, --clean-template`|Checks the template area for the specified EZ OS template (the template area has the default path of `/vz/template`) and removes all packages that are currently not used by any container on the server and not included in the EZ OS template cache.
|`-a, --clean-all`|Removes both:

[options="compact"]
* the packages, headers, and metadata of the specified EZ OS template from the `vzpkg` local cache, and
* the packages that are currently not used by any container on the server and not included in the EZ OS template cache.
|`-f, --force`|Forces the `vzpkg clean` execution.
|`-n, --check-only`|Simulates the same operations as `vzpkg clean` completes without specifying this option; however, the packages and headers are not removed from the server.
|+-d, --debug _&lt;num&gt;_+|Sets the debugging level to one of the specified values (from 0 to 10). 10 is the highest debug level and 0 sets the debug level to its minimal value.
|`-q, --quiet`|Disables logging to the screen and to the log file.
|====

vzpkg update metadata 
^^^^^^^^^^^^^^^^^^^^^
 
This command is used to update the OS EZ template local metadata on the server.
  
.Syntax
[subs="quotes"]
----
vzpkg update metadata [_&lt;options&gt;_] [_&lt;OS_template&gt;_ [...]]
----
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|`-C, --cache`|Makes the `vzpkg update metadata` command look for available metadata updates in the local `vzpkg` cache only. You can omit this parameter if the elapsed time from the last `vzpkg` cache update does not exceed the value of the `METADATA_EXPIRE` parameter specified in the `/etc/vztt/vztt.conf` file.
|`-r, --remote`|If the elapsed time from the last `vzpkg` cache update does not exceed the value of the `METADATA_EXPIRE` parameter specified in the `/etc/vztt/vztt.conf` file, you should use this option to make `vzpkg update metadata` look for the updated metadata in the remote repositories set for handling the corresponding OS EZ template.
|+-d, --debug _&lt;num&gt;_+|Sets the debugging level to one of the specified values (from 0 to 10). 10 is the highest debug level and 0 sets the debug level to its minimal value.
|`-q, --quiet`|Disables logging to the screen and to the log file.
|====

When executed without any options, the command updates the metadata of all OS EZ templates installed on the server. If you specify one or more OS EZ templates, the command will update the metadata of the indicated OS templates only. You can run this command a cron job at regular intervals to be sure that your OS EZ templates metadata are always up-to-date.

vzmktmpl 
^^^^^^^^
 
This utility is used to create new EZ templates.
  
.Syntax
[subs="quotes"]
----
vzmktmpl [_&lt;options&gt;_] _&lt;metafile&gt;_
----
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+--pre-cache _&lt;file&gt;_+|The path to the script which will be executed by the `vzpkg cache` command before installing the packages included in the EZ template on the server. This script is executed in the server context and relevant for OS EZ templates only.
|+--post-cache _&lt;file&gt;_+|The path to the script which will be executed by the `vzpkg cache` command after installing the packages included in the EZ template on the server. This script is executed in the server context and relevant for OS EZ templates only.
|+--pre-install _&lt;file&gt;_+|The path to the script which will be executed by the `vzpkg install` command before adding the application EZ template to the container. This script is executed in the container context and relevant for application EZ templates only.
|+--post-install _&lt;file&gt;_+|The path to the script which will be executed by the `vzpkg install` command after adding the application EZ template to the container. This script is executed in the container context and relevant for application EZ templates only.
|+--pre-upgrade _&lt;file&gt;_+|The path to the script which will be executed by the `vzpkg upgrade` command before upgrading the OS EZ template inside the container. This script is executed in the container context.
|+--post-upgrade _&lt;file&gt;_+|The path to the script which will be execute by the `vzpkg upgrade` command after upgrading the OS EZ template inside the container. This script is executed in the container context.
|+--pre-update _&lt;file&gt;_+|The path to the script which will be executed by the `vzpkg update` command before updating the packages included in the application EZ template inside the container. This script is executed in the container context.
|+--post-update _&lt;file&gt;_+|The path to the script which will be executed by the `vzpkg update` command after updating the packages included in the application EZ template inside the container. This script is executed in the container context.
|+--pre-remove _&lt;file&gt;_+|The path to the script which will be executed by the `vzpkg remove` command before removing the application EZ template from the container. This script is executed in the container context and relevant for application EZ templates only.
|+--post-remove _&lt;file&gt;_+|The path to the script which will be executed by the `vzpkg remove` command after removing the application EZ template from the container. This script is executed in the container context and relevant for application EZ templates only.
|+--environment _&lt;file&gt;_+|The path to the file storing a list of environment variables. The variables should be set in the form of +_&lt;key&gt;_=_&lt;value&gt;_+. The variables specified in this file are used when running the `vzpkg create cache` and `vzpkg update cache` commands and exported to the container environment during the EZ template scripts execution.
|+-d, --doc _&lt;file&gt;_+|The path to the file containing the information on the EZ template. You can specify several files and separate them by commas.
|`-s, --spec-only`|Creates the package specification file only.
|`-r, --srpm`|Creates the package source file only.
|`-h, --help`|Displays the utility usage and exits.
|====

The only required parameter for `vzmktmpl` is the path to the metafile containing the template configuration. In most cases, however, you also need to include a number of scripts in the template. These scripts will be executed at different stages of the template life cycle (e.g., when you add the template to a container) and ensure the correct template operation. To learn what scripts are required for your template:
  
. Install an official template provided by Virtuozzo for the same Linux distribution for which you are creating the template. For example, if you are making a template for CentOS 5, install the CenOS 5 OS template (use the `vzupdate -z` command, if necessary).
. Go to the configuration directory (+/vz/template/_&lt;template_name&gt;_/_&lt;template_arch&gt;_/config/os/default+) of the installed template.
. Look for the files starting with `pre-` and `post-` (e.g, `pre-cache` or `post-install`).

[NOTE]
[subs="quotes"]
====
*Note:* The `vzmktmpl` utility is a part of the `vztt-build` package, which is not installed by default. If installed, the package can be found in the `/virtuozzo/RPMS/optional` directory of your Virtuozzo distribution. So, before you can start using the `vzmktmpl` utility, you first need to install the package on your server with the `rpm -i` command.
====

vzpkg.metafile
++++++++++++++
  
This file is used by the `vzmktmpl` utility as the basis for the EZ template creation. The parameters in this file are presented on separate lines in the following format:
  
[subs="quotes"]
----
_&lt;parameter_name&gt;_
_&lt;parameter_value&gt;_
----
  
.Parameters
[options="header",cols="1a,3a"]
|====
|Name|Description

|`%osname`|Mandatory. The name of the Linux distribution for which you are creating the OS EZ template or under which the application EZ template being created is to be run.
|`%osver`|Mandatory. The version of the Linux distribution specified as the value of the `%osname` parameter.
|`%osarch`|Mandatory. The microprocessor architecture where the EZ template is to be run. You can set the value of this parameter to one of the following:

[options="compact"]
*  `x86`: this value should be specified if your EZ template is to be used on 32-bit platforms.
* `x86-64`: this value should be specified if your EZ template is to be used on x86-64-bit platforms (e.g., on servers with the AMD Opteron and Intel Pentium D processors installed).
|`%appname`|Mandatory, for application EZ templates only. The name of the application EZ template.
|`%setname`|Optional. The name of the non-base OS EZ template, if any. This parameter should be specified only while creating non-base OS EZ templates.
|`%upgradable_version`|Optional. A list of Linux distribution versions which can be upgraded to the version of the Linux distribution for which you are creating the EZ template. For OS EZ templates only. Should be omitted for application templates.
|`%packages`|Mandatory. A list of software packages to be included in the EZ template. The names of the packages listed as the value of this parameter should correspond to the names of real packages that are stored in the repository used for managing your EZ templates and can be specified in one of the following ways:

.For RPM-based Linux distributions:
[options="compact"]
* as a package name only (e.g., `wget`)
* as a package name with the indication of the system architecture on which the package is to be run  (e.g., `wget.i386`, `wget.noarch`)
* as a package name with its versions (e.g., `wget-1.9.1`)
* as a package name with its versions and release number (e.g., `wget-1.9.1-12`)
* as a package name with its version, release number, and system architecture (e.g., `wget-1.9.1-12.i386`)
* as a package name with its version, release number, system architecture, and epoch number (e.g., `10:wget-1.9.1-12.i386`)

.For Debian-based Linux distributions:
[options="compact"]
* as a package name only (e.g., `wget`)
* as a package name with its version (e.g., `wget-1.9.1-12`)
|`%packages_0`|Mandatory, for Debian-based OS EZ templates only. A list of packages to be used for creating a minimal Debian/Ubuntu `chroot` environment. These packages should correspond to those installed on a standalone server on the first stage of the Ubuntu distribution installation. The packages will be installed on the server one by one in the specified order during the OS EZ template caching. If you wish several packages to be simultaneously installed on the server, you should specify the package names on a single line and separate them by spaces.
|`%packages_1`|Mandatory, for Debian-based OS EZ templates only. A list of 'base' packages for the Debian/Ubuntu distribution. These packages are needed to install the packages listed as the value of the `%packages` parameter.
|`%package_manager`|Mandatory. The short name of the package manager to be used for handling the EZ template. Depending on the Linux distribution for which you are creating the template or under which the template will be used, you should set the following values for the `PKGMAN` parameter:

.x86 Linux distributions
[options="compact"]
* `rpm49db5x86`: Fedora 17
* `rpm49x86`: Fedora 15 and 16
* `rpm47x86`: Red Hat Enterprise Linux 6 and CentOS 6
* `rpm44x86`: Red Hat Enterprise Linux 5 and CentOS 5
* `rpm43x86`: Red Hat Enterprise Linux 3 and 4, CentOS 3 and 4
* `rpmzypp44x86`: SUSE Linux Enterprise Server 11 with Service Pack 2
* `rpm41x86`: SUSE Linux Enterprise Server 10 and SUSE Linux 10.x
* `rpm41s9x86`: SUSE Linux Enterprise Server 9
* `rpmzypp49x86`: openSUSE 12.1
* `dpkg`: Debian and Ubuntu

.x86-64 Linux distributions
[options="compact"]
* `rpm49db5x64`: Fedora 17
* `rpm49x64`: Fedora 15 and 16
* `rpm47x64`: Red Hat Enterprise Linux 6 and CentOS 6
* `rpm44x64`: Red Hat Enterprise Linux 5 and CentOS 5
* `rpm43x64`: Red Hat Enterprise Linux 3 and 4, CentOS 3 and 4
* `rpmzypp44x64`: SUSE Linux Enterprise Server 11 with Service Pack 2
* `rpm41x64`: SUSE Linux Enterprise Server 10 and SUSE Linux 10.x
* `rpm41s9x64`: SUSE Linux Enterprise Server 9
* `rpmzypp49x64`: openSUSE 12.1
* `dpkgx64`: Debian and Ubuntu

This parameter must be specified for all base OS EZ templates and should be omitted for application EZ templates and non-base OS EZ templates.
|`%repositories`|Mandatory, for RPM-based Linux distributions only. A list of repositories where the packages comprising the EZ template are stored.
|`%mirrorlist`|Mandatory. One or several URLs to the file containing a list of repositories from where the packages comprising the EZ template are to be downloaded. This parameter can be omitted if you are creating a metafile for an application EZ template or a non-base OS EZ template.
|`%distribution`|Optional. The type of the Linux distribution. Examples of Linux distribution types are `centos`, `debian`, `fedora-core`, `gentoo`, `mandrake`, `redhat`, `rhel-3, rhel-4, rhel-5`, `fedora-core-4`, `fedora-core-5`, `slackware`,  `slackware-10.0`, `suse`, `suse-9.3`, etc. Should be omitted for application templates.
|`%description`|Optional. Detailed information on the EZ template package file.
|`%version`|Optional. The version of the EZ template package file.
|`%release`|Optional. The release of the EZ template package file.
|`%license`|Optional. The information about the owner of the EZ template package file.
|`%changelog`|Optional. The information about the changes made to the EZ template package file.
|====

vzcreaterepo 
^^^^^^^^^^^^
 
The `vzcreaterepo` utility is used to set up repositories for RHEL-like distributions, including Red Hat Enterprise Linux 5.
  
.Syntax
[subs="quotes"]
----
vzcreaterepo [_&lt;options&gt;_] [_&lt;mount_points&gt;_]
----
  
.Options
[options="header",cols="3a,4a"]
|====
|Name|Description

|+_&lt;mount_points&gt;_+|Path to the directory with Linux distribution files. If omitted, `vzcreaterepo` searches for files in the `/media/cdrom` directory.
|+-d, --dir _&lt;repo_path&gt;_+|Path to the directory for setting up the repository. If omitted, the repository is created in the `/vz/template/repos` directory.
|+-t, --template _&lt;template&gt;_+|Name of the template for which to create the repository (e.g., `redhat-el5-x86_64`).
|`-m, --mirror`|Creates a container and configures it to act as an HTTP mirror for servers in your network. Requires the `-v`, `-n`, `--nameserver`, and `--ip` parameters to be specified.
|`-q, --quiet`|Disables logging to the screen.
|`-u, --update`|Creates a repository with updates. At the moment, this parameter is valid for Red Hat Enterprise Linux 5 only.
|+-i, --iso _&lt;path1&gt;_[,_&lt;path2&gt;_,...]+|Path to the an ISO image containing Linux distribution files. You can specify several images and separate them by commas.
|`-a, --cache`|Caches the template after setting up the repository.
|+-p, --proxy http://__&lt;IP_or_hostname&gt;__:__&lt;port&gt;__+|Hostname or the IP address and the port number of the HTTP proxy server, if you use any to connect to the Internet.
|+--proxy_user _&lt;proxy_user&gt;_+|User name used by the HTTP proxy server for your authentication.
|+--proxy_pass _&lt;proxy_passwd&gt;_+|Password of the user specified in the `--proxy_user` parameter and used for your authentication by the HTTP proxy server.
|+-e, --email _&lt;email&gt;_+|Email address for registering in the Red Hat Network. This is the email address you specified when creating an account in the Red Hat Network.
|+--systemname _&lt;system_name&gt;_+|Name of your system to use for retrieving packages in the Red Hat Network. If omitted, the name `updates` is used.
|+-r, --repotemplate _&lt;repo_template&gt;_+|OS template to use for creating the container that will act as an HTTP mirror. If omitted, the `centos-6-x86_64` template is used.
|+-v, --ctid _&lt;CT_name&gt;_+|ID to assign to the container.
|+-n, --hostname _&lt;hostname&gt;_+|Hostname to assign to the container.
|+--nameserver _&lt;nameserver&gt;_+|Nameserver to set for the container.
|+--ip _&lt;IP_address&gt;_+|IP address to assign to the container.
|====

[NOTE]
[subs="quotes"]
====
*Note:* The current version of `vzcreaterepo` does not support creating repositories for Red Hat Enterprise Linux 6 and all versions of openSUSE and SUSE Linux Enterprise Server.
====

vzmtemplate 
^^^^^^^^^^^
 
The `vzmtemplate` utility is used to migrate the installed OS and application standard templates and OS EZ templates from the Source Server to the Destination Server.
  
.Syntax
[subs="quotes"]
----
vzmtemplate [-bhz] [--ssh=_&lt;ssh_options&gt;_]
            [_&lt;user&gt;_@]_&lt;destination_server_IP_address&gt;_ _&lt;template_name&gt;_ [...]
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|`-z, --eztempl`|Migrates the specified OS EZ template(s) installed on the Source Server. Without this option specified, `vzmtemplate` moves standard OS and application templates.
|+--ssh=_&lt;ssh_options&gt;_+|Additional `ssh` options to be used while connecting to the Destination Server.
|`-b, --batch`|This option should be passed to `vzmtemplate` in scripts if you are going to use these scripts for running the `vzmtemplate` utility and do not wish them to analyze the `vzmtemplate` command output.
|`-h, --help`|Displays the utility usage and exits.
|====

To migrate a template, you should execute the `vzmtemplate` command on the Source Server and pass the corresponding options to it. During its execution, the utility will try to connect to the Destination Server with the IP address of +_&lt;destination_server_IP_address&gt;_+ and move the specified template(s) to this server. By default, `vzmtemplate` logs in to the Destination Server as `root` and asks you for the password of this user. However, you can make the utility use other credentials to log in to the Destination Server by appending the corresponding user name with the `@` symbol to the Server IP address (e.g., `user1@192.168.0.123`). Keep in mind that the specified user should have the `root` privileges; otherwise, the command will fail.

Supplementary Tools 
~~~~~~~~~~~~~~~~~~~

pcompact
^^^^^^^^

Utility to compact containers by removing unused blocks from their virtual disks. By compacting virtual disks, you can increase free disk space on the physical server.
  
.Syntax
[subs="quotes"]
----
pcompact [-v] [-n] [-s] [-t _&lt;timeout&gt;_[s|m|h]
----
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|`-v`|Increase the command output verbosity. Multiple `-v` options can be specified to produce a more verbose output.
|`-n`|Display the actions the command will execute but do not actually compact the disks.
|`-s`|Stop the command execution after compacting the first virtual disk.
|+-t _&lt;timeout&gt;_[s{brvbar}m{brvbar}h]+|Terminate the command after the specified timeout, in seconds (default), minutes or hours.
|====

prl_disk_tool
^^^^^^^^^^^^^
 
The `prl_disk_tool` utility is used to manage virtual hard disk drives.

prl_disk_tool compact
+++++++++++++++++++++
  
Removes all empty blocks from the expanding virtual disk to reduce its size on the physical hard disk. The virtual disk must be formatted to NTFS, ext2/ext3/ext4, btrfs, or xfs.
  
.Syntax
[subs="quotes"]
----
prl_disk_tool compact --hdd _&lt;disk_path&gt;_ [--force]
prl_disk_tool compact -i, --info --hdd _&lt;disk_path&gt;_
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+--hdd _&lt;disk_path&gt;_+|Full path to the virtual disk.
|`--force`|Forces the compacting operation for suspended virtual disks.
|`-i, --info`|Do not compact the virtual disk; just display the information about the size the disk  will have after compacting.
|====

prl_disk_tool merge
+++++++++++++++++++
  
Merges all snapshots of the virtual hard disk.
  
.Syntax
[subs="quotes"]
----
prl_disk_tool merge --hdd _&lt;disk_path&gt;_
----
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+--hdd _&lt;disk_path&gt;_+|Full path to the virtual disk.
|====

prl_disk_tool resize
++++++++++++++++++++
  
Changes the capacity of the specified virtual disk. During resizing, all data present on the disk volumes are left intact. You can also resize the last partition using the `--resize_partition` option. The supported file systems are NTFS, ext2/ext3/ext4, btrfs, or xfs.
  
.Syntax
[subs="quotes"]
----
prl_disk_tool resize --size _&lt;size&gt;_[K|M|G|T] [--resize_partition] --hdd _&lt;disk_path&gt;_
                     [--force]
prl_disk_tool resize -i, --info --hdd _&lt;disk_path&gt;_
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|`--size`|New size of the virtual disk. It can be set either in kilobytes (`K`), megabytes (`M`, default), gigabytes (`G`), or terabytes (`T`).
|`--resize_partition`|Resizes the last partition of the specified virtual disk.

[NOTE]
[subs="quotes"]
====
*Note:* You cannot reduce XFS filesystems (the default choice for CentOS 7 and Red Hat Enterprise Linux 7).
====
|+--hdd _&lt;disk_path&gt;_+|Full path to the virtual disk.
|`--force`|Forces the resizing operation for suspended virtual disks.
|`-i, --info`|Do not resize the virtual disk; just show the size the disk will have after resizing.
|====

vzpid
^^^^^
 
This utility prints the ID of the container where the process is running.
  
.Syntax
[subs="quotes"]
----
vzpid _&lt;pid&gt;_ [...]
----
  
Multiple process IDs can be specified as arguments.

vzps, vztop
^^^^^^^^^^^
 
These two utilities can be run on the server just as the standard Linux `ps` and `top` utilities. For information on the `ps` and `top` utilities, consult their man pages. The `vzps` and `vztop` utilities provide certain additional functionality related to monitoring separate containers running on the server.
  
The `vzps` utility has the following functionality added: the +-E _&lt;CT_name&gt;_+ command-line switch can be used to show only the processes running inside the container with the specified ID.
  
The `vztop` utility has the following functionality added:

[options="compact"]
* The +-E _&lt;CT_name&gt;_+ command-line switch can be used to show only the processes running inside the container with the ID specified. If `-1` is specified as +_&lt;CT_name&gt;_+, the processes of all running containers are displayed.
* The `e` interactive command (the key pressed while `top` is running) can be used to show/hide the `CTID` column, which displays the container where a particular process is running  (`0` stands for the server itself).
* The `E` interactive command can be used to select another container the processes of which are to be shown. If `-1` is specified, the processes of all running containers are displayed.

vzsplit
^^^^^^^
 
This utility is used to generate a sample container configuration file with a set of system resource control parameters.
  
.Syntax
[subs="quotes"]
----
vzsplit [-n _&lt;num&gt;_] [-f _&lt;sample_name&gt;_] [-s _&lt;swap_size&gt;_]
----
  
This utility is used for dividing the server into equal parts. It generates a full set of containers system resource control parameters based on the total physical memory of the server it runs on and the number of containers the server shall be able to run even if the given number of containers consume all allowed resources.
  
Without any option the utility prompts for the desired number of containers and outputs the resulting resource control parameters to the screen.
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+-n _&lt;num&gt;_+|Desired number of containers to be simultaneously run on the server.
|+-f _&lt;sample_name&gt;_+|Name of the sample configuration to create.
|+-s _&lt;swap_size&gt;_+|Size of the swap file on the server. It is recommended to specify the swap size to be taken into account when the utility generates sample configurations.
|====

The resulting sample configuration will be created in the `/etc/vz/conf` directory. The file name will be +ve-_&lt;sample_name&gt;_.conf-sample+. Now you can pass +_&lt;sample_name&gt;_+ as an argument to the `--config` option of the `prlctl create` command. If a sample with this name already exists, the utility will output an error message and will not overwrite the existing configuration.

Managing Virtual Machines
-------------------------

prlctl
~~~~~~

Virtuozzo virtual machines can be managed using the `prlctl` command-line utility. The utility is installed on the hardware node during the product installation.

General Syntax
^^^^^^^^^^^^^^
 
The `prlctl` utility is used to perform administration tasks on virtual machines. The utility supports a full range of tasks from creating and administering virtual machines to getting statistics and generating problem reports. 
  
.Syntax
[subs="quotes"]
----
prlctl _&lt;command&gt;_ _&lt;vm_name&gt;_ [_&lt;options&gt;_] [-v, --verbose _&lt;number&gt;_] [--timeout _&lt;sec&gt;_]
       [-l, --login [_&lt;user&gt;_[:_&lt;passwd&gt;_]@]_&lt;server&gt;_] [-p, --read-passwd _&lt;file&gt;_]]
----
  
.Options
[options="header",cols="1a,1a"]
|====
|Name|Description

|+_&lt;command&gt;_+|The name of the command to execute.
|+_&lt;vm_name&gt;_+|The ID or name of the virtual machine to perform the operation on. To obtain the list of the available virtual machines, use the `prlctl list` command.
|+_&lt;options&gt;_+|Command options. See individual commands for available options.
|+-v, --verbose _&lt;number&gt;_+|Enables verbose output. The greater the +_&lt;number&gt;_+, the higher the verbosity.
|+-l, --login [__&lt;user&gt;__[:__&lt;passwd&gt;__]@]__&lt;server&gt;__+|Connect to a remote +_&lt;server&gt;_+ with the specified credentials. If this flag is omitted, the `prlctl` command is assumed to be run locally.
|+-p, --read-passwd _&lt;file&gt;_+|Use the password from the file +_&lt;file&gt;_+ to log in to a remote hardware node, other credentials being specified with the `--login` option. The `--read-passwd` option can be specified multiple times in order to form a password stack for operations requiring multiple passwords. Each password must be supplied in a separate file.
|====

To display help, enter `prlctl` without any options.
  
prlctl capture
^^^^^^^^^^^^^^
 
Captures the screen of a virtual machine desktop and saves it to a file on the client machine. The data is saved in the Portable Network Graphics (PNG) format.
  
.Syntax
[subs="quotes"]
----
prlctl capture _&lt;vm_name&gt;_ --file _&lt;name&gt;_
----
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;vm_name&gt;_+|The virtual machine name.
|+--file _&lt;name&gt;_+|Name and path of the file to which the image should be saved. You should include the file extension (`.png`) or the file will be saved without one.
|====

prlctl clone 
^^^^^^^^^^^^
 
Creates an exact copy of the specified virtual machine.
  
.Syntax
[subs="quotes"]
----
prlctl clone _&lt;vm_name&gt;_ --name _&lt;new_name&gt;_ [--template] [--dst=_&lt;path&gt;_] [--changesid]
             [--detach-external-hdd &lt;yes|no&gt;]
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;vm_name&gt;_+|Name of the virtual machine to clone.
|+--name _&lt;new_name&gt;_+|Name to be assigned to the new virtual machine.
|`--template`|Create a virtual machine template instead of a real virtual machine. Templates are used as a basis for creating new virtual machines. 
|+--dst=_&lt;path&gt;_+|Full path to the directory where the new virtual machine will be stored. If this option is omitted, the new virtual machine will be created in the default directory.
|`--changesid`|Generate a new Windows security identifier (SID) for a Windows-based virtual machine. For this parameter to work, Virtuozzo tools must be installed in the virtual machine.
|+--detach-external-hdd &lt;yes{brvbar}no&gt;+|If set to `no`, hard disks located outside the source virtual machine are not removed from the configuration of the resulting clone. Setting the parameter to `yes` removes external hard disks from the configuration.

[NOTE]
[subs="quotes"]
====
*Note:* External hard disks are not copied to the cloned virtual machine.
====
|====

prlctl convert 
^^^^^^^^^^^^^^
 
This command is used to convert third-party virtual machines and disks to Virtuozzo virtual machines and disks. The following third-party virtual machines and disks are supported:

[options="compact"]
* Microsoft Hyper-V
* Microsoft Virtual PC
* Virtual Box
* VMware
  
.Syntax
[subs="quotes"]
----
prlctl convert _&lt;path&gt;_ [--dst=_&lt;path&gt;_] [--force]
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;path&gt;_+|Full path to the third-party virtual machine's configuration file on the local server.
|+--dst=_&lt;path&gt;_+|Set the destination directory for the resulting virtual machine and its configuration file. If omitted, the default directory (`/var/parallels`) is used.
|`--force`|Convert the third-party virtual machine even if its guest OS cannot be identified.
|====

prlctl create 
^^^^^^^^^^^^^
 
Creates a new virtual machine. A virtual machine can be created from scratch or from a virtual machine template. When created from scratch, the target operating system type or version must be specified. To create a virtual machine from a template, the template name must be passed to the command.
  
.Syntax
[subs="quotes"]
----
prlctl create _&lt;vm_name&gt;_ [_&lt;options&gt;_]
----
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;vm_name&gt;_+|User-defined new virtual machine name. If the name consists of two or more words separated by spaces, it must be enclosed in quotes.
|+-d, --distribution {_&lt;name&gt;_{brvbar}list}+|The operating system distribution the virtual machine will be optimized for. For the full list of supported distributions, refer to the `prlctl` man pages.
|+--ostemplate _&lt;template_name&gt;_+|The name of the virtual machine template from which to create the new virtual machine. Use the `prlctl list --template` command to obtain the list of the available templates.
|+--location _&lt;vm_path&gt;_+|Name and path of the directory where to store the new virtual machine files. If this parameter is omitted, the files will be crated in the default virtual machine directory.
|+--uuid _&lt;uuid&gt;_+|A custom UUID to assign to the virtual machine.
|====

[NOTE]
[subs="quotes"]
====
*Note:* You can use either `--distribution` or `--ostemplate`, not both options at once.
====

When creating a virtual machine from scratch, you may specify the operating system family or version. If an operating system version is specified using the `--distribution` parameter, the virtual machine will be configured for that operating system. If an operating system family is specified using the `--ostype` parameter, the virtual machine will be configured for the default version of this OS family. The default versions are determined internally by Virtuozzo and are kept in sync with other Virtuozzo management tools such as Virtual Automation. The best way to find out the default versions used in your Virtuozzo installation is by creating a sample virtual machine.

prlctl delete
^^^^^^^^^^^^^
 
Deletes a virtual machine from the hardware node. The command removes a virtual machine from the Virtuozzo registry and permanently deletes all its files from the server. Once completed, this operation cannot be reversed.
  
.Syntax
[subs="quotes"]
----
prlctl delete _&lt;vm_name&gt;_
----
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;vm_name&gt;_+|The ID or name of the virtual machine to delete.
|====

prlctl enter
^^^^^^^^^^^^
 
Creates a command prompt channel to a virtual machine. By using this command, you can create a command prompt channel and execute commands in a virtual machine. Virtuozzo tools must be installed in a virtual machine to use this utility.
  
.Syntax
[subs="quotes"]
----
prlctl enter _&lt;vm_name&gt;_
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;vm_name&gt;_+|The ID or the name of the virtual machine.
|====

prlctl exec 
^^^^^^^^^^^
 
Executes a command inside a virtual machine. Virtuozzo tools must be installed in a virtual machine to use this utility. Commands in Linux guests are invoked with `bash -c`.
  
.Syntax
[subs="quotes"]
----
prlctl exec _&lt;vm_name&gt;_ _&lt;command&gt;_
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;vm_name&gt;_+|The ID or the name of the virtual machine.
|+_&lt;command&gt;_+|A command to execute.
|====

prlctl list
^^^^^^^^^^^
 
Displays a list of virtual machines on the Hardware Node. Displays information on virtual machines on the Hardware Node.
  
.Syntax
[subs="quotes"]
----
prlctl list --vmtype vm [-a, --all] [-o, --output _&lt;field&gt;_[,...]]
            [-s, --sort {_&lt;field&gt;_|-_&lt;field&gt;_}] [-t, --template] [-j, --json]
prlctl list -i, --info --vmtype vm [_&lt;vm_name&gt;_] [-f, --full] [-t, --template]
                                   [-j, --json]
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|`-a, --all`|List all running, stopped, suspended, and paused virtual machines. If this and the rest of the parameters are omitted, only the running virtual machines will be displayed.
|`-t, --template`|List available virtual machine templates instead of actual virtual machines.
|+-o, --output __&lt;field&gt;__[,...]+|Display only the specified fields. Type field names in lower case. Separate multiple fields with commas. For the list of fields, see <<_prlctl_list_output_parameters>>.
|+-s, --sort {__&lt;field&gt;__{brvbar}-__&lt;field&gt;__}+|Sort virtual machines by the specified field in either ascending or descending order.
|`-i, --info`|Display detailed information about the specified virtual machine.
|`-f, --full`|Display detailed information about network cards in virtual machines. Used with the `--info` option.
|+_&lt;vm_name&gt;_+|The ID or name of the virtual machine for which to display the detailed information. If not specified, the information will be displayed for all registered virtual machines.
|`-j, -json`|Produce machine-readable output in the JSON format.
|====

prlctl list Output Parameters
+++++++++++++++++++++++++++++
  
Listed below are the parameters that can be specified after the `-o` switch.

[options="header",cols="1a,1a,3a"]
|====
|Name|Output Column|Description

|`uuid`|`UUID`|Virtual machine ID.
|`hostname`|`HOSTNAME`|Virtual machine hostname.
|`name`|`NAME`|Virtual machine name.
|`description`|`DESCRIPTION`|Virtual machine description.
|`ostemplate`|`OSTEMPLATE`|Specifies the name of the OS template the virtual machine is based on (e.g., `centos-6-x86_64`).
|`ip`|`IP_ADDR`|Virtual machine IP address.
|`status`|`STATUS`|Virtual machine status (e.g., running or stopped).
|`numproc`|`NPROC`|The number of processes and threads allowed.
|`mac`|`MAC`|Network device's MAC address.
|`netif`|`NETIF`|Network devices in the virtual machine .
|`iolimit`|`IOLIMIT`|The bandwidth the virtual machine is allowed to use for its disk input and output (I/O) operations, in bytes per second.
|`ha_enable`|`HA_ENABLE`|Indicates whether the virtual machine is joined to the High Availability Cluster.
|`ha_prio`|`HA_PRIO`|Virtual machine priority in the High Availability Cluster (0 is the lowest). Higher-priority virtual environments are restarted first in case of failures.
|====

prlctl migrate
^^^^^^^^^^^^^^
 
Migrates a virtual machine from one host to another.
  
.Syntax
[subs="quotes"]
----
prlctl migrate [_&lt;source_server&gt;_/]_&lt;vm_name&gt;_ _&lt;destination_server&gt;_[/_&lt;vm_name&gt;_]
               [--dst=_&lt;path&gt;_] [--keep-src] [--switch-template] [--changesid]
               [--ssh _&lt;options&gt;_]
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;vm_name&gt;_+|The source virtual machine name.
|+_&lt;source_server&gt;_+|The source server information. Use the following format to specify this info: +[__&lt;user&gt;__[:__&lt;password&gt;__]@]__&lt;server_IP_address_or_hostname&gt;__[:__&lt;port&gt;__]+.
|+_&lt;destination_server&gt;_+|The destination server information. If omitted, the migration will be performed locally. Use the following format to specify this info: +[__&lt;user&gt;__[:__&lt;password&gt;__]@]__&lt;server_IP_address_or_hostname&gt;__[:__&lt;port&gt;__]+.
|+--dst=_&lt;path&gt;_+|Name and path of the directory on the destination server where the virtual machine files should be stored. 
|`--keep-src`|If this option is included, the original virtual machine will be left intact on the source server. If this option is omitted, the original virtual machine will be removed from the source server.
|`--switch-template`|Converts the virtual machine to a template and a template to a virtual machine. For example, if the source virtual machine was a template, it becomes a full featured virtual machine after the migration, and vice versa.
|`--changesid`|Changes the resulting virtual machine SID.
|`--ssh`|Additional options to pass to `ssh` to connect to the destination server. All standard `ssh` options are supported.

[NOTE]
[subs="quotes"]
====
*Note:* Do not specify the destination server hostname or IP address as an `ssh` option.
====
|====

prlctl mount, umount
^^^^^^^^^^^^^^^^^^^^
 
Mounts or unmounts the hard disks of a virtual machine to the +/vz/root/_&lt;UUID&gt;_+ directory on the hardware node.
  
.Syntax
[subs="quotes"]
----
prlctl mount _&lt;vm_name&gt;_ [-o &lt;ro|rw&gt; | --info]
prlctl umount _&lt;vm_name&gt;_
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;vm_name&gt;_+|Virtual machine ID or name.
|+-o &lt;ro{brvbar}rw&gt;+|Sets access rights:

[options="compact"]
* `ro` - read-only,
* `rw` - read-write.
|`--info`|Show information about the mounted virtual disks. 
|====

prlctl move
^^^^^^^^^^^
 
Moves the files of a virtual machine to a new location on the same server. The virtual machine must be stopped or suspended.
  
.Syntax
[subs="quotes"]
----
prlctl move _&lt;vm_name&gt;_ --dst=_&lt;path&gt;_
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;vm_name&gt;_+|Virtual machine name.
|+--dst=_&lt;path&gt;_+|Path to the new virtual machine files location.
|====

prlctl pause, suspend, resume
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
Pause, suspend, and resume a virtual machine.
  
.Syntax
[subs="quotes"]
----
prlctl pause _&lt;vm_name&gt;_
prlctl suspend _&lt;vm_name&gt;_
prlctl resume _&lt;vm_name&gt;_
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;vm_name&gt;_+|The ID or name of the virtual machine to pause, suspend, or resume.
|====

The pause command pauses a virtual machine. To continue the virtual machine operation, use the prlctl start command.
  
The suspend command suspends the virtual machine operation. When a running virtual machine is suspended, the state of the virtual machine processes is saved to a file on the host. After that, the machine is stopped. To resume the machine, use the resume command.

prlctl problem-report
^^^^^^^^^^^^^^^^^^^^^
 
Obtains a problem report for the specified virtual machine and either sends it to the Virtuozzo technical support team or displays it on the screen.
  
.Syntax
[subs="quotes"]
----
prlctl problem-report _&lt;vm_name&gt;_ &lt;-d, --dump|-s, --send  [--proxy [__&lt;user&gt;__ \
                      [:__&lt;passwd&gt;__]@__&lt;proxyhost&gt;__[:__&lt;port&gt;__]]] [--no-proxy]&gt;
----

.Options
[options="header",cols="2a,3a"]
|====
|Name|Description

|+_&lt;vm_name&gt;_+|The ID or name of the virtual machine for which to obtain the problem report. If the name consists of separate words, it must be enclosed in quotes.
|`-d, --dump`|Collect technical data about a virtual machine and display it on the screen. You can also pipe the output to a file and then send it to the Virtuozzo technical support team to analyze your problem.
|`-s, --send`|Send the generated problem report to the Virtuozzo technical support team.
|+--proxy [__&lt;user&gt;__[:__&lt;passwd&gt;__]@+ \ +
+__&lt;proxyhost&gt;__[:__&lt;port&gt;__]]+|Use the specified information to send the generated report through a proxy server, if you use one to connect to the Internet.
|`--no-proxy`|Do not use a proxy server to send the generated report. This is the default behavior, so you can omit this parameter.
|====

prlctl register, unregister
^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
The `register` command is used to register a virtual machine with Virtuozzo. 
  
The `unregister` command removes a virtual machine from the Virtuozzo registry.
  
.Syntax
[subs="quotes"]
----
prlctl register _&lt;path&gt;_ --preserve-uuid &lt;yes|no&gt;
prlctl unregister _&lt;vm_name&gt;_
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;path&gt;_+|An absolute path to the virtual machine directory.
|+_&lt;vm_name&gt;_+|The ID or the name of the virtual machine to remove from the Virtuozzo registry.
|+--preserve-uuid &lt;yes{brvbar}no&gt;+|Specifies what to do with the UUID (universally unique identifier). If you specify `yes`, the UUID is preserved. If you specify `no`, the UUID is regenerated (default behavior).
|====

Use the `register` command when you have a virtual machine on the server that does not show up in the list of the virtual machines registered with the Virtuozzo. This can be a machine that was previously removed from the registry or a machine that was copied from another location.
  
The `unregister` command removes a virtual machine from the Virtuozzo registry, but does not delete the virtual machine files from the server. You can re-register such a machine with Virtuozzo later using the `register` command.

prlctl reset-uptime
^^^^^^^^^^^^^^^^^^^
 
Resets a virtual machine uptime counter as well as count start date and time.
  
.Syntax
[subs="quotes"]
----
prlctl reset-uptime _&lt;vm_name&gt;_
----
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;vm_name&gt;_+|Virtual machine ID or name. Names consisting of multiple words must be enclosed in quotes.
|====

prlctl set
^^^^^^^^^^
 
The `prlctl set` command is used to modify the configuration of a virtual machine and manage virtual machine devices. The following subsections provide technical information on how to use the command to perform these tasks.

Modifying Virtual Machine Configuration
+++++++++++++++++++++++++++++++++++++++
  
The `prlctl set` command is used to modify the virtual machine configuration parameters.
  
.Syntax
[subs="quotes"]
----
prlctl set _&lt;vm_name&gt;_ [--cpus _&lt;number&gt;_] [--memsize _&lt;number&gt;_]
           [--videosize _&lt;number&gt;_] [--memguarantee _&lt;percentage&gt;]
           [--mem-hotplug &lt;on|off&gt;] [--distribution _&lt;name&gt;_] [--description _&lt;desc&gt;_]
           [--autostart &lt;on|off|auto&gt;] [--autostart-delay _&lt;number&gt;_]
           [--autostop &lt;stop|suspend&gt;] [--applyconfig _&lt;conf&gt;_] [--name _&lt;new_name&gt;_]
           [--start-as-user &lt;administrator|owner|_&lt;user&gt;_:_&lt;passwd&gt;_]
           [--vnc-mode &lt;auto|manual|off&gt; {--vnc-passwd _&lt;passwd&gt;_ | --vnc-nopasswd}]
           [--vnc-port _&lt;port&gt;_] [--vnc-address _&lt;address&gt;_] [--cpu-hotplug &lt;on|off&gt;]
           [--cpuunits _&lt;units&gt;_] [--cpulimit {_&lt;percent&gt;_|_&lt;megahertz&gt;_}]
           [--ioprio _&lt;priority&gt;_] [--iolimit _&lt;limit&gt;_] [--iopslimit _&lt;limit&gt;_]
           [--cpumask {__&lt;N&gt;__[,N,N1-N2] | all}] [--offline-management &lt;on|off&gt;]
           [--offline-service _&lt;service_name&gt;_] [--userpasswd __&lt;user&gt;__:__&lt;passwd&gt;__
           [--crypted]] [--rate _&lt;rate&gt;_] [--ratebound &lt;on|off&gt;_]
           [--apply-iponly &lt;yes|no&gt;] [--efi-boot &lt;on|off&gt;]
           [--tools-autoupdate &lt;on|off&gt;]
----

.Options
[options="header",cols="1a,1a"]
|====
|Name|Description

|+_&lt;vm_name&gt;_+|Target virtual machine ID or name.
|+--cpus _&lt;number&gt;_+|Number of virtual CPUs in the virtual machine. If the server has several CPU cores, this option also defines the number of CPUs shown to users from inside a virtual machine.
|+--memsize _&lt;number&gt;_+|The amount of memory (RAM) available to the virtual machine, in megabytes. You can use the following suffixes to specify measurement units:

[options="compact"]
* `G` for gigabytes
* `M` for megabytes
* `K` for kilobytes
* `B` for bytes
|+--videosize _&lt;number&gt;_+|The amount of video memory available to the virtual machine graphics card. You can use the following suffixes to specify measurement units:

[options="compact"]
* `G` for gigabytes
* `M` for megabytes
* `K` for kilobytes
* `B` for bytes
|+--memguarantee _&lt;size&gt;_+|Sets a percentage of virtual machine's RAM that said VM is guaranteed to have. By default, set to 40%.
|+--mem-hotplug &lt;on{brvbar}off&gt;+|Enables or disables memory (RAM) hotplug support in the virtual machine. This feature is disabled in the virtual machine by default. The guest operating system must support memory hotplug for this functionality to work. 
|+--distribution _&lt;name&gt;_+|Optimize the virtual machine for use with  the  operating  system +_&lt;name&gt;_+. You can get the list of available distributions using the +prlctl set _&lt;vm_name&gt;_ -d list+ command.
|+--description _&lt;desc&gt;_+|Sets virtual machine description. Descriptions with white spaces must be enclosed in quotation marks.
|+--autostart &lt;on{brvbar}off{brvbar}auto&gt;+|Defines the virtual machine start-up options:

[options="compact"]
* `on` - the virtual machine is started automatically wen the hardware node starts or the Virtuozzo component responsible for managing virtual machines is disabled.
* `off` - the autostart is off. This is the default virtual machine start-up mode.
* `auto` - resume the virtual machine state prior to shutting down the hardware node or disabling the Virtuozzo component responsible for managing virtual machines.

If you set this option to `on` or `auto`, you must additionally specify the `--start-as-user` option.
|+--autostart-delay _&lt;number&gt;_+|Sets the time delay used during the virtual machine automatic startup.
|+--autostop &lt;{brvbar}suspend&gt;+|Sets the automatic shutdown mode for the specified virtual machine:

[options="compact"]
* `stop` - the virtual machine is stopped when you shut down the hardware node or disable the Virtuozzo component responsible for managing virtual machines.
* `suspend` - the virtual machine is suspended when the hardware node is shut down or the Virtuozzo component responsible for managing virtual machines is disabled.
|+--applyconfig _&lt;conf&gt;_+|Applies the resource parameter values from the specified VM sample file in `/etc/parallels/samples` to the virtual machine. The following parameters are applied:

[options="compact"]
* all memory-related parameters (both RAM and video)
* all CPU-related parameters
* IO and IOPS limits
* disk size
|+--name _&lt;new_name&gt;_+|Changes the virtual machine name.
|+--start-as-user &lt;administrator{brvbar}owner{brvbar}__&lt;user&gt;__:__&lt;passwd&gt;__+|Specifies the account to use to autostart the virtual machine:

[options="compact"]
* `administrator` - start the virtual machine as the administrator of the host operating system.
* `owner` - start the virtual machine as the virtual machine owner.
* +__&lt;user&gt;__:__&lt;passwd&gt;__+ - start the virtual machine as the specified user.
|+--vnc-mode &lt;auto{brvbar}manual{brvbar}off&gt;+|Enables or disables access to the virtual machine via the VNC protocol.
|+--vnc-port _&lt;port&gt;_+|Sets the VNC port number.
|+--vnc-passwd _&lt;passwd&gt;_ {brvbar} --vnc-nopasswd+|Sets the VNC password or specifies that no password is needed for VNC connections. Either of these options is mandatory for any VNC connection.
|+--vnc-address _&lt;address&gt;_+|Sets the IP address to use for logging in to the virtual machine via VNC. It must be one of the IP addresses assigned to the hardware node. By default, you can use any of the IP addresses of the hardware node to log in to the virtual machine.
|+--cpu-hotplug &lt;on{brvbar}off&gt;+|Enables or disables CPU hotplug support in the virtual machine. This feature is disabled by default. The guest operating system must support CPU hotplug for this functionality to work.
|+--cpuunits _&lt;units&gt;_+|Sets the CPU weight for the virtual machine. This is a positive integer number that defines how much CPU time the virtual machine can get as compared to the other virtual machines and containers running on the server. The larger the number, the more CPU time the virtual machine can receive. Possible values range from 8 to 500000. If this parameter is not set, the default value of 1000 is used.
|+--cpulimit {__&lt;percent&gt;__{brvbar}__&lt;megahertz&gt;__}+|CPU limit, in percent or megahertz (MHz) the virtual machine is not allowed to exceed.  By default, the limit is set in percent. To set the limit in MHz, specify "m" after the value.
  
[NOTE]
[subs="quotes"]
====
*Note:* If the server has 2 processors, the total CPU time equals 200%.
====
|+--ioprio _&lt;priority&gt;_+|Disk I/O priority level from 0 to 7. The default is 4.
|+--iolimit _&lt;limit&gt;_+|Disk I/O bandwidth limit. The default is 0 (no limit). By default the limit is set in megabytes per second. You can use the following letters following the number to specify units of measure:

[options="compact"]
* G - gigabytes per second (e.g., 1G).
* K - kilobytes per second (e.g., 10K).
* B - bytes per second (e.g., 100B). 

The default I/O bandwidth limit for all newly created virtual machines is set to 0, which means that no limits are applied to them.
|+--iopslimit _&lt;limit&gt;_+|Maximum number of disk input and output operations per second a virtual machine is allowed to perform. By default, any newly created container does not have the IOPS limit set and can perform so many disk I/O operations per second as necessary.
|+--cpumask {__&lt;N&gt;__[,N,N1-N2] {brvbar} all}+|An affinity mask indicating what CPU(s) the virtual machine processes should be run on. You can specify a list of CPUs identified by their index numbers separated by commas (0, 1, 2, 3, etc.) or a range (4-6). To make all CPUs available for the virtual machine processes specify `--cpumask all`.
|+--offline-management &lt;on{brvbar}off&gt;+|Turns the offline management on or off.
|+--offline-service _&lt;service_name&gt;_+|The name of the service to use for offline management. 
|+--userpasswd __&lt;user&gt;__:__&lt;passwd&gt;__+|Sets the password for the specified user in the virtual machine. If the user account does not exist, it will be created. Virtuozzo tools must be installed in the virtual machine for the command to work.
|`--crypted`|Used with `--userpasswd`. Indicates that the specified password is already a hash.
|+--rate _&lt;rate&gt;_+|Sets the guaranteed outgoing traffic rate in Kbps for the virtual machine. 
|+--ratebound &lt;on{brvbar}off&gt;+|Turns the network traffic rate limitation set by the `--rate` parameter (above) on or off. The default value is `off`.
|+--apply-iponly &lt;yes{brvbar}no&gt;+|If set to `yes`, the hostname, nameserver, and search domain settings from the virtual machine configuration file are ignored.
|+--efi-boot &lt;on{brvbar}off&gt;+|If set to `on`, the virtual machine will boot using the EFI firmware. If set to `off` (default), the virtual machine will boot using the BIOS firmware.
|+--tools-autoupdate &lt;on{brvbar}off&gt;+|Enables or disables automatic update of Virtuozzo tools inside Windows virtual machines. If set to `on`, Virtuozzo tools are updated automatically on user log in. A reboot is required to complete the update. If set to `off`, Virtuozzo tools are not updated automatically, so that you can do it manually at a convenient time.
|====

Managing Virtual Devices
++++++++++++++++++++++++
  
The `prlctl set` command allows to add, modify, and delete virtual devices of virtual machines.
  
.Syntax
[subs="quotes"]
----
prlctl set _&lt;vm_name&gt;_ --device-add _&lt;dev_type&gt;_ _&lt;options&gt;_
prlctl set _&lt;vm_name&gt;_ --device-set _&lt;dev_name&gt;_ _&lt;options&gt;_
prlctl set _&lt;vm_name&gt;_  --device-del _&lt;dev_name&gt;_ _&lt;options&gt;_ --destroy-image-force
prlctl set _&lt;vm_name&gt;_  --device-connect _&lt;dev_name&gt;_
prlctl set _&lt;vm_name&gt;_  --device-disconnect _&lt;dev_name&gt;_
prlctl set _&lt;vm_name&gt;_  --device-bootorder "dev_name1 dev_name2 [...]"
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;vm_name&gt;_+|The virtual machine name.
|+--device-add _&lt;dev_type&gt;_ _&lt;options&gt;_+|Adds a virtual device of the type _&lt;dev_type&gt;_ to a stopped virtual machine. The +_&lt;dev_type&gt;_+ parameter can be: `hdd`, `cdrom`, `net`, `fdd`, `serial`, `parallel`, `sound`, `usb`, `pci`.
|+--device-set _&lt;dev_name&gt;_ _&lt;options&gt;_+|Modifies the configuration of the virtual device _&lt;dev_name&gt;_ in a stopped virtual machine. 
|+--device-del _&lt;dev_name&gt;_ _&lt;options&gt;_+|Deletes the virtual device _&lt;dev_name&gt;_ from a stopped virtual machine.
|`--destroy-image-force`|Used with the `--device-del` option. Deletes a virtual machine HDD even if it is used in that virtual machine's snapshots.
|+--device-connect _&lt;dev_name&gt;_+|Connects the virtual device _&lt;dev_name&gt;_ to a running virtual machine.
|+--device-disconnect +_&lt;dev_name&gt;_+|Disconnects the virtual device _&lt;dev_name&gt;_ from a running virtual machine.
|`--device-bootorder "dev_name1 dev_name2 [...]"`|Specifies the boot order for a virtual machine.
|====

[NOTE]
[subs="quotes"]
====
*Note:* Device names can be obtained with the `prlctl list -i` command.
====

The device-related +_&lt;options&gt;_+ can be subdivided into the following categories:

[options="compact"]
* hard disk drives
* optical disk drives
* network cards
* floppy disk drives
* serial ports
* parallel ports
* USB devices
* sound cards
  
Each group of options is explained in the following subsections in detail.

*Hard Disk Drive Management Options*

This group of options is used to add and configure virtual hard disks in a virtual machine. The first syntax uses a file to emulate a hard disk drive. The second syntax connects a physical hard disk on the host server to the virtual machine.
  
.Syntax
[subs="quotes"]
----
prlctl set +_&lt;vm_name&gt;_ {--device-add hdd | --device-set hdd__&lt;N&gt;__}
           [--image _&lt;file&gt;_] [--type &lt;expanded|plain&gt;] [--size _&lt;size&gt;_] [--split]
           [--iface &lt;sata|ide|scsi&gt;] [--position _&lt;pos&gt;_]
           [--subtype &lt;buslogic|lsi-spi|lsi-sas&gt;] [--enable|--disable]
prlctl set _&lt;vm_name&gt;_ --device-add hdd --device _&lt;dev_name&gt;_ [--position _&lt;pos&gt;_]
           [--iface &lt;sata|ide|scsi&gt;] [--subtype &lt;buslogic|lsi-spi|lsi-sas&gt;]
prlctl set _&lt;vm_name&gt;_ --backup-add _&lt;backup_ID&gt;_ [--disk _&lt;disk_name&gt;_]
           [--iface &lt;sata|ide|scsi&gt;] [--position _&lt;pos&gt;_]
           [--subtype &lt;buslogic|lsi-spi|lsi-sas&gt;_]
prlctl set _&lt;vm_name&gt;_ --backup-del {_&lt;backup_ID&gt;_|all}
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;vm_name&gt;_+|The virtual machine name.
|`--device-add hdd`|Adds a virtual hard disk drive to the virtual machine. You can connect up to four SATA/IDE devices and up to seven SCSI devices to a virtual machine. This includes hard disks and optical disk drives. New hard disks are created in the virtual machine directory and are automatically named +harddisk__&lt;N&gt;__.hdd+, where +_&lt;N&gt;_+ is the next available disk index.
|+--device-set hdd__&lt;N&gt;__+|Modifies the parameters of an existing virtual hard disk. Virtual hard disks are named using the +hdd__&lt;N&gt;__+ format where +_&lt;N&gt;_+ is the drive index number starting from 0 (e.g., `hdd0`, `hdd1`). To obtain the list of disk names, use the `prlctl list` command with the `--info` option.
|+--image _&lt;file&gt;_+|Specifies an image file that will be used to emulate the virtual disk.

[options="compact"]
* If the specified image does not exist, it is created and used to emulate the virtual hard disk.
* If the specified image exists, it is used to emulate the virtual hard disk.
|+--device _&lt;dev_name&gt;_+|This option is used to connect a physical hard disk on the hardware node to the virtual machine. You can obtain the names of the existing hard disks on the server using the `prlsrvctl info` command.
|+--size _&lt;size&gt;_+|The size of the virtual hard disk, in megabytes. The default size is 65536 MB.
|`--split`|Splits the hard disk image file into 2 GB pieces. You should split a virtual disk if it is stored on a file system that cannot support files larger than 2 GB (e.g., FAT16).
|`--enable`|Enables the specified virtual disk drive. All newly added disk drives are enabled by default (provided the `--disable` option is omitted).
|`--disable`|Disables the specified virtual disk drive. The disk drive itself is not removed from the virtual machine configuration.
|+--backup-add _&lt;backup_ID&gt;_+|Attach the backup with the identifier _&lt;backup_ID&gt;_ to the virtual machine as a virtual hard disk. To obtain the backup ID, use the `prlctl backup-list -f` command.
|+--disk _&lt;disk_name&gt;_+|Used with `--backup-add`. The name of the disk in the backup to attach. If a disk is not specified, all disks contained in the backup will be attached. To obtain the disk name(s), use the `prlctl backup-list -f` command.
|+--backup-del {_&lt;backup_ID&gt;_{brvbar}all}|Detach either the backup with the identifier _&lt;backup_ID&gt;_ or detach all backups from the virtual machine.
|+--iface &lt;sata{brvbar}ide{brvbar}scsi&gt;+|The disk drive Interface type. If omitted, the SATA interface will be used.
|+--subtype &lt;buslogic{brvbar}lsi-spi{brvbar}lsi-sas&gt;+|Virtual hard disk subtype.
|+--position _&lt;pos&gt;_+|The SCSI, SATA or IDE device identifier to be used for the virtual disk. The allowed ID ranges are:

[options="compact"]
* IDE devices: 0-3
* SATA devices: 0-5
* SCSI device: 0-6
|====

*Optical Disk Drive Management Options*

This group of options is used to add and configure virtual optical disk drives, such as DVD or CD drives.
  
.Syntax
[subs="quotes"]
----
prlctl set _&lt;vm_name&gt;_ {--device-add cdrom | --device-set cdrom__&lt;N&gt;__}
           {--device _&lt;dev_name&gt;_ | --image _&lt;file&gt;_} [--iface &lt;ide|scsi&gt;]
           [--position _&lt;pos&gt;_] [--subtype &lt;buslogic|lsi-spi|lsi-sas&gt;]
           [--enable|--disable] [--connect|--disconnect]
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;vm_name&gt;_+|The virtual machine name.
|`--device-add cdrom`|Adds a DVD/CD drive to the virtual machine. You can connect up to four IDE devices and up to seven SCSI devices to a virtual machine. This includes virtual hard disks and DVD/CD drives.
|+--device-set cdrom__&lt;N&gt;__+|Modifies the parameters of an existing virtual optical disk. The +_&lt;N&gt;_+ postfix indicates the drive index number. To obtain the list of the available drives, use the `prlctl list` command with the `--info` option.
|+--device _&lt;dev_name&gt;_+|The name of the physical optical disk to connect to the virtual machine.
|+--image _&lt;file&gt;_+|The name of an existing disk image file to mount in the virtual machine. Currently, the following image file formats are supported: `.iso`, `.cue`, `.ccd`, and `.dmg`. The image must not be compressed and/or encrypted.
|+--iface &lt;ide{brvbar}scsi&gt;+|Interface type:

[options="compact"]
* `ide` - IDE disk.
* `scsi` - SCSI disk (default).
|+--position _&lt;pos&gt;_+|The SCSI, SATA or IDE device identifier to be used for the DVD/CD drive. The allowed ID ranges are the following:

[options="compact"]
* IDE devices: 0-3
* SATA devices: 0-5
* SCSI device: 0-6

You can use one of the following formats for specifying IDs: +__&lt;ID&gt;__:__&lt;bus&gt;__+, +__&lt;ID&gt;__-__&lt;bus&gt;__+, +__&lt;ID&gt;__+. For example, if you specify `3:0` (or `3-0` or `3`) as +_&lt;number&gt;_+ for a SCSI drive, the guest OS will see the drive as having ID 3 on SCSI bus 0.
|+--subtype &lt;buslogic{brvbar}lsi-spi{brvbar}lsi-sas&gt;+|Virtual hard disk subtype.
|`--enable`|Enables the specified DVD/CD drive. All newly added drives are enabled by default (provided the `--disable` option is omitted).
|`--disable`|Disables the specified optical disk drive. The disk drive itself is not removed from the virtual machine configuration.
|`--connect`|Automatically connect the specified optical disk drive during the virtual machine startup process.
|`--disconnect`|Do not automatically connect the specified optical disk drive during the virtual machine startup process.
|====

*Network Adapter Management Options*

This group of options is used to manage virtual network adapters in a virtual machine.
  
.Syntax
[subs="quotes"]
----
prlctl set _&lt;vm_name&gt;_ {--device-add net | --device-set net__&lt;N&gt;__}
           {--type routed | --network _&lt;network_ID&gt;_} [--mac {_&lt;addr&gt;_|auto}]
           [{--ipadd __&lt;addr&gt;__[/__&lt;mask&gt;__] | --ipdel __&lt;addr&gt;__[/__&lt;mask&gt;__] | --dhcp &lt;yes|no&gt; |
           --dhcp6 &lt;yes|no&gt;}] [--gw _&lt;gw&gt;_] [--gw6 _&lt;gw&gt;_]
           [--nameserver _&lt;addr&gt;_] [--searchdomain _&lt;addr&gt;_]
           [--configure &lt;yes|no&gt;] [--ipfilter &lt;yes|no&gt;] [--macfilter &lt;yes|no&gt;]
           [--preventpromisc &lt;yes|no&gt;] [--enable|--disable]
           [--connect|--disconnect] [--adapter-type &lt;e1000|rtl|virtio&gt;]
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;vm_name&gt;_+|The virtual machine name.
|`--device-add net`|Adds a new virtual network adapter to the virtual machine.
|+--device-set net__&lt;N&gt;__+|Modifies an existing virtual network adapter. To obtain the list of the available adapters, use the `prlctl list` command with the `--info` option.
|`--type routed`|Sets the networking mode for the virtual network adapter to "routed". In this mode, the network adapter is communicating with the outside world through an internal virtual network adapter.
|+--network _&lt;network_ID&gt;_+|Sets the networking mode for the virtual network adapter to "virtual_network". In this mode the adapter is connected to a virtual network specified by +_&lt;network_ID&gt;_+.
|+--mac {_&lt;addr&gt;_{brvbar}auto}+|Specifies the MAC address to assign to an existing network adapter. Specify a desired MAC address using the +addr+ parameter value or use the `auto` option to generate the existing address automatically.
|+--ipadd __&lt;addr&gt;__[/__&lt;mask&gt;__]+|Adds an IP address and a mask (optional) to the network adapter.
|+--ipdel __&lt;addr&gt;__[/__&lt;mask&gt;__]+|Deletes an IP address from the network adapter.
|+--dhcp &lt;yes{brvbar}no&gt;+|Specifies whether the virtual network adapter should obtain the IPv4 settings through a DHCP server.
|+--dhcp6 &lt;yes{brvbar}no&gt;+|Specifies whether the virtual network adapter should obtain the IPv6 settings through a DHCP server .
|+--gw _&lt;gw&gt;_+|The default gateway to be used by the virtual machine.
|+--gw6 _&lt;gw&gt;_+|The default IPv6 gateway to be used by the virtual machine.
|+--nameserver _&lt;addr&gt;_+|The default DNS server address to be used by the virtual machine.
|+--searchdomain _&lt;addr&gt;_+|The default search domain to be used by the virtual machine.
|+--configure &lt;yes{brvbar}no&gt;+|If set to `yes`, the settings above are applied to the virtual network adapter instead of its original settings. Configuring any of the settings above automatically sets this option to `yes`.
|+--ipfilter &lt;yes{brvbar}no&gt;+|Determines if the specified network adapter is configured to filter network packages by IP address. If set  to `yes`, the adapter is allowed to send packages only from IPs in the network adapter IP addresses list.
|+--macfilter &lt;yes{brvbar}no&gt;+|Determines if the specified network adapter is configured to filter network packages by MAC  address.  If set to `yes`, the adapter is allowed to send packages only from its own MAC address.
|+--preventpromisc &lt;yes{brvbar}no&gt;+|Determines if  the  specified  network adapter should reject packages not addressed to its virtual machine. If set to `yes`, the adapter will drop such packages.
|+--enable{brvbar}--disable+|Enables or disable the network adapter. If omitted during the adapter creation, the adapter will be enabled. 
|+--connect{brvbar}--disconnect+|Connects or disconnects the network adapter. When disconnected, the adapter is not removed from the virtual machine.
|+--adapter-type &lt;e1000{brvbar}rtl{brvbar}virtio&gt;+|Emulated network adapter:

[options="compact"]
* `e1000` - Intel 82545EM,
* `rtl` - Realtek RTL8029,
* `virtio` - VirtIO.
+
[NOTE]
[subs="quotes"]
====
*Note:* The adapter requires no additional configuration on supported Linux and FreeBSD guest operating systems. However, additional drivers need to be installed on Windows Server 2012 R2 guest OSes. For the drivers, visit https://alt.fedoraproject.org/pub/alt/virtio-win/latest/. The VirtIO adapter is not supported on Windows Server 2003 and Windows Server 2008 guest operating systems.
====
|====

*Floppy Disk Drive Management Options*

This group of options is used to add a floppy disk drive to a virtual machine and to modify the existing virtual floppy disk drive.
  
.Syntax
[subs="quotes"]
----
prlctl set _&lt;vm_name&gt;_ {--device-add fdd | --device-set fdd0}
           {--device _&lt;dev_name&gt;_ | --image _&lt;file&gt;_}
           [--enable|--disable] [--connect|--disconnect]
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;vm_name&gt;_+|The virtual machine name.
|`--device-add fdd`|Adds a new floppy disk drive to the virtual machine. You can connect only one floppy disk drive to a virtual machine.
|`--device-set fdd0`|Modifies the parameters of the existing virtual floppy disk drive.
|+--device _&lt;dev_name&gt;_+|The name of the physical floppy disk drive to connect to the virtual machine. If this parameter is omitted, a floppy drive image emulating the floppy disk drive will be created.
|+--image _&lt;file&gt;_+|The name and path of an existing floppy disk image file (usually `floppy.fdd`) to mount in the virtual machine.
|`--enable`|Enables the specified floppy disk drive. All newly added floppy drives are enabled by default (provided the `--disable` option was omitted during the drive creation).
|`--disable`|Disables the specified floppy disk drive. The drive itself is not removed from the virtual machine configuration.
|`--connect`|Connect the specified floppy disk drive automatically during the virtual machine  startup process.
|`--disconnect`|Use this option if you don't want the specified floppy disk drive automatically connected to the virtual machine on its start.
|====

*Serial Port Management Options*

This group of options is used to manage serial ports in a virtual machine.
  
.Syntax
[subs="quotes"]
----
prlctl set _&lt;vm_name&gt;_ {--device-add serial | --device-add serial__&lt;N&gt;__}
           {--device _&lt;dev_name&gt;_ | --output _&lt;file&gt;_ | --socket _&lt;name&gt;_}
           [--enable|--disable] [--connect|--disconnect]
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;vm_name&gt;_+|The virtual machine name.
|`--device-add serial`|Adds a new serial port to the virtual machine. You can connect up to four serial ports to a virtual machine.
|+--device-set serial__&lt;N&gt;__+|Modifies the parameters of an existing serial port.
|+--device _&lt;dev_name&gt;_+|The name of the physical serial port to which to connect the virtual machine.
|+--output _&lt;file&gt;_+|The name and path of the output file to which to connect the virtual serial port.
|+--socket _&lt;name&gt;_+|The name of the physical socket to which to connect the virtual serial port.
|+--enable{brvbar}--disable+|Enables or disables the virtual serial port. All newly added serial ports are enabled by default (provided the `--disable` option is omitted).
|`--connect`|Automatically connect the virtual serial port during the virtual machine startup process.
|`--disconnect`|Do not automatically connect the virtual serial port during the virtual machine startup process.
|====

*Parallel Port Management Options*

This group of options is used to manage parallel port in a virtual machine.

.Syntax
[subs="quotes"]
----
prlctl set _&lt;vm_name&gt;_ {--device-add parallel | --device-set parallel__&lt;N&gt;__}
           {--device _&lt;dev_name&gt;_ | --output _&lt;file&gt;_}
           [--enable|--disable] [--connect|--disconnect]
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;vm_name&gt;_+|The virtual machine ID.
|`--device-add parallel`|Adds a new parallel port to the virtual machine. You can connect up to three parallel ports to a virtual machine.
|+--device-set parallel__&lt;N&gt;__+|Modifies the parameters of an existing virtual parallel port. To obtain the list of ports, use the `prlctl list` command with the `--info` option.
|+--device _&lt;dev_name&gt;_+|The name of the physical parallel port to which to connect the virtual parallel port.
|+--output _&lt;file&gt;_+|The name of the output file to which to connect the virtual parallel port.
|+--enable{brvbar}--disable+|Enables or disables the specified parallel port. All newly added parallel ports are enabled by default (provided the `--disable` option is omitted).
|`--connect`|Automatically connect the specified virtual parallel port during the virtual machine startup process.
|`--disconnect`|Do not automatically connect the specified virtual parallel port during the virtual machine startup process.
|====

*USB Controller Management Options*

This group of options is used to manage the USB controller in a virtual machine.
  
.Syntax
[subs="quotes"]
----
prlctl set _&lt;vm_name&gt;_ --device-add usb [--enable|--disable]
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;vm_name&gt;_+|The virtual machine name.
|`--device-add usb`|The type of the virtual device to add to the virtual machine (in this instance, a USB device). 
|+--enable{brvbar}--disable+|Enables or disables the USB controller. The controller is enabled by default (provided the `--disable` option is omitted).
|====

*Sound Device Management Options*

This group of options is used to manage sound devices in a virtual machine.
  
.Syntax
[subs="quotes"]
----
prlctl set _&lt;vm_name&gt;_ {--device-add sound | --device-set sound0}
           [--input _&lt;dev_name&gt;_] [--output _&lt;dev_name&gt;_]
           [--enable|--disable] [--connect|--disconnect]
----
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;vm_name&gt;_+|The virtual machine name.
|`--device-add sound`|The type of the virtual device to add to the virtual machine (in this instance, a sound device).
|`--device-set sound0`|Modifies the parameters of the existing virtual sound device.
|+--output _&lt;dev_name&gt;_+|The name of a physical output device to connect to the virtual sound device. 
|+--input _&lt;dev_name&gt;_+|The name of the physical input device to connect to the virtual sound device.
|+--enable{brvbar}--disable+|Enables or disables the specified sound device. All newly added sound devices are enabled by default (provided the `--disable` option is omitted).
|`--connect`|Automatically connect the sound device during the virtual machine startup process.
|`--disconnect`|Do not automatically connect the sound device during the virtual machine startup process.
|====

*Removing Devices from Virtual Machines*

The `--device-del` option is used to remove virtual devices from a virtual machine.
  
.Syntax
[subs="quotes"]
----
prlctl set _&lt;vm_name&gt;_ --device-del _&lt;dev_name&gt;_ [--detach-only|--destroy-image]
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;dev_name&gt;_+|The name of the virtual device to delete from the virtual machine. To obtain the list of virtual devices, use the `prlctl list -i` command.
|`--detach-only`|Deletes the information about the specified device from the virtual machine configuration.
|`--destroy-image`|Deletes the information about the specified device from the virtual machine configuration and removes the device from the server.
|====

prlctl snapshot, snapshot-list, snapshot-switch, snapshot-delete
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
Takes, displays, reverts to, and deletes snapshots of a running virtual machine.
  
.Syntax
[subs="quotes"]
----
prlctl snapshot _&lt;vm_name&gt;_ [-n, --name _&lt;name&gt;_] [-d, --description _&lt;desc&gt;_]
prlctl snapshot-list _&lt;vm_name&gt;_ [-t, --tree] [-i, --id _&lt;snapshot_ID&gt;_]
prlctl snapshot-switch _&lt;vm_name&gt;_ -i, --id _&lt;snapshot_ID&gt;_ 
prlctl snapshot-delete _&lt;vm_name&gt;_ -i, --id _&lt;snapshot_ID&gt;_
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;vm_name&gt;_+|The virtual machine name.
|+-n, --name _&lt;name&gt;_+|User-defined snapshot name. Names with white spaces must be enclosed in quotation marks.
|+-d, --description _&lt;desc&gt;_+|User-defined snapshot description. Descriptions with white spaces must be enclosed in quotation marks.
|`-t, --tree`|Displays the snapshot list as a tree. The default display format is tabular with *Parent Snapshot ID* and *Snapshot ID* as columns.
|+-i, --id _&lt;snapshot_ID&gt;_+|[options="compact"]
* Use with `prlctl snapshot-list` to specify the ID of the snapshot to use as the root. If this parameter is omitted, the entire snapshot tree will be displayed.
* Use with `prlctl snapshot-switch` to specify the ID of the snapshot to revert to.
* Use with `prlctl snapshot-delete` to specify the ID of the snapshot to delete.
|====

[NOTE]
[subs="quotes"]
====
*Note:* If the snapshot you want to delete has child snapshots derived from it, they will not be deleted.
====

prlctl start, stop, restart, reset, status
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
Start, stop, reset, and check the status of a virtual machine.
  
.Syntax
[subs="quotes"]
----
prlctl start _&lt;vm_name&gt;_
prlctl stop _&lt;vm_name&gt;_ [--kill]
prlctl restart _&lt;vm_name&gt;_
prlctl reset _&lt;vm_name&gt;_
prlctl status _&lt;vm_name&gt;_
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+_&lt;vm_name&gt;_+|The ID or name of the virtual machine to start, stop, restart, reset, or check the status of.
|`--kill`|Perform a hard virtual machine shutdown. If this option is omitted, an attempt to perform a graceful shutdown will be made.
|====

The `stop` command can perform a hard or a graceful virtual machine shutdown. If the `--kill` parameter is included, the hard shutdown will be performed. If the parameter is omitted, the outcome of the graceful shutdown attempt will depend on the following:

[options="compact"]
* If Virtuozzo tools are installed in a virtual machine, the graceful shutdown will be performed using its facilities.
* If Virtuozzo tools are not installed, the command will try to perform a graceful shutdown using ACPI. Depending on the ACPI support availability in the guest operating system, this may work or not.
  
The `restart` command first gracefully shuts down a virtual machine and then starts it again.
  
The `reset` command resets a virtual machine immediately without its shutdown.

[NOTE]
[subs="quotes"]
====
*Note:* Reseting a virtual machine may result in its data loss.
====

The `start` command can be used to start a stopped virtual machine or to resume a paused virtual machine).

pmigrate
~~~~~~~~
  
The `pmigrate` utility is used to perform different kinds of migration.
  
.Syntax
[subs="quotes"]
----
pmigrate _&lt;source_server&gt;_ _&lt;destination_server&gt;_ [_&lt;options&gt;_]
----

The +_&lt;source_server&gt;_+ is the source server which can be either the server where the virtual machine and container to be migrated is residing (if you are migrating a virtual machine and container) or the physical computer to be migrated (if you are migrating a physical computer). The +_&lt;destination_server&gt;_+ is the destination server, that is, the hardware node where the virtual machine and container or the physical server is to be migrated. If the source and/or destination server are not specified, the operation is performed on the local server.
  
Both +_&lt;source_server&gt;_+ and +_&lt;destination_server&gt;_+ consist of +_&lt;type&gt;_+ and +_&lt;address&gt;_+:

[options="compact"]
* +_&lt;type&gt;_+ denotes the type of computer to migrate and can be one of the following:
+
--
[options="compact"]
* `h` for migrating physical computers
* `c` for migrating containers
* `v` for migrating Virtuozzo virtual machines
* `x` for migrating Xen virtual machines
--
* +_&lt;address&gt;_+ denotes the location of computer to migrate and can be one of the following:
+
--
[options="compact"]
* The computer location if you are migrating a physical computer.
* The computer location and the virtual machine name or container ID if you are migrating a virtual machine or container, respectively. The location must be separated from the virtual machine or container name by slash (`/`).
--

The location format is as follows:
  
[subs="quotes"]
----
[__&lt;user&gt;__[:__&lt;password&gt;__]@]__&lt;destination_server_IP_address_or_hostname&gt;__[:__&lt;port&gt;__]
----
  
The +_&lt;options&gt;_+ you can use with `pmigrate` depend on whether you are migrating a virtual machine or a container. This section describes the options you can use to migrate Virtuozzo and Xen virtual machines, containers, and physical computers.
  
.General Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+--dst=_&lt;path&gt;_+|Specifies the name and path of the directory on the destination server to use for storing the virtual machine files. If this option is omitted, the default directory is used.
|`-h, --help`|Displays the information on the utility usage.
|====

.Virtual Machine Migration Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|`--keep-src`|If this option is included, the original virtual machine is not removed from the source server after migration. By default, the original virtual machine is removed from the source server.
|`--switch-template`|Switches the virtual machine to a template and a template to a virtual machine. For example, if the source virtual machine was a template, it becomes a full featured virtual machine after the migration, and vice versa.
|`--changesid`|Changes the resulting virtual machine SID.
|====

.Container-to-Virtual Machine Migration Options
[options="header",cols="3a,5a"]
|====
|Name|Description

|+-s, --size=_&lt;size&gt;_+|Sets  the limit of the resulting virtual machine disk capacity. If you omit this option or specify 0, no limit is set. In this case disk quotas set for virtual machines on the hardware node will be used. The following size modifiers can be used: G - gigabytes, M - megabytes (default), K - kilobytes.
|+-r, --reg[=&lt;y{brvbar}n&gt;]+|Specifies whether to register the resulting virtual machine on the hardware node. By default, the virtual machine is registered.
|+-d, --remove[=&lt;y{brvbar}n&gt;]+|Removes the source container after migration. By default, the container is left intact.
|+--key=_&lt;auth_key&gt;_+|Set the authentication key for passwordless access to the hardware node. To set this key, use the +parallels-c2v-agent --regkey _&lt;auth_key&gt;_+ command on the server where the container is residing (+_&lt;auth_key&gt;_+ can be any alphanumeric value).
|====

.Physical Computer-to-Virtual Machine Migration Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+-r, --reg[=&lt;y{brvbar}n&gt;]+|Specifies whether to register the resulting virtual machine on the hardware node. By default, the virtual machine is registered.
|+--osdata=_&lt;path&gt;_+|Sets the path to the directory with data files required for the OS reconfiguration and not found on the source computer.
|`-a, --all`|Migrate all computer's disks and partitions with all available data. If this option is omitted:

[options="compact"]
* For a Windows source computer, only boot and system volumes are migrated.
* For a Linux source computer, only the partitions specified in the `/etc/fstab` file on the source are migrated.
|+--key=_&lt;auth_key&gt;_+|Set the authentication key for passwordless access to the physical computer you want to migrate. To set this key on the computer, use the +parallels-transporter-agent --regkey _&lt;auth_key&gt;_+ command (+_&lt;auth_key&gt;_+ can be any alphanumeric value).
|====

.Xen Virtual Machine-to-Virtual Machine Migration Options
[options="header",cols="2a,3a"]
|====
|Name|Description

|+-r, --reg[=&lt;y{brvbar}n&gt;]+|Specifies whether to register the resulting virtual machine on the hardware node. By default, the virtual machine is registered.
|+--osdata=_&lt;path&gt;_+|Sets the path to the directory with data files required for the OS reconfiguration and not found on the source virtual machine.
|+--key=_&lt;auth_key&gt;_+|Set the authentication key for passwordless access to the Xen server. To set this key on the Xen server, use the +parallels-transporter-agent --regkey _&lt;auth_key&gt;_+ command (+_&lt;auth_key&gt;_+ can be any alphanumeric value).
|+--ip=_&lt;IP_address&gt;_[/_&lt;mask&gt;_]+|Sets the IP address for the resulting virtual machine. If this option is omitted, the DHCP support is enabled for the virtual machine.
|+--gw=_&lt;IP_address&gt;_+|Sets the default gateway for the resulting virtual machine. If this options is omitted, the DHCP support is enabled for the virtual machine.
|+--nameserver=_&lt;IP_address&gt;_+|Sets the DNS server for the resulting virtual machine.
|+--searchdomain=_&lt;domain&gt;_+|Sets the DNS search domain for the resulting virtual machine.
|====

Managing Virtual Machine Backups
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  
This section describes the utilities you can use for creating and managing virtual machine backups.

prlctl backup, backup-list, backup-delete, restore
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
Creates, lists, deletes or restores virtual machine backups.
  
.Syntax
[subs="quotes"]
----
prlctl backup _&lt;vm_name&gt;_ [-f, --full] [-i, --incremental] [--description _&lt;desc&gt;_]
              [-s, --storage [__&lt;user&gt;__[:__&lt;passwd&gt;__]@]__&lt;server&gt;__[:__&lt;port&gt;__]]
prlctl backup-list [_&lt;vm_name&gt;_] [-f, --full] [--localvms]
                   [-s, --storage [__&lt;user&gt;__[:__&lt;passwd&gt;__]@]__&lt;server&gt;__[:__&lt;port&gt;__]]
prlctl backup-delete {_&lt;vm_name&gt;_ | -t, --tag _&lt;backup_ID&gt;_}
                     [-s, --storage [__&lt;user&gt;__[:__&lt;passwd&gt;__]@]__&lt;server&gt;__[:__&lt;port&gt;__]]
prlctl restore {_&lt;vm_name&gt;_ | -t, --tag _&lt;backup_ID&gt;_} [-n, --name _&lt;new_name&gt;_]
               [--dst=_&lt;path&gt;_] [-s, --storage [__&lt;user&gt;__[:__&lt;passwd&gt;__]@]__&lt;server&gt;__[:__&lt;port&gt;__]]
----

.Options
[options="header",cols="1a,1a"]
|====
|Name|Description

|+_&lt;vm_name&gt;_+|Virtual machine name.

[options="compact"]
* Use with `prlctl backup` to create a backup of the specified virtual machine.
* Use with `prlctl backup-list` to list backups of the specified virtual machine.
* Use with `prlctl backup-delete` to delete all backups of the specified virtual machine.
* Use with `prlctl restore` to restore the most recent backup of the specified virtual machine.
|+-s, --storage [__&lt;user&gt;__[:__&lt;passwd&gt;__]@]__&lt;server&gt;__[:__&lt;port&gt;__]+|Specifies a remote backup server address, port, and credentials. If this option is omitted, the backup will be saved on the default backup server that can be configured using the `prlsrvctl set` command.
|+--description _&lt;desc&gt;_+|Backup description. Descriptions with white spaces must be enclosed in quotation marks.
|`-f, --full`|[options="compact"]
* Use with `prlctl backup` to create a full backup of the virtual machine. A full backup contains all virtual machine data.
* Use with `prlctl backup-list` to display full backup information.
|`-i, --incremental`|Create an incremental backup of the virtual machine. An incremental backup contains only the files changed since the previous full or incremental backup. This is the default backup type.
|`--localvms`|List local backups only.
|+-t, --tag _&lt;backup_ID&gt;_+|The ID of the backup to restore or delete.
|+-n, --name _&lt;new_name&gt;_+|A new name to assign to the restored virtual machine. If omitted, the virtual machine will be restored with the original name.
|+--dst=_&lt;path&gt;_+|Restore the virtual machine to the specified directory on the hardware node. If this option is omitted, the virtual machine will be restored to +/var/parallels/_&lt;vm_name&gt;_+.
|====

prl_disk_tool
~~~~~~~~~~~~~

The `prl_disk_tool` utility is used to manage virtual hard disk drives.
  
.Syntax
[subs="quotes"]
----
prl_disk_tool _&lt;command&gt;_ [_&lt;options&gt;_] --hdd _&lt;disk_path&gt;_ [_&lt;options&gt;_]
prl_disk_tool --help
----

prl_disk_tool compact
^^^^^^^^^^^^^^^^^^^^^

Removes all empty blocks from the expanding virtual disk to reduce its size on the physical hard disk. The virtual disk must be formatted to NTFS, ext2/ext3/ext4, btrfs, or xfs.
  
.Syntax
[subs="quotes"]
----
prl_disk_tool compact --hdd _&lt;disk_path&gt;_ [--force]
prl_disk_tool compact -i, --info --hdd _&lt;disk_path&gt;_
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+--hdd _&lt;disk_path&gt;_+|Full path to the virtual disk.
|`--force`|Forces the compacting operation for suspended virtual disks.
|`-i, --info`|Do not compact the virtual disk; just display the information about the size the disk  will have after compacting.
|====

prl_disk_tool merge
^^^^^^^^^^^^^^^^^^^
 
Merges all snapshots of the virtual hard disk.
  
.Syntax
[subs="quotes"]
----
prl_disk_tool merge --hdd _&lt;disk_path&gt;_
----
  
.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|+--hdd _&lt;disk_path&gt;_+|Full path to the virtual disk.
|====

prl_disk_tool resize
^^^^^^^^^^^^^^^^^^^^

Changes the capacity of the specified virtual disk. During resizing, all data present on the disk volumes are left intact. You can also resize the last partition using the --resize_partition option. The supported file systems are NTFS, ext2/ext3/ext4, btrfs, or xfs.

.Syntax
[subs="quotes"]
----
prl_disk_tool resize --size _&lt;size&gt;_[K|M|G|T] [--resize_partition] --hdd _&lt;disk_path&gt;_
                     [--force]
prl_disk_tool resize -i, --info [--units &lt;K|M|G|T&gt;] --hdd _&lt;disk_path&gt;_
----

.Options
[options="header",cols="1a,3a"]
|====
|Name|Description

|`--size`|New size of the virtual disk. It can be set in kilobytes (specify `K` after the value), megabytes (`M`), gigabytes (`G`), or terabytes (`T`). By default, the size is set in megabytes.
|`--resize_partition`|Resizes the last partition of the specified virtual disk.

[NOTE]
[subs="quotes"]
====
*Note:* You cannot reduce XFS filesystems (the default choice for CentOS 7 and Red Hat Enterprise Linux 7).
====
|+--hdd _&lt;disk_path&gt;_+|Full path to the virtual disk.
|`--force`|Forces the resizing operation for suspended virtual disks.
|`-i, --info`|Do not resize the virtual disk; just show the size the disk will have after resizing.
|`--units`|Displays the disk size in kilobytes (`K`), megabytes (`M`, default), gigabytes (`G`), or terabyles (`T`).
|====
